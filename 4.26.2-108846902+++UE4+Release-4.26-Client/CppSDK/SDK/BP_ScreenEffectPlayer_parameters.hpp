#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ScreenEffectPlayer

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.ExecuteUbergraph_BP_ScreenEffectPlayer
// 0x0024 (0x0024 - 0x0000)
struct BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_3;    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer) == 0x000004, "Wrong alignment on BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer");
static_assert(sizeof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer) == 0x000024, "Wrong size on BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, EntryPoint) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000005, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000006, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x000007, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000009, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00000A, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x00000B, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, K2Node_Event_DeltaSeconds) == 0x00000C, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_Lerp_ReturnValue) == 0x000014, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_Lerp_ReturnValue_1) == 0x000018, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_GreaterEqual_FloatFloat_ReturnValue_3) == 0x00001D, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_GreaterEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_Not_PreBool_ReturnValue) == 0x00001E, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_BooleanAND_ReturnValue) == 0x00001F, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, K2Node_Event_EndPlayReason) == 0x000020, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_ScreenEffectPlayer_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_ScreenEffectPlayer_C_ReceiveEndPlay");
static_assert(sizeof(BP_ScreenEffectPlayer_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_ScreenEffectPlayer_C_ReceiveEndPlay");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ScreenEffectPlayer_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ScreenEffectPlayer_C_ReceiveTick");
static_assert(sizeof(BP_ScreenEffectPlayer_C_ReceiveTick) == 0x000004, "Wrong size on BP_ScreenEffectPlayer_C_ReceiveTick");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.UserConstructionScript
// 0x00D0 (0x00D0 - 0x0000)
struct BP_ScreenEffectPlayer_C_UserConstructionScript final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0030(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_ScreenEffectPlayer_C_UserConstructionScript");
static_assert(sizeof(BP_ScreenEffectPlayer_C_UserConstructionScript) == 0x0000D0, "Wrong size on BP_ScreenEffectPlayer_C_UserConstructionScript");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UserConstructionScript, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000030, "Member 'BP_ScreenEffectPlayer_C_UserConstructionScript::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.StartPlayer
// 0x00C0 (0x00C0 - 0x0000)
struct BP_ScreenEffectPlayer_C_StartPlayer final
{
public:
	int32                                         ___int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllAttachChildrenOfActor_ReturnValue;  // 0x0010(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UActorComponent*>                CallFunc_GetComponentsByInterface_ReturnValue;     // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> ___delegate_Variable;                              // 0x0050(0x0028)(ConstParm, ZeroConstructor)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6[0x2];                                       // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_LoadPrefabWithAsset_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_StartPlayer) == 0x000008, "Wrong alignment on BP_ScreenEffectPlayer_C_StartPlayer");
static_assert(sizeof(BP_ScreenEffectPlayer_C_StartPlayer) == 0x0000C0, "Wrong size on BP_ScreenEffectPlayer_C_StartPlayer");
static_assert(offsetof(BP_ScreenEffectPlayer_C_StartPlayer, ___int_Array_Index_Variable) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_StartPlayer::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_StartPlayer, ___int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ScreenEffectPlayer_C_StartPlayer::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_StartPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ScreenEffectPlayer_C_StartPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_StartPlayer, CallFunc_GetAllAttachChildrenOfActor_ReturnValue) == 0x000010, "Member 'BP_ScreenEffectPlayer_C_StartPlayer::CallFunc_GetAllAttachChildrenOfActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_StartPlayer, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_ScreenEffectPlayer_C_StartPlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_StartPlayer, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_ScreenEffectPlayer_C_StartPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_StartPlayer, CallFunc_GetComponentsByInterface_ReturnValue) == 0x000030, "Member 'BP_ScreenEffectPlayer_C_StartPlayer::CallFunc_GetComponentsByInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_StartPlayer, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_ScreenEffectPlayer_C_StartPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_StartPlayer, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'BP_ScreenEffectPlayer_C_StartPlayer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_StartPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_ScreenEffectPlayer_C_StartPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_StartPlayer, ___delegate_Variable) == 0x000050, "Member 'BP_ScreenEffectPlayer_C_StartPlayer::___delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_StartPlayer, CallFunc_GetObjectName_ReturnValue) == 0x000078, "Member 'BP_ScreenEffectPlayer_C_StartPlayer::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_StartPlayer, CallFunc_PostEvent_ReturnValue) == 0x000088, "Member 'BP_ScreenEffectPlayer_C_StartPlayer::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_StartPlayer, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'BP_ScreenEffectPlayer_C_StartPlayer::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_StartPlayer, CallFunc_IsValid_ReturnValue_1) == 0x0000A0, "Member 'BP_ScreenEffectPlayer_C_StartPlayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_StartPlayer, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000A8, "Member 'BP_ScreenEffectPlayer_C_StartPlayer::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_StartPlayer, CallFunc_Array_Add_ReturnValue_1) == 0x0000B0, "Member 'BP_ScreenEffectPlayer_C_StartPlayer::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_StartPlayer, CallFunc_IsValid_ReturnValue_2) == 0x0000B4, "Member 'BP_ScreenEffectPlayer_C_StartPlayer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_StartPlayer, CallFunc_IsValid_ReturnValue_3) == 0x0000B5, "Member 'BP_ScreenEffectPlayer_C_StartPlayer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_StartPlayer, CallFunc_LoadPrefabWithAsset_ReturnValue) == 0x0000B8, "Member 'BP_ScreenEffectPlayer_C_StartPlayer::CallFunc_LoadPrefabWithAsset_ReturnValue' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.EndPlayer
// 0x0001 (0x0001 - 0x0000)
struct BP_ScreenEffectPlayer_C_EndPlayer final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_EndPlayer) == 0x000001, "Wrong alignment on BP_ScreenEffectPlayer_C_EndPlayer");
static_assert(sizeof(BP_ScreenEffectPlayer_C_EndPlayer) == 0x000001, "Wrong size on BP_ScreenEffectPlayer_C_EndPlayer");
static_assert(offsetof(BP_ScreenEffectPlayer_C_EndPlayer, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_EndPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.UpdateComponents
// 0x00C8 (0x00C8 - 0x0000)
struct BP_ScreenEffectPlayer_C_UpdateComponents final
{
public:
	int32                                         ___int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SafeDivide_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SafeDivide_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SafeDivide_ReturnValue_2;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISE_ControllerInterface_C> K2Node_DynamicCast_AsSE_Controller_Interface;      // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISE_ControllerInterface_C> K2Node_DynamicCast_AsSE_Controller_Interface_1;    // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISE_ControllerInterface_C> K2Node_DynamicCast_AsSE_Controller_Interface_2;    // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISE_ControllerInterface_C> K2Node_DynamicCast_AsSE_Controller_Interface_3;    // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISE_ControllerInterface_C> K2Node_DynamicCast_AsSE_Controller_Interface_4;    // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISE_ControllerInterface_C> K2Node_DynamicCast_AsSE_Controller_Interface_5;    // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_UpdateComponents) == 0x000008, "Wrong alignment on BP_ScreenEffectPlayer_C_UpdateComponents");
static_assert(sizeof(BP_ScreenEffectPlayer_C_UpdateComponents) == 0x0000C8, "Wrong size on BP_ScreenEffectPlayer_C_UpdateComponents");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, ___int_Array_Index_Variable) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, ___int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_SwitchEnum_CmpSuccess) == 0x00000C, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, CallFunc_SafeDivide_ReturnValue) == 0x000010, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_SwitchEnum_CmpSuccess_1) == 0x000014, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, CallFunc_SafeDivide_ReturnValue_1) == 0x000018, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::CallFunc_SafeDivide_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, CallFunc_SafeDivide_ReturnValue_2) == 0x00001C, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::CallFunc_SafeDivide_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_AsSE_Controller_Interface) == 0x000038, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_AsSE_Controller_Interface' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_AsSE_Controller_Interface_1) == 0x000050, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_AsSE_Controller_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_AsSE_Controller_Interface_2) == 0x000068, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_AsSE_Controller_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_AsSE_Controller_Interface_3) == 0x000080, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_AsSE_Controller_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_bSuccess_3) == 0x000090, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_AsSE_Controller_Interface_4) == 0x000098, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_AsSE_Controller_Interface_4' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_bSuccess_4) == 0x0000A8, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_AsSE_Controller_Interface_5) == 0x0000B0, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_AsSE_Controller_Interface_5' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_bSuccess_5) == 0x0000C0, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.UpdateComponentsAlpha
// 0x0038 (0x0038 - 0x0000)
struct BP_ScreenEffectPlayer_C_UpdateComponentsAlpha final
{
public:
	int32                                         ___int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISE_ControllerInterface_C> K2Node_DynamicCast_AsSE_Controller_Interface;      // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_UpdateComponentsAlpha) == 0x000008, "Wrong alignment on BP_ScreenEffectPlayer_C_UpdateComponentsAlpha");
static_assert(sizeof(BP_ScreenEffectPlayer_C_UpdateComponentsAlpha) == 0x000038, "Wrong size on BP_ScreenEffectPlayer_C_UpdateComponentsAlpha");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponentsAlpha, ___int_Array_Index_Variable) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_UpdateComponentsAlpha::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponentsAlpha, ___int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ScreenEffectPlayer_C_UpdateComponentsAlpha::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponentsAlpha, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ScreenEffectPlayer_C_UpdateComponentsAlpha::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponentsAlpha, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_ScreenEffectPlayer_C_UpdateComponentsAlpha::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponentsAlpha, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_ScreenEffectPlayer_C_UpdateComponentsAlpha::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponentsAlpha, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_ScreenEffectPlayer_C_UpdateComponentsAlpha::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponentsAlpha, K2Node_DynamicCast_AsSE_Controller_Interface) == 0x000020, "Member 'BP_ScreenEffectPlayer_C_UpdateComponentsAlpha::K2Node_DynamicCast_AsSE_Controller_Interface' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponentsAlpha, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_ScreenEffectPlayer_C_UpdateComponentsAlpha::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.SetUIVisible
// 0x0058 (0x0058 - 0x0000)
struct BP_ScreenEffectPlayer_C_SetUIVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_1;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_1;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISE_ControllerInterface_C> K2Node_DynamicCast_AsSE_Controller_Interface;      // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_SetUIVisible) == 0x000008, "Wrong alignment on BP_ScreenEffectPlayer_C_SetUIVisible");
static_assert(sizeof(BP_ScreenEffectPlayer_C_SetUIVisible) == 0x000058, "Wrong size on BP_ScreenEffectPlayer_C_SetUIVisible");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, Visible) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, ___int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, ___int_Array_Index_Variable) == 0x00000C, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, ___int_Array_Index_Variable_1) == 0x000010, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::___int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, ___int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::___int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, K2Node_DynamicCast_AsSE_Controller_Interface) == 0x000028, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::K2Node_DynamicCast_AsSE_Controller_Interface' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000040, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, CallFunc_Less_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.Set Effect Hidden
// 0x0008 (0x0008 - 0x0000)
struct BP_ScreenEffectPlayer_C_Set_Effect_Hidden final
{
public:
	bool                                          Param_bToHide;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOverrideFadeSpeed;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OverrideFadeSpeed;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_Set_Effect_Hidden) == 0x000004, "Wrong alignment on BP_ScreenEffectPlayer_C_Set_Effect_Hidden");
static_assert(sizeof(BP_ScreenEffectPlayer_C_Set_Effect_Hidden) == 0x000008, "Wrong size on BP_ScreenEffectPlayer_C_Set_Effect_Hidden");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Set_Effect_Hidden, Param_bToHide) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_Set_Effect_Hidden::Param_bToHide' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Set_Effect_Hidden, bOverrideFadeSpeed) == 0x000001, "Member 'BP_ScreenEffectPlayer_C_Set_Effect_Hidden::bOverrideFadeSpeed' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Set_Effect_Hidden, OverrideFadeSpeed) == 0x000004, "Member 'BP_ScreenEffectPlayer_C_Set_Effect_Hidden::OverrideFadeSpeed' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.BeforeStart
// 0x0038 (0x0038 - 0x0000)
struct BP_ScreenEffectPlayer_C_BeforeStart final
{
public:
	int32                                         ___int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISE_ControllerInterface_C> K2Node_DynamicCast_AsSE_Controller_Interface;      // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_BeforeStart) == 0x000008, "Wrong alignment on BP_ScreenEffectPlayer_C_BeforeStart");
static_assert(sizeof(BP_ScreenEffectPlayer_C_BeforeStart) == 0x000038, "Wrong size on BP_ScreenEffectPlayer_C_BeforeStart");
static_assert(offsetof(BP_ScreenEffectPlayer_C_BeforeStart, ___int_Array_Index_Variable) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_BeforeStart::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_BeforeStart, ___int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ScreenEffectPlayer_C_BeforeStart::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_BeforeStart, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ScreenEffectPlayer_C_BeforeStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_BeforeStart, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_ScreenEffectPlayer_C_BeforeStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_BeforeStart, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_ScreenEffectPlayer_C_BeforeStart::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_BeforeStart, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_ScreenEffectPlayer_C_BeforeStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_BeforeStart, K2Node_DynamicCast_AsSE_Controller_Interface) == 0x000020, "Member 'BP_ScreenEffectPlayer_C_BeforeStart::K2Node_DynamicCast_AsSE_Controller_Interface' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_BeforeStart, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_ScreenEffectPlayer_C_BeforeStart::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.InitPlayer
// 0x0010 (0x0010 - 0x0000)
struct BP_ScreenEffectPlayer_C_InitPlayer final
{
public:
	class UEffectScreenPlayData_C*                Param_Data;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AUIContainerActor*                      Param_ScreenEffectRoot;                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_InitPlayer) == 0x000008, "Wrong alignment on BP_ScreenEffectPlayer_C_InitPlayer");
static_assert(sizeof(BP_ScreenEffectPlayer_C_InitPlayer) == 0x000010, "Wrong size on BP_ScreenEffectPlayer_C_InitPlayer");
static_assert(offsetof(BP_ScreenEffectPlayer_C_InitPlayer, Param_Data) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_InitPlayer::Param_Data' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_InitPlayer, Param_ScreenEffectRoot) == 0x000008, "Member 'BP_ScreenEffectPlayer_C_InitPlayer::Param_ScreenEffectRoot' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.Destroy Player
// 0x0001 (0x0001 - 0x0000)
struct BP_ScreenEffectPlayer_C_Destroy_Player final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_Destroy_Player) == 0x000001, "Wrong alignment on BP_ScreenEffectPlayer_C_Destroy_Player");
static_assert(sizeof(BP_ScreenEffectPlayer_C_Destroy_Player) == 0x000001, "Wrong size on BP_ScreenEffectPlayer_C_Destroy_Player");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Destroy_Player, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_Destroy_Player::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.UpdatePlayerSEEnvironmentFactor
// 0x0070 (0x0070 - 0x0000)
struct BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor final
{
public:
	float                                         EnvironmentFactor;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_1;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_1;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISE_ControllerInterface_C> K2Node_DynamicCast_AsSE_Controller_Interface;      // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISE_ControllerInterface_C> K2Node_DynamicCast_AsSE_Controller_Interface_1;    // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor) == 0x000008, "Wrong alignment on BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor");
static_assert(sizeof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor) == 0x000070, "Wrong size on BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, EnvironmentFactor) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::EnvironmentFactor' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, ___int_Array_Index_Variable) == 0x000004, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, ___int_Loop_Counter_Variable) == 0x000008, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, ___int_Array_Index_Variable_1) == 0x000010, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::___int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, ___int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::___int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, K2Node_DynamicCast_AsSE_Controller_Interface) == 0x000020, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::K2Node_DynamicCast_AsSE_Controller_Interface' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, K2Node_DynamicCast_AsSE_Controller_Interface_1) == 0x000048, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::K2Node_DynamicCast_AsSE_Controller_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, CallFunc_Less_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, CallFunc_Lerp_ReturnValue) == 0x000064, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, CallFunc_Not_PreBool_ReturnValue) == 0x000069, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

