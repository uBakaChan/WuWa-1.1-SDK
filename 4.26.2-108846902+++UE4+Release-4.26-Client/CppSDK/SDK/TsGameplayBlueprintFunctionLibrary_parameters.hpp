#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsGameplayBlueprintFunctionLibrary

#include "Basic.hpp"

#include "EVisionType_structs.hpp"
#include "SVisionCounterAttack_structs.hpp"
#include "ECharViewDirectionState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EAimViewState_structs.hpp"
#include "ECharParentMoveState_structs.hpp"
#include "ECharState_structs.hpp"
#include "Engine_structs.hpp"
#include "SSkillInfo_structs.hpp"
#include "SCounterAttackBuff_structs.hpp"
#include "EHitAnim_structs.hpp"
#include "SCounterAttack_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "SHitInformation_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ContainsTag
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ContainsTag final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag;                                               // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ContainsTag) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ContainsTag");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ContainsTag) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ContainsTag");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ContainsTag, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ContainsTag::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ContainsTag, Tag) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_ContainsTag::Tag' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ContainsTag, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ContainsTag::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ContainsTag, ReturnValue) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_ContainsTag::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.AddTag
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_AddTag final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag;                                               // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_AddTag) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_AddTag");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_AddTag) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_AddTag");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddTag, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddTag::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddTag, Tag) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddTag::Tag' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddTag, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddTag::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.AddTagWithDuration
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag;                                               // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration, Duration) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration::Duration' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration, Tag) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration::Tag' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.AddTagByName
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_AddTagByName final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TagName;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_AddTagByName) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_AddTagByName");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_AddTagByName) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_AddTagByName");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddTagByName, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddTagByName::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddTagByName, TagName) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddTagByName::TagName' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddTagByName, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddTagByName::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.RemoveTag
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_RemoveTag final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag;                                               // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_RemoveTag) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_RemoveTag");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_RemoveTag) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_RemoveTag");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveTag, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveTag::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveTag, Tag) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveTag::Tag' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveTag, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveTag::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.RemoveTagByName
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_RemoveTagByName final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TagName;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_RemoveTagByName) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_RemoveTagByName");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_RemoveTagByName) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_RemoveTagByName");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveTagByName, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveTagByName::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveTagByName, TagName) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveTagByName::TagName' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveTagByName, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveTagByName::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.IsLogicAutonomousProxy
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_IsLogicAutonomousProxy final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_IsLogicAutonomousProxy) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_IsLogicAutonomousProxy");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_IsLogicAutonomousProxy) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_IsLogicAutonomousProxy");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsLogicAutonomousProxy, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsLogicAutonomousProxy::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsLogicAutonomousProxy, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsLogicAutonomousProxy::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsLogicAutonomousProxy, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsLogicAutonomousProxy::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.RemoveActiveGameplayEffect
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            Handle;                                            // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         StacksToRemove;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect, Handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect::Handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect, StacksToRemove) == 0x00000C, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect::StacksToRemove' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect, ReturnValue) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.RemoveBuffByTag
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_RemoveBuffByTag final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag;                                               // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_RemoveBuffByTag) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_RemoveBuffByTag");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_RemoveBuffByTag) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_RemoveBuffByTag");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveBuffByTag, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveBuffByTag::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveBuffByTag, Tag) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveBuffByTag::Tag' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveBuffByTag, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveBuffByTag::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.AddPassiveSkill
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_AddPassiveSkill final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         PassiveSkillId;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_AddPassiveSkill) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_AddPassiveSkill");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_AddPassiveSkill) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_AddPassiveSkill");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddPassiveSkill, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddPassiveSkill::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddPassiveSkill, PassiveSkillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddPassiveSkill::PassiveSkillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddPassiveSkill, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddPassiveSkill::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.RemovePassiveSkill
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_RemovePassiveSkill final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         PassiveSkillId;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_RemovePassiveSkill) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_RemovePassiveSkill");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_RemovePassiveSkill) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_RemovePassiveSkill");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemovePassiveSkill, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemovePassiveSkill::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemovePassiveSkill, PassiveSkillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemovePassiveSkill::PassiveSkillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemovePassiveSkill, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemovePassiveSkill::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.AddBuffForDebug
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug final
{
public:
	int32                                         InstigatorEntityId;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetEntityId;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         buffId;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug, InstigatorEntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug::InstigatorEntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug, TargetEntityId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug::TargetEntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug, buffId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug::buffId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.AddBuffFromGA
// 0x0038 (0x0038 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         buffId;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 SkillId;                                           // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         AddCount;                                          // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA) == 0x000038, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA, Target) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA::Target' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA, buffId) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA::buffId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA, SkillId) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA::SkillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA, AddCount) == 0x000028, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA::AddCount' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA, __WorldContext) == 0x000030, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.RemoveBuffById
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         buffId;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StackCount;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById, buffId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById::buffId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById, StackCount) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById::StackCount' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffCountById
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         buffId;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnforceOnGoingCheck;                               // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById, buffId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById::buffId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById, EnforceOnGoingCheck) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById::EnforceOnGoingCheck' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById, ReturnValue) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.AddGameplayCueLocal
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CueId;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal, Duration) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal::Duration' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal, CueId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal::CueId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetGeDebugString
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetGeDebugString final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetGeDebugString) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetGeDebugString");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetGeDebugString) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetGeDebugString");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetGeDebugString, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetGeDebugString::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetGeDebugString, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetGeDebugString::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetGeDebugString, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetGeDebugString::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetTagDebugStrings
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetTagDebugStrings final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetTagDebugStrings) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetTagDebugStrings");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetTagDebugStrings) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetTagDebugStrings");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetTagDebugStrings, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetTagDebugStrings::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetTagDebugStrings, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetTagDebugStrings::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetTagDebugStrings, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetTagDebugStrings::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffDebugStrings
// 0x0030 (0x0030 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 buffStr;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings) == 0x000030, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings, buffStr) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings::buffStr' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings, ReturnValue) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetShieldDebugString
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetShieldDebugString final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetShieldDebugString) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetShieldDebugString");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetShieldDebugString) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetShieldDebugString");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetShieldDebugString, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetShieldDebugString::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetShieldDebugString, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetShieldDebugString::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetShieldDebugString, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetShieldDebugString::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetPassiveSkillDebugString
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetPassiveSkillDebugString final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetPassiveSkillDebugString) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetPassiveSkillDebugString");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetPassiveSkillDebugString) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetPassiveSkillDebugString");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPassiveSkillDebugString, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPassiveSkillDebugString::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPassiveSkillDebugString, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPassiveSkillDebugString::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPassiveSkillDebugString, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPassiveSkillDebugString::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetShieldValue
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetShieldValue final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ShieldCid;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetShieldValue) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetShieldValue");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetShieldValue) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetShieldValue");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetShieldValue, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetShieldValue::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetShieldValue, ShieldCid) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetShieldValue::ShieldCid' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetShieldValue, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetShieldValue::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetShieldValue, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetShieldValue::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetAttributeDebugString
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetAttributeDebugString final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeDebugString) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetAttributeDebugString");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeDebugString) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetAttributeDebugString");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeDebugString, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAttributeDebugString::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeDebugString, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAttributeDebugString::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeDebugString, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAttributeDebugString::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetAllAttributeDebugStrings
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetAllAttributeDebugStrings final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetAllAttributeDebugStrings) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetAllAttributeDebugStrings");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetAllAttributeDebugStrings) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetAllAttributeDebugStrings");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAllAttributeDebugStrings, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAllAttributeDebugStrings::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAllAttributeDebugStrings, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAllAttributeDebugStrings::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAllAttributeDebugStrings, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAllAttributeDebugStrings::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetServerBuffString
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetServerBuffString final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetServerBuffString) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetServerBuffString");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetServerBuffString) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetServerBuffString");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerBuffString, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerBuffString::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerBuffString, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerBuffString::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerBuffString, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerBuffString::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetServerTagString
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetServerTagString final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetServerTagString) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetServerTagString");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetServerTagString) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetServerTagString");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerTagString, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerTagString::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerTagString, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerTagString::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerTagString, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerTagString::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetServerAttributeString
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetServerAttributeString final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetServerAttributeString) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetServerAttributeString");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetServerAttributeString) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetServerAttributeString");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerAttributeString, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerAttributeString::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerAttributeString, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerAttributeString::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerAttributeString, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerAttributeString::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetServerPartString
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetServerPartString final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetServerPartString) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetServerPartString");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetServerPartString) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetServerPartString");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerPartString, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerPartString::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerPartString, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerPartString::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerPartString, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerPartString::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetServerHateString
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetServerHateString final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetServerHateString) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetServerHateString");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetServerHateString) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetServerHateString");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerHateString, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerHateString::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerHateString, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerHateString::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerHateString, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerHateString::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetServerShieldString
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetServerShieldString final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetServerShieldString) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetServerShieldString");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetServerShieldString) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetServerShieldString");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerShieldString, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerShieldString::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerShieldString, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerShieldString::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerShieldString, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerShieldString::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ServerDebugInfoRequest
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ServerDebugInfoRequest final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ServerDebugInfoRequest) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ServerDebugInfoRequest");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ServerDebugInfoRequest) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ServerDebugInfoRequest");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ServerDebugInfoRequest, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ServerDebugInfoRequest::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ServerDebugInfoRequest, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ServerDebugInfoRequest::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetServerDebugInfoDirty
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetServerDebugInfoDirty final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetServerDebugInfoDirty) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetServerDebugInfoDirty");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetServerDebugInfoDirty) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetServerDebugInfoDirty");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerDebugInfoDirty, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerDebugInfoDirty::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerDebugInfoDirty, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerDebugInfoDirty::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerDebugInfoDirty, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerDebugInfoDirty::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetServerDebugInfoDirty
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetServerDebugInfoDirty final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Val;                                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetServerDebugInfoDirty) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetServerDebugInfoDirty");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetServerDebugInfoDirty) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetServerDebugInfoDirty");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetServerDebugInfoDirty, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetServerDebugInfoDirty::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetServerDebugInfoDirty, Val) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetServerDebugInfoDirty::Val' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetServerDebugInfoDirty, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetServerDebugInfoDirty::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.DebugResetBaseVal
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Id;                                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Val;                                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal, Id) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal::Id' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal, Val) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal::Val' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.DebugResetFormationValue
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_DebugResetFormationValue final
{
public:
	int32                                         Id;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Val;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_DebugResetFormationValue) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_DebugResetFormationValue");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_DebugResetFormationValue) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_DebugResetFormationValue");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DebugResetFormationValue, Id) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_DebugResetFormationValue::Id' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DebugResetFormationValue, Val) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_DebugResetFormationValue::Val' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DebugResetFormationValue, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_DebugResetFormationValue::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.Record
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_Record final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Record;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_Record) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_Record");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_Record) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_Record");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_Record, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_Record::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_Record, Param_Record) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_Record::Param_Record' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_Record, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_Record::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_Record, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_Record::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.RefreshEntityListView
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_RefreshEntityListView final
{
public:
	class UListView*                              ListView;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_RefreshEntityListView) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_RefreshEntityListView");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_RefreshEntityListView) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_RefreshEntityListView");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RefreshEntityListView, ListView) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_RefreshEntityListView::ListView' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RefreshEntityListView, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_RefreshEntityListView::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.RefreshEntityComboBox
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_RefreshEntityComboBox final
{
public:
	class UComboBoxString*                        ComboBox;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_RefreshEntityComboBox) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_RefreshEntityComboBox");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_RefreshEntityComboBox) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_RefreshEntityComboBox");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RefreshEntityComboBox, ComboBox) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_RefreshEntityComboBox::ComboBox' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RefreshEntityComboBox, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_RefreshEntityComboBox::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetEntityComboBox
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetEntityComboBox final
{
public:
	class UComboBoxString*                        ComboBox;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EntityId;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetEntityComboBox) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetEntityComboBox");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetEntityComboBox) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetEntityComboBox");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetEntityComboBox, ComboBox) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetEntityComboBox::ComboBox' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetEntityComboBox, EntityId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetEntityComboBox::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetEntityComboBox, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetEntityComboBox::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetDebugEntityId
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetDebugEntityId final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetDebugEntityId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetDebugEntityId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetDebugEntityId) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetDebugEntityId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetDebugEntityId, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetDebugEntityId::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetDebugEntityId, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetDebugEntityId::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetDebugEntityId
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetDebugEntityId final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetDebugEntityId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetDebugEntityId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetDebugEntityId) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetDebugEntityId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetDebugEntityId, __WorldContext) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetDebugEntityId::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetDebugEntityId, ReturnValue) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetDebugEntityId::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.RefreshBuffListView
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UListView*                              ListView;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 FilterStr;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView, ListView) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView::ListView' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView, FilterStr) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView::FilterStr' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView, __WorldContext) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffIdByHandle
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle, Handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle::Handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffServerIdByHandle
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle, Handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle::Handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffDescByHandle
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle, Handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle::Handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffActivateByHandle
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle, Handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle::Handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffInstigatorStringByHandle
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle, Handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle::Handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffPeriodStringByHandle
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle, Handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle::Handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffDurationStringByHandle
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle, Handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle::Handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffDurationProgress
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress, Handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress::Handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffLivingStatusStringByHandle
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle, Handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle::Handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffLevelStringByHandle
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle, Handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle::Handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffStackStringByHandle
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle, Handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle::Handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffDebugStringByHandle
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle, Handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle::Handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetDistance
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetDistance final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetDistance) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetDistance");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetDistance) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetDistance");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetDistance, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetDistance::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetDistance, Max) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetDistance::Max' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetDistance, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetDistance::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetAllMovementHistory
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetAllMovementHistory final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetAllMovementHistory) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetAllMovementHistory");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetAllMovementHistory) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetAllMovementHistory");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAllMovementHistory, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAllMovementHistory::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAllMovementHistory, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAllMovementHistory::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAllMovementHistory, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAllMovementHistory::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetAttributeCurrentValue
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AttributeId;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue, AttributeId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue::AttributeId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetAttributeBaseValue
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AttributeId;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue, AttributeId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue::AttributeId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetRageModeId
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetRageModeId final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Id;                                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetRageModeId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetRageModeId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetRageModeId) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetRageModeId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetRageModeId, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetRageModeId::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetRageModeId, Id) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetRageModeId::Id' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetRageModeId, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetRageModeId::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetHardnessModeId
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetHardnessModeId final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Id;                                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetHardnessModeId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetHardnessModeId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetHardnessModeId) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetHardnessModeId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetHardnessModeId, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetHardnessModeId::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetHardnessModeId, Id) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetHardnessModeId::Id' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetHardnessModeId, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetHardnessModeId::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.OnHit
// 0x0818 (0x0818 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_OnHit final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSHitInformation                       HitData;                                           // 0x0008(0x0808)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0810(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_OnHit) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_OnHit");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_OnHit) == 0x000818, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_OnHit");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnHit, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnHit::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnHit, HitData) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnHit::HitData' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnHit, __WorldContext) == 0x000810, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnHit::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetBeHitIgnoreRotate
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetBeHitIgnoreRotate final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreRotate;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetBeHitIgnoreRotate) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetBeHitIgnoreRotate");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetBeHitIgnoreRotate) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetBeHitIgnoreRotate");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetBeHitIgnoreRotate, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetBeHitIgnoreRotate::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetBeHitIgnoreRotate, IgnoreRotate) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetBeHitIgnoreRotate::IgnoreRotate' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetBeHitIgnoreRotate, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetBeHitIgnoreRotate::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.CheckHasPart
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_CheckHasPart final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_CheckHasPart) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_CheckHasPart");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_CheckHasPart) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_CheckHasPart");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CheckHasPart, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_CheckHasPart::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CheckHasPart, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_CheckHasPart::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CheckHasPart, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_CheckHasPart::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetPartRemainedLife
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag;                                               // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife, Tag) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife::Tag' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife, ReturnValue) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ResetPartLife
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ResetPartLife final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag;                                               // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ResetPartLife) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ResetPartLife");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ResetPartLife) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ResetPartLife");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ResetPartLife, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ResetPartLife::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ResetPartLife, Tag) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_ResetPartLife::Tag' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ResetPartLife, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ResetPartLife::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ActiveStiff
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ActiveStiff final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ActiveStiff) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ActiveStiff");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ActiveStiff) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ActiveStiff");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ActiveStiff, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ActiveStiff::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ActiveStiff, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ActiveStiff::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.DeActiveStiff
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_DeActiveStiff final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_DeActiveStiff) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_DeActiveStiff");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_DeActiveStiff) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_DeActiveStiff");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DeActiveStiff, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_DeActiveStiff::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DeActiveStiff, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_DeActiveStiff::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetAcceptedNewBeHitAndReset
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetAcceptedNewBeHitAndReset final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetAcceptedNewBeHitAndReset) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetAcceptedNewBeHitAndReset");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetAcceptedNewBeHitAndReset) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetAcceptedNewBeHitAndReset");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAcceptedNewBeHitAndReset, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAcceptedNewBeHitAndReset::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAcceptedNewBeHitAndReset, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAcceptedNewBeHitAndReset::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAcceptedNewBeHitAndReset, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAcceptedNewBeHitAndReset::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetEnterFkAndReset
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetEnterFkAndReset final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetEnterFkAndReset) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetEnterFkAndReset");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetEnterFkAndReset) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetEnterFkAndReset");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetEnterFkAndReset, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetEnterFkAndReset::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetEnterFkAndReset, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetEnterFkAndReset::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetEnterFkAndReset, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetEnterFkAndReset::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.IsStiff
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_IsStiff final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_IsStiff) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_IsStiff");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_IsStiff) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_IsStiff");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsStiff, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsStiff::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsStiff, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsStiff::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsStiff, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsStiff::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetRageModeId
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetRageModeId final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetRageModeId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetRageModeId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetRageModeId) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetRageModeId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetRageModeId, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetRageModeId::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetRageModeId, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetRageModeId::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetRageModeId, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetRageModeId::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetHardnessModeId
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetHardnessModeId final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetHardnessModeId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetHardnessModeId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetHardnessModeId) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetHardnessModeId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetHardnessModeId, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetHardnessModeId::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetHardnessModeId, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetHardnessModeId::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetHardnessModeId, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetHardnessModeId::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBeHitBone
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBeHitBone final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitBone) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBeHitBone");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitBone) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBeHitBone");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitBone, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitBone::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitBone, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitBone::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitBone, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitBone::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetToughDecreaseValue
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetToughDecreaseValue final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetToughDecreaseValue) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetToughDecreaseValue");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetToughDecreaseValue) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetToughDecreaseValue");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetToughDecreaseValue, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetToughDecreaseValue::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetToughDecreaseValue, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetToughDecreaseValue::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetToughDecreaseValue, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetToughDecreaseValue::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetCounterAttackInfoInternal
// 0x03A0 (0x03A0 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetCounterAttackInfoInternal final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSCounterAttack                        ReturnValue;                                       // 0x0010(0x0390)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetCounterAttackInfoInternal) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetCounterAttackInfoInternal");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetCounterAttackInfoInternal) == 0x0003A0, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetCounterAttackInfoInternal");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCounterAttackInfoInternal, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCounterAttackInfoInternal::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCounterAttackInfoInternal, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCounterAttackInfoInternal::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCounterAttackInfoInternal, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCounterAttackInfoInternal::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBeHitTime
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBeHitTime final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitTime) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBeHitTime");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitTime) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBeHitTime");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitTime, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitTime::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitTime, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitTime::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitTime, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitTime::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBeHitAnim
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnim final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHitAnim                                      ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnim) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnim");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnim) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnim");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnim, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnim::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnim, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnim::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnim, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnim::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetEnterFk
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetEnterFk final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetEnterFk) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetEnterFk");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetEnterFk) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetEnterFk");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetEnterFk, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetEnterFk::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetEnterFk, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetEnterFk::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetEnterFk, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetEnterFk::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBeHitDirect
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBeHitDirect final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitDirect) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBeHitDirect");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitDirect) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBeHitDirect");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitDirect, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitDirect::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitDirect, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitDirect::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitDirect, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitDirect::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBeHitLocation
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBeHitLocation final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitLocation) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBeHitLocation");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitLocation) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBeHitLocation");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitLocation, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitLocation::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitLocation, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitLocation, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitLocation::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.AddCheckBuffList
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_AddCheckBuffList final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCounterAttackBuff                    AddValue;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_AddCheckBuffList) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_AddCheckBuffList");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_AddCheckBuffList) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_AddCheckBuffList");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddCheckBuffList, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddCheckBuffList::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddCheckBuffList, AddValue) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddCheckBuffList::AddValue' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddCheckBuffList, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddCheckBuffList::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ClearCheckBuffList
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ClearCheckBuffList final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ClearCheckBuffList) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ClearCheckBuffList");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ClearCheckBuffList) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ClearCheckBuffList");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ClearCheckBuffList, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ClearCheckBuffList::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ClearCheckBuffList, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ClearCheckBuffList::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.CounterAttackEnd
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_CounterAttackEnd final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_CounterAttackEnd) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_CounterAttackEnd");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_CounterAttackEnd) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_CounterAttackEnd");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CounterAttackEnd, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_CounterAttackEnd::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CounterAttackEnd, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_CounterAttackEnd::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.VisionCounterAttackEnd
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_VisionCounterAttackEnd final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_VisionCounterAttackEnd) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_VisionCounterAttackEnd");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_VisionCounterAttackEnd) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_VisionCounterAttackEnd");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_VisionCounterAttackEnd, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_VisionCounterAttackEnd::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_VisionCounterAttackEnd, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_VisionCounterAttackEnd::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetCounterAttackEndTime
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetCounterAttackEndTime final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         baseTime;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetCounterAttackEndTime) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetCounterAttackEndTime");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetCounterAttackEndTime) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetCounterAttackEndTime");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetCounterAttackEndTime, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetCounterAttackEndTime::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetCounterAttackEndTime, baseTime) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetCounterAttackEndTime::baseTime' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetCounterAttackEndTime, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetCounterAttackEndTime::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.IsTriggerCounterAttack
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_IsTriggerCounterAttack final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_IsTriggerCounterAttack) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_IsTriggerCounterAttack");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_IsTriggerCounterAttack) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_IsTriggerCounterAttack");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsTriggerCounterAttack, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsTriggerCounterAttack::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsTriggerCounterAttack, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsTriggerCounterAttack::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsTriggerCounterAttack, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsTriggerCounterAttack::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ResetTarget
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ResetTarget final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ResetTarget) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ResetTarget");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ResetTarget) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ResetTarget");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ResetTarget, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ResetTarget::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ResetTarget, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ResetTarget::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetShowTarget
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetShowTarget final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetShowTarget) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetShowTarget");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetShowTarget) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetShowTarget");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetShowTarget, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetShowTarget::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetShowTarget, Actor) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetShowTarget::Actor' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetShowTarget, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetShowTarget::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ExitLockDirection
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ExitLockDirection final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ExitLockDirection) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ExitLockDirection");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ExitLockDirection) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ExitLockDirection");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ExitLockDirection, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ExitLockDirection::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ExitLockDirection, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ExitLockDirection::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.EnterLockDirection
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_EnterLockDirection final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_EnterLockDirection) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_EnterLockDirection");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_EnterLockDirection) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_EnterLockDirection");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EnterLockDirection, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_EnterLockDirection::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EnterLockDirection, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_EnterLockDirection::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetCurrentTarget
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetCurrentTarget final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetCurrentTarget) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetCurrentTarget");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetCurrentTarget) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetCurrentTarget");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCurrentTarget, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCurrentTarget::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCurrentTarget, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCurrentTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCurrentTarget, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCurrentTarget::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetLockOnDebugLine
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetLockOnDebugLine final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShow;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetLockOnDebugLine) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetLockOnDebugLine");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetLockOnDebugLine) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetLockOnDebugLine");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetLockOnDebugLine, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetLockOnDebugLine::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetLockOnDebugLine, IsShow) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetLockOnDebugLine::IsShow' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetLockOnDebugLine, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetLockOnDebugLine::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ManipulateValid
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ManipulateValid final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ManipulateValid) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ManipulateValid");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ManipulateValid) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ManipulateValid");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateValid, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateValid::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateValid, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateValid::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateValid, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateValid::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ManipulateGetDrawTarget
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTarget final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTarget) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTarget");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTarget) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTarget");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTarget, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTarget::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTarget, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTarget, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTarget::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ManipulateGetCastTarget
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ManipulateGetCastTarget final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetCastTarget) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ManipulateGetCastTarget");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetCastTarget) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ManipulateGetCastTarget");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetCastTarget, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateGetCastTarget::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetCastTarget, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateGetCastTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetCastTarget, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateGetCastTarget::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ManipulateGetDrawTargetChantTime
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTargetChantTime final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTargetChantTime) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTargetChantTime");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTargetChantTime) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTargetChantTime");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTargetChantTime, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTargetChantTime::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTargetChantTime, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTargetChantTime::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTargetChantTime, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTargetChantTime::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ManipulateChant
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ManipulateChant final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKuroBooleanEventBinder*                EventBinder;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChant) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ManipulateChant");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChant) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ManipulateChant");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChant, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateChant::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChant, EventBinder) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateChant::EventBinder' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChant, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateChant::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChant, ReturnValue) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateChant::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ManipulateDraw
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ManipulateDraw final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ManipulateDraw) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ManipulateDraw");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ManipulateDraw) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ManipulateDraw");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateDraw, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateDraw::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateDraw, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateDraw::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateDraw, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateDraw::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ManipulateCast
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ManipulateCast final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Direction;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ManipulateCast) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ManipulateCast");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ManipulateCast) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ManipulateCast");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateCast, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateCast::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateCast, Direction) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateCast::Direction' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateCast, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateCast::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateCast, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateCast::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ManipulateReset
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ManipulateReset final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ManipulateReset) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ManipulateReset");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ManipulateReset) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ManipulateReset");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateReset, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateReset::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateReset, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateReset::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ManipulateChangeToProjectileState
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToProjectileState final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToProjectileState) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToProjectileState");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToProjectileState) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToProjectileState");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToProjectileState, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToProjectileState::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToProjectileState, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToProjectileState::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToProjectileState, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToProjectileState::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ManipulateChangeToNormalState
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToNormalState final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToNormalState) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToNormalState");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToNormalState) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToNormalState");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToNormalState, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToNormalState::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToNormalState, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToNormalState::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToNormalState, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToNormalState::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetHoldingActor
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetHoldingActor final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetHoldingActor) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetHoldingActor");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetHoldingActor) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetHoldingActor");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetHoldingActor, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetHoldingActor::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetHoldingActor, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetHoldingActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetHoldingActor, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetHoldingActor::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetDebugDraw
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetDebugDraw final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetDebugDraw) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetDebugDraw");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetDebugDraw) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetDebugDraw");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetDebugDraw, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetDebugDraw::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetDebugDraw, IsActive) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetDebugDraw::IsActive' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetDebugDraw, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetDebugDraw::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ExtraAction
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ExtraAction final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ExtraAction) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ExtraAction");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ExtraAction) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ExtraAction");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ExtraAction, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ExtraAction::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ExtraAction, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ExtraAction::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetQtePosition
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetQtePosition final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rotate;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Length;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Height;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReferenceTarget;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AdjustWithMonster;                                 // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AddHeight;                                         // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         QteType;                                           // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetQtePosition) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetQtePosition");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetQtePosition) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetQtePosition");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetQtePosition, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetQtePosition::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetQtePosition, Rotate) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetQtePosition::Rotate' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetQtePosition, Length) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetQtePosition::Length' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetQtePosition, Height) == 0x00000C, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetQtePosition::Height' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetQtePosition, ReferenceTarget) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetQtePosition::ReferenceTarget' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetQtePosition, AdjustWithMonster) == 0x000011, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetQtePosition::AdjustWithMonster' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetQtePosition, AddHeight) == 0x000014, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetQtePosition::AddHeight' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetQtePosition, QteType) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetQtePosition::QteType' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetQtePosition, __WorldContext) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetQtePosition::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetDtSkillInfo
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfo final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfo) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfo");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfo) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfo");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfo, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfo::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfo, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfo, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfo::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetLastActivateSkillTime
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetLastActivateSkillTime final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetLastActivateSkillTime) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetLastActivateSkillTime");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetLastActivateSkillTime) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetLastActivateSkillTime");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetLastActivateSkillTime, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetLastActivateSkillTime::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetLastActivateSkillTime, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetLastActivateSkillTime::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetLastActivateSkillTime, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetLastActivateSkillTime::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetLastActivateSkillTime
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetLastActivateSkillTime final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetLastActivateSkillTime) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetLastActivateSkillTime");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetLastActivateSkillTime) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetLastActivateSkillTime");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetLastActivateSkillTime, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetLastActivateSkillTime::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetLastActivateSkillTime, Time) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetLastActivateSkillTime::Time' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetLastActivateSkillTime, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetLastActivateSkillTime::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetSkillElevationAngle
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetSkillElevationAngle final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetSkillElevationAngle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetSkillElevationAngle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetSkillElevationAngle) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetSkillElevationAngle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillElevationAngle, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillElevationAngle::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillElevationAngle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillElevationAngle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillElevationAngle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillElevationAngle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetSkillElevationAngle
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetSkillElevationAngle final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetSkillElevationAngle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetSkillElevationAngle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetSkillElevationAngle) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetSkillElevationAngle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillElevationAngle, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillElevationAngle::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillElevationAngle, Angle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillElevationAngle::Angle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillElevationAngle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillElevationAngle::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.CurrentSkillId
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_CurrentSkillId final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_CurrentSkillId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_CurrentSkillId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_CurrentSkillId) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_CurrentSkillId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CurrentSkillId, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_CurrentSkillId::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CurrentSkillId, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_CurrentSkillId::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CurrentSkillId, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_CurrentSkillId::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.CurrentPriority
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_CurrentPriority final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_CurrentPriority) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_CurrentPriority");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_CurrentPriority) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_CurrentPriority");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CurrentPriority, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_CurrentPriority::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CurrentPriority, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_CurrentPriority::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CurrentPriority, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_CurrentPriority::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetCurrentPriority
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetCurrentPriority final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Priority;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetCurrentPriority) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetCurrentPriority");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetCurrentPriority) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetCurrentPriority");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetCurrentPriority, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetCurrentPriority::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetCurrentPriority, Priority) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetCurrentPriority::Priority' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetCurrentPriority, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetCurrentPriority::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.HasAbility
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_HasAbility final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SkillId;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_HasAbility) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_HasAbility");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_HasAbility) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_HasAbility");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_HasAbility, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_HasAbility::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_HasAbility, SkillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_HasAbility::SkillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_HasAbility, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_HasAbility::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_HasAbility, ReturnValue) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_HasAbility::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetSkillInfo
// 0x0168 (0x0168 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SkillId;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSSkillInfo                            ReturnValue;                                       // 0x0020(0x0148)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo) == 0x000168, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo, SkillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo::SkillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo, ReturnValue) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetSkillPriority
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SkillId;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Priority;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority, SkillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority::SkillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority, Priority) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority::Priority' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority, __WorldContext) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.EndSkill
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_EndSkill final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SkillId;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsSyn;                                             // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsNotEnd;                                          // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_EndSkill) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_EndSkill");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_EndSkill) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_EndSkill");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndSkill, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndSkill::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndSkill, SkillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndSkill::SkillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndSkill, IsSyn) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndSkill::IsSyn' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndSkill, IsNotEnd) == 0x000019, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndSkill::IsNotEnd' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndSkill, __WorldContext) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndSkill::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.BeginSkill
// 0x0040 (0x0040 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_BeginSkill final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SkillId;                                           // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSyn;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Target;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_BeginSkill) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_BeginSkill");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_BeginSkill) == 0x000040, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_BeginSkill");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginSkill, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginSkill::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginSkill, SkillId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginSkill::SkillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginSkill, IsSyn) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginSkill::IsSyn' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginSkill, Target) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginSkill::Target' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginSkill, SocketName) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginSkill::SocketName' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginSkill, __WorldContext) == 0x000030, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginSkill::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginSkill, ReturnValue) == 0x000038, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginSkill::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetSkillTarget
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetSkillTarget final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetSkillTarget) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetSkillTarget");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetSkillTarget) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetSkillTarget");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillTarget, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillTarget::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillTarget, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillTarget, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillTarget::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetSkillTarget
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetSkillTarget final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetSkillTarget) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetSkillTarget");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetSkillTarget) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetSkillTarget");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillTarget, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillTarget::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillTarget, Target) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillTarget::Target' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillTarget, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillTarget::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.IsHasInputDir
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_IsHasInputDir final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_IsHasInputDir) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_IsHasInputDir");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_IsHasInputDir) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_IsHasInputDir");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsHasInputDir, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsHasInputDir::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsHasInputDir, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsHasInputDir::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsHasInputDir, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsHasInputDir::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetSkillIdWithGroupId
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GroupId;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId, GroupId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId::GroupId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetSkillAcceptInput
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetSkillAcceptInput final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetSkillAcceptInput) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetSkillAcceptInput");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetSkillAcceptInput) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetSkillAcceptInput");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillAcceptInput, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillAcceptInput::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillAcceptInput, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillAcceptInput::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillAcceptInput, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillAcceptInput::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetSkillAcceptInput
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetSkillAcceptInput final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkillAcceptInput;                                  // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetSkillAcceptInput) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetSkillAcceptInput");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetSkillAcceptInput) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetSkillAcceptInput");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillAcceptInput, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillAcceptInput::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillAcceptInput, SkillAcceptInput) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillAcceptInput::SkillAcceptInput' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillAcceptInput, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillAcceptInput::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetCommonSkillCanBeInterrupt
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetCommonSkillCanBeInterrupt final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanBeInterrupt;                                    // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetCommonSkillCanBeInterrupt) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetCommonSkillCanBeInterrupt");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetCommonSkillCanBeInterrupt) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetCommonSkillCanBeInterrupt");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetCommonSkillCanBeInterrupt, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetCommonSkillCanBeInterrupt::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetCommonSkillCanBeInterrupt, CanBeInterrupt) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetCommonSkillCanBeInterrupt::CanBeInterrupt' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetCommonSkillCanBeInterrupt, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetCommonSkillCanBeInterrupt::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetCommonSkillCanBeInterrupt
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetCommonSkillCanBeInterrupt final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetCommonSkillCanBeInterrupt) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetCommonSkillCanBeInterrupt");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetCommonSkillCanBeInterrupt) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetCommonSkillCanBeInterrupt");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCommonSkillCanBeInterrupt, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCommonSkillCanBeInterrupt::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCommonSkillCanBeInterrupt, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCommonSkillCanBeInterrupt::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCommonSkillCanBeInterrupt, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCommonSkillCanBeInterrupt::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.OnActivateAbility
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayAbility*                       Ga;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCommitSuccess;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility, Ga) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility::Ga' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility, IsCommitSuccess) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility::IsCommitSuccess' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility, ReturnValue) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.OnEndAbility
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_OnEndAbility final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayAbility*                       Ga;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasCancelled;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_OnEndAbility) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_OnEndAbility");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_OnEndAbility) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_OnEndAbility");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnEndAbility, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnEndAbility::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnEndAbility, Ga) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnEndAbility::Ga' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnEndAbility, WasCancelled) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnEndAbility::WasCancelled' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnEndAbility, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnEndAbility::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetPriority
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetPriority final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SkillId;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetPriority) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetPriority");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetPriority) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetPriority");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPriority, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPriority::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPriority, SkillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPriority::SkillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPriority, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPriority::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPriority, ReturnValue) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPriority::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetActivePriority
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetActivePriority final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SkillId;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetActivePriority) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetActivePriority");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetActivePriority) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetActivePriority");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetActivePriority, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetActivePriority::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetActivePriority, SkillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetActivePriority::SkillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetActivePriority, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetActivePriority::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetActivePriority, ReturnValue) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetActivePriority::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetSkillMontageInstance
// 0x0030 (0x0030 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SkillId;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance) == 0x000030, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance, SkillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance::SkillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance, Param_Index) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance::Param_Index' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance, __WorldContext) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance, ReturnValue) == 0x000028, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetSkillRotateLocation
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateLocation final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateLocation) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateLocation");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateLocation) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateLocation");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateLocation, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateLocation::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateLocation, Location) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateLocation::Location' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateLocation, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateLocation::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetSkillRotateDirect
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateDirect final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direct;                                            // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateDirect) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateDirect");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateDirect) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateDirect");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateDirect, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateDirect::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateDirect, Direct) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateDirect::Direct' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateDirect, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateDirect::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.CallAnimBreakPoint
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_CallAnimBreakPoint final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_CallAnimBreakPoint) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_CallAnimBreakPoint");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_CallAnimBreakPoint) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_CallAnimBreakPoint");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CallAnimBreakPoint, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_CallAnimBreakPoint::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CallAnimBreakPoint, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_CallAnimBreakPoint::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.RollingGround
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_RollingGround final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_RollingGround) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_RollingGround");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_RollingGround) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_RollingGround");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RollingGround, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_RollingGround::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RollingGround, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_RollingGround::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetVisionIdList
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetVisionIdList final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetVisionIdList) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetVisionIdList");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetVisionIdList) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetVisionIdList");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionIdList, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionIdList::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionIdList, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionIdList::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionIdList, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionIdList::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ExitMultiSkillStateOfMorphVision
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ExitMultiSkillStateOfMorphVision final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ExitMultiSkillStateOfMorphVision) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ExitMultiSkillStateOfMorphVision");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ExitMultiSkillStateOfMorphVision) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ExitMultiSkillStateOfMorphVision");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ExitMultiSkillStateOfMorphVision, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ExitMultiSkillStateOfMorphVision::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ExitMultiSkillStateOfMorphVision, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ExitMultiSkillStateOfMorphVision::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetKeepMultiSkillState
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          KeepOnMorphEnd;                                    // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          KeepOnGoDown;                                      // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState, KeepOnMorphEnd) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState::KeepOnMorphEnd' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState, KeepOnGoDown) == 0x000005, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState::KeepOnGoDown' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetVisionLevelList
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetVisionLevelList final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetVisionLevelList) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetVisionLevelList");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetVisionLevelList) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetVisionLevelList");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionLevelList, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionLevelList::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionLevelList, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionLevelList::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionLevelList, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionLevelList::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetVisionSkillId
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VisionId;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Level;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId, VisionId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId::VisionId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId, Level) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId::Level' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId, ReturnValue) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.InterruptSkill
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_InterruptSkill final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SkillId;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsSyn;                                             // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_InterruptSkill) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_InterruptSkill");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_InterruptSkill) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_InterruptSkill");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_InterruptSkill, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_InterruptSkill::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_InterruptSkill, SkillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_InterruptSkill::SkillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_InterruptSkill, IsSyn) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_InterruptSkill::IsSyn' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_InterruptSkill, __WorldContext) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_InterruptSkill::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.DeleteSkills
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_DeleteSkills final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_DeleteSkills) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_DeleteSkills");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_DeleteSkills) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_DeleteSkills");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DeleteSkills, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_DeleteSkills::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DeleteSkills, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_DeleteSkills::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetCurrentMontageCorrespondingSkillId
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetCurrentMontageCorrespondingSkillId final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetCurrentMontageCorrespondingSkillId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetCurrentMontageCorrespondingSkillId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetCurrentMontageCorrespondingSkillId) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetCurrentMontageCorrespondingSkillId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCurrentMontageCorrespondingSkillId, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCurrentMontageCorrespondingSkillId::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCurrentMontageCorrespondingSkillId, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCurrentMontageCorrespondingSkillId::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCurrentMontageCorrespondingSkillId, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCurrentMontageCorrespondingSkillId::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetSocketName
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetSocketName final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SocketName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetSocketName) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetSocketName");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetSocketName) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetSocketName");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSocketName, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSocketName::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSocketName, SocketName) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSocketName::SocketName' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSocketName, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSocketName::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetSocketName
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetSocketName final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetSocketName) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetSocketName");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetSocketName) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetSocketName");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSocketName, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSocketName::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSocketName, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSocketName::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSocketName, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSocketName::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetPointTransform
// 0x0050 (0x0050 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetPointTransform final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 boneName;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             ReturnValue;                                       // 0x0020(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetPointTransform) == 0x000010, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetPointTransform");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetPointTransform) == 0x000050, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetPointTransform");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPointTransform, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPointTransform::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPointTransform, boneName) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPointTransform::boneName' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPointTransform, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPointTransform::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPointTransform, ReturnValue) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPointTransform::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.PlaySkillMontage2Server
// 0x0040 (0x0040 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SkillId;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         MontageIndex;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 StartSection;                                      // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         StartTimeSeconds;                                  // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server) == 0x000040, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server, SkillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server::SkillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server, MontageIndex) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server::MontageIndex' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server, Rate) == 0x00001C, "Member 'TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server::Rate' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server, StartSection) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server::StartSection' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server, StartTimeSeconds) == 0x000030, "Member 'TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server::StartTimeSeconds' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server, __WorldContext) == 0x000038, "Member 'TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.EndSkillMontage
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SkillId;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         MontageIndex;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage, SkillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage::SkillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage, MontageIndex) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage::MontageIndex' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage, __WorldContext) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.CanActivateFixHook
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_CanActivateFixHook final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_CanActivateFixHook) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_CanActivateFixHook");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_CanActivateFixHook) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_CanActivateFixHook");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CanActivateFixHook, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_CanActivateFixHook::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CanActivateFixHook, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_CanActivateFixHook::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CanActivateFixHook, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_CanActivateFixHook::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.FixHookTargetLocation
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_FixHookTargetLocation final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetLocation) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetLocation");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetLocation) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetLocation");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetLocation, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetLocation::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetLocation, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetLocation, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetLocation::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.FixHookTargetForward
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_FixHookTargetForward final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetForward) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetForward");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetForward) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetForward");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetForward, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetForward::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetForward, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetForward::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetForward, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetForward::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.NextFixHookTargetLocation
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_NextFixHookTargetLocation final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_NextFixHookTargetLocation) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_NextFixHookTargetLocation");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_NextFixHookTargetLocation) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_NextFixHookTargetLocation");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_NextFixHookTargetLocation, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_NextFixHookTargetLocation::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_NextFixHookTargetLocation, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_NextFixHookTargetLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_NextFixHookTargetLocation, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_NextFixHookTargetLocation::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.FixHookTargetInheritSpeed
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_FixHookTargetInheritSpeed final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetInheritSpeed) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetInheritSpeed");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetInheritSpeed) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetInheritSpeed");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetInheritSpeed, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetInheritSpeed::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetInheritSpeed, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetInheritSpeed::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetInheritSpeed, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetInheritSpeed::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.FixHookTargetIsClimb
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsClimb final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsClimb) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsClimb");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsClimb) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsClimb");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsClimb, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsClimb::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsClimb, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsClimb::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsClimb, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsClimb::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetIgnoreSocketName
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetIgnoreSocketName final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SocketName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetIgnoreSocketName) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetIgnoreSocketName");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetIgnoreSocketName) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetIgnoreSocketName");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetIgnoreSocketName, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetIgnoreSocketName::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetIgnoreSocketName, SocketName) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetIgnoreSocketName::SocketName' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetIgnoreSocketName, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetIgnoreSocketName::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.DeleteIgnoreSocketName
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_DeleteIgnoreSocketName final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SocketName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_DeleteIgnoreSocketName) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_DeleteIgnoreSocketName");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_DeleteIgnoreSocketName) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_DeleteIgnoreSocketName");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DeleteIgnoreSocketName, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_DeleteIgnoreSocketName::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DeleteIgnoreSocketName, SocketName) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_DeleteIgnoreSocketName::SocketName' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DeleteIgnoreSocketName, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_DeleteIgnoreSocketName::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetToTargetSocketDistance
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetToTargetSocketDistance final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetToTargetSocketDistance) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetToTargetSocketDistance");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetToTargetSocketDistance) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetToTargetSocketDistance");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetToTargetSocketDistance, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetToTargetSocketDistance::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetToTargetSocketDistance, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetToTargetSocketDistance::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetToTargetSocketDistance, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetToTargetSocketDistance::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetPredictProjectileInfo
// 0x00C0 (0x00C0 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        OutPathPosition;                                   // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                OutLastTraceDestination;                           // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             OutHit;                                            // 0x0024(0x0094)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo) == 0x0000C0, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo, ReturnValue) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo::ReturnValue' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo, OutPathPosition) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo::OutPathPosition' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo, OutLastTraceDestination) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo::OutLastTraceDestination' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo, OutHit) == 0x000024, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo::OutHit' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo, __WorldContext) == 0x0000B8, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetVisible
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetVisible final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShow;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetVisible) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetVisible");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetVisible) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetVisible");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetVisible, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetVisible::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetVisible, IsShow) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetVisible::IsShow' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetVisible, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetVisible::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetCharUnifiedMoveState
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedMoveState final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharState                                    ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedMoveState) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedMoveState");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedMoveState) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedMoveState");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedMoveState, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedMoveState::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedMoveState, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedMoveState::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedMoveState, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedMoveState::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetCharUnifiedPositionState
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedPositionState final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharParentMoveState                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedPositionState) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedPositionState");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedPositionState) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedPositionState");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedPositionState, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedPositionState::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedPositionState, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedPositionState::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedPositionState, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedPositionState::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ExitHitState
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ExitHitState final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ExitHitState) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ExitHitState");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ExitHitState) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ExitHitState");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ExitHitState, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ExitHitState::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ExitHitState, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ExitHitState::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetDirectionState
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetDirectionState final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharViewDirectionState                       NewViewState;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetDirectionState) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetDirectionState");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetDirectionState) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetDirectionState");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetDirectionState, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetDirectionState::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetDirectionState, NewViewState) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetDirectionState::NewViewState' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetDirectionState, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetDirectionState::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetDirectionState
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetDirectionState final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharViewDirectionState                       ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetDirectionState) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetDirectionState");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetDirectionState) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetDirectionState");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetDirectionState, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetDirectionState::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetDirectionState, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetDirectionState::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetDirectionState, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetDirectionState::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetIsInGame
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetIsInGame final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetIsInGame) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetIsInGame");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetIsInGame) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetIsInGame");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetIsInGame, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetIsInGame::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetIsInGame, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetIsInGame::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetIsInGame, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetIsInGame::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SprintPress
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SprintPress final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SprintPress) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SprintPress");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SprintPress) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SprintPress");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SprintPress, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SprintPress::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SprintPress, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SprintPress::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SprintRelease
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SprintRelease final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SprintRelease) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SprintRelease");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SprintRelease) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SprintRelease");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SprintRelease, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SprintRelease::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SprintRelease, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SprintRelease::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.StandPress
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_StandPress final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_StandPress) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_StandPress");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_StandPress) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_StandPress");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StandPress, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_StandPress::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StandPress, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_StandPress::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SwingPress
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SwingPress final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SwingPress) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SwingPress");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SwingPress) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SwingPress");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SwingPress, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SwingPress::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SwingPress, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SwingPress::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SwingRelease
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SwingRelease final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SwingRelease) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SwingRelease");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SwingRelease) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SwingRelease");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SwingRelease, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SwingRelease::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SwingRelease, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SwingRelease::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.CustomSetWalkOrRun
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_CustomSetWalkOrRun final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWalk;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_CustomSetWalkOrRun) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_CustomSetWalkOrRun");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_CustomSetWalkOrRun) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_CustomSetWalkOrRun");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CustomSetWalkOrRun, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_CustomSetWalkOrRun::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CustomSetWalkOrRun, IsWalk) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_CustomSetWalkOrRun::IsWalk' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CustomSetWalkOrRun, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_CustomSetWalkOrRun::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.EnterAimStatus
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_EnterAimStatus final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAimViewState                                 AimViewState;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_EnterAimStatus) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_EnterAimStatus");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_EnterAimStatus) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_EnterAimStatus");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EnterAimStatus, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_EnterAimStatus::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EnterAimStatus, AimViewState) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_EnterAimStatus::AimViewState' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EnterAimStatus, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_EnterAimStatus::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ExitAimStatus
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ExitAimStatus final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ExitAimStatus) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ExitAimStatus");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ExitAimStatus) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ExitAimStatus");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ExitAimStatus, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ExitAimStatus::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ExitAimStatus, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ExitAimStatus::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.EnableEntity
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_EnableEntity final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnable;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_EnableEntity) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_EnableEntity");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_EnableEntity) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_EnableEntity");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EnableEntity, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_EnableEntity::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EnableEntity, IsEnable) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_EnableEntity::IsEnable' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EnableEntity, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_EnableEntity::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.UpdateAnimInfoHit
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoHit final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ABPLogicParams_C*                   AnimLogicParams;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoHit) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoHit");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoHit) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoHit");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoHit, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoHit::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoHit, AnimLogicParams) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoHit::AnimLogicParams' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoHit, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoHit::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.UpdateAnimInfoFk
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoFk final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ABPLogicParams_C*                   AnimLogicParams;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoFk) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoFk");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoFk) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoFk");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoFk, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoFk::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoFk, AnimLogicParams) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoFk::AnimLogicParams' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoFk, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoFk::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.UpdateAnimInfoUnifiedState
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedState final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ABPLogicParams_C*                   AnimLogicParams;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedState) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedState");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedState) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedState");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedState, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedState::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedState, AnimLogicParams) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedState::AnimLogicParams' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedState, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedState::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.UpdateAnimInfoUnifiedStateRoleNpc
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedStateRoleNpc final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ABPLogicParams_C*                   AnimLogicParams;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedStateRoleNpc) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedStateRoleNpc");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedStateRoleNpc) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedStateRoleNpc");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedStateRoleNpc, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedStateRoleNpc::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedStateRoleNpc, AnimLogicParams) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedStateRoleNpc::AnimLogicParams' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedStateRoleNpc, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedStateRoleNpc::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetIsCharRotateWithCameraWhenManipulate
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetIsCharRotateWithCameraWhenManipulate final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetIsCharRotateWithCameraWhenManipulate) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetIsCharRotateWithCameraWhenManipulate");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetIsCharRotateWithCameraWhenManipulate) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetIsCharRotateWithCameraWhenManipulate");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetIsCharRotateWithCameraWhenManipulate, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetIsCharRotateWithCameraWhenManipulate::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetIsCharRotateWithCameraWhenManipulate, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetIsCharRotateWithCameraWhenManipulate::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetIsCharRotateWithCameraWhenManipulate, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetIsCharRotateWithCameraWhenManipulate::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetIsUseCatapultUpAnim
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetIsUseCatapultUpAnim final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetIsUseCatapultUpAnim) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetIsUseCatapultUpAnim");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetIsUseCatapultUpAnim) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetIsUseCatapultUpAnim");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetIsUseCatapultUpAnim, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetIsUseCatapultUpAnim::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetIsUseCatapultUpAnim, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetIsUseCatapultUpAnim::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetIsUseCatapultUpAnim, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetIsUseCatapultUpAnim::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetNextMultiSkillId
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkillId;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId, SkillId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId::SkillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.StartManipulateInteract
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_StartManipulateInteract final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_StartManipulateInteract) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_StartManipulateInteract");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_StartManipulateInteract) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_StartManipulateInteract");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartManipulateInteract, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartManipulateInteract::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartManipulateInteract, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartManipulateInteract::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartManipulateInteract, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartManipulateInteract::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.EndManipulateInteract
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_EndManipulateInteract final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_EndManipulateInteract) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_EndManipulateInteract");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_EndManipulateInteract) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_EndManipulateInteract");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndManipulateInteract, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndManipulateInteract::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndManipulateInteract, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndManipulateInteract::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetManipulateInteractLocation
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractLocation final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractLocation) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractLocation");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractLocation) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractLocation");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractLocation, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractLocation::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractLocation, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractLocation, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractLocation::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.EnvironmentInfoDetect
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_EnvironmentInfoDetect final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_EnvironmentInfoDetect) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_EnvironmentInfoDetect");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_EnvironmentInfoDetect) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_EnvironmentInfoDetect");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EnvironmentInfoDetect, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_EnvironmentInfoDetect::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EnvironmentInfoDetect, Location) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_EnvironmentInfoDetect::Location' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EnvironmentInfoDetect, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_EnvironmentInfoDetect::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.LockOnSpecifyTarget
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_LockOnSpecifyTarget final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetEntityId;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_LockOnSpecifyTarget) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_LockOnSpecifyTarget");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_LockOnSpecifyTarget) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_LockOnSpecifyTarget");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_LockOnSpecifyTarget, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_LockOnSpecifyTarget::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_LockOnSpecifyTarget, TargetEntityId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_LockOnSpecifyTarget::TargetEntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_LockOnSpecifyTarget, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_LockOnSpecifyTarget::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.IsSkillInCd
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkillId;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd, SkillId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd::SkillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SendHookSkillUseLogData
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SendHookSkillUseLogData final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasTarget;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SendHookSkillUseLogData) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SendHookSkillUseLogData");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SendHookSkillUseLogData) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SendHookSkillUseLogData");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SendHookSkillUseLogData, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SendHookSkillUseLogData::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SendHookSkillUseLogData, HasTarget) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SendHookSkillUseLogData::HasTarget' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SendHookSkillUseLogData, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SendHookSkillUseLogData::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SendManipulateSkillUseLogData
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SendManipulateSkillUseLogData final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasTarget;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SendManipulateSkillUseLogData) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SendManipulateSkillUseLogData");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SendManipulateSkillUseLogData) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SendManipulateSkillUseLogData");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SendManipulateSkillUseLogData, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SendManipulateSkillUseLogData::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SendManipulateSkillUseLogData, HasTarget) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SendManipulateSkillUseLogData::HasTarget' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SendManipulateSkillUseLogData, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SendManipulateSkillUseLogData::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SendScanSkillUseLogData
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SendScanSkillUseLogData final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasTarget;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SendScanSkillUseLogData) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SendScanSkillUseLogData");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SendScanSkillUseLogData) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SendScanSkillUseLogData");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SendScanSkillUseLogData, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SendScanSkillUseLogData::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SendScanSkillUseLogData, HasTarget) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SendScanSkillUseLogData::HasTarget' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SendScanSkillUseLogData, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SendScanSkillUseLogData::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.DynamicAttachEntityToActor
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetEntityId;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor, TargetEntityId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor::TargetEntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor, SocketName) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor::SocketName' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetVisionCounterAttackInfoInternal
// 0x01C0 (0x01C0 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetVisionCounterAttackInfoInternal final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSVisionCounterAttack                  ReturnValue;                                       // 0x0010(0x01B0)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetVisionCounterAttackInfoInternal) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetVisionCounterAttackInfoInternal");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetVisionCounterAttackInfoInternal) == 0x0001C0, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetVisionCounterAttackInfoInternal");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionCounterAttackInfoInternal, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionCounterAttackInfoInternal::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionCounterAttackInfoInternal, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionCounterAttackInfoInternal::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionCounterAttackInfoInternal, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionCounterAttackInfoInternal::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ActivateAbilityVision
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVisionType                                   VisionType;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision, VisionType) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision::VisionType' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.EndAbilityVision
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVisionType                                   VisionType;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision, VisionType) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision::VisionType' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ResetBaseValueLocal
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Id;                                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Val;                                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal, Id) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal::Id' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal, Val) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal::Val' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetEntityEnable
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallObject;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Reason;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable, Enable) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable::Enable' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable, CallObject) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable::CallObject' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable, Reason) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable::Reason' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable, __WorldContext) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetPassiveGaSkillId
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetPassiveGaSkillId final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallObject;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetPassiveGaSkillId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetPassiveGaSkillId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetPassiveGaSkillId) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetPassiveGaSkillId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetPassiveGaSkillId, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetPassiveGaSkillId::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetPassiveGaSkillId, CallObject) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetPassiveGaSkillId::CallObject' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetPassiveGaSkillId, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetPassiveGaSkillId::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetEnableAttackInputActionOfMorphVision
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetEnableAttackInputActionOfMorphVision final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetEnableAttackInputActionOfMorphVision) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetEnableAttackInputActionOfMorphVision");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetEnableAttackInputActionOfMorphVision) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetEnableAttackInputActionOfMorphVision");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetEnableAttackInputActionOfMorphVision, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetEnableAttackInputActionOfMorphVision::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetEnableAttackInputActionOfMorphVision, bEnable) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetEnableAttackInputActionOfMorphVision::bEnable' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetEnableAttackInputActionOfMorphVision, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetEnableAttackInputActionOfMorphVision::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.DynamicDetachEntityFromActor
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_DynamicDetachEntityFromActor final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_DynamicDetachEntityFromActor) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_DynamicDetachEntityFromActor");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_DynamicDetachEntityFromActor) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_DynamicDetachEntityFromActor");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DynamicDetachEntityFromActor, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_DynamicDetachEntityFromActor::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DynamicDetachEntityFromActor, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_DynamicDetachEntityFromActor::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetSpecialBuffToSkillId
// 0x0030 (0x0030 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId final
{
public:
	int64                                         buffId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 SkillId;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId) == 0x000030, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId, buffId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId::buffId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId, SkillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId::SkillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId, ReturnValue) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.FixHookTargetActor
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_FixHookTargetActor final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetActor) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetActor");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetActor) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetActor");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetActor, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetActor::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetActor, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetActor, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetActor::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.FixHookTargetIsSuiGuangType
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsSuiGuangType final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsSuiGuangType) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsSuiGuangType");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsSuiGuangType) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsSuiGuangType");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsSuiGuangType, EntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsSuiGuangType::EntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsSuiGuangType, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsSuiGuangType::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsSuiGuangType, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsSuiGuangType::ReturnValue' has a wrong offset!");

}

