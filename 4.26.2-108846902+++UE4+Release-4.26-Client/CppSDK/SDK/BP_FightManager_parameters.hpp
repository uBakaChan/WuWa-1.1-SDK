#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FightManager

#include "Basic.hpp"

#include "ECamp_structs.hpp"
#include "SHitMapping_structs.hpp"
#include "Engine_structs.hpp"
#include "ERelation_structs.hpp"
#include "SCamp_structs.hpp"


namespace SDK::Params
{

// Function BP_FightManager.BP_FightManager_C.	¢æÑ__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_FightManager_C_______DelegateSignature final
{
public:
	class ATsBaseCharacter_C*                     Param____;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FightManager_C_______DelegateSignature) == 0x000008, "Wrong alignment on BP_FightManager_C_______DelegateSignature");
static_assert(sizeof(BP_FightManager_C_______DelegateSignature) == 0x000008, "Wrong size on BP_FightManager_C_______DelegateSignature");
static_assert(offsetof(BP_FightManager_C_______DelegateSignature, Param____) == 0x000000, "Member 'BP_FightManager_C_______DelegateSignature::Param____' has a wrong offset!");

// Function BP_FightManager.BP_FightManager_C.	ˆæÑ__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_FightManager_C_______DelegateSignature final
{
public:
	class ATsBaseCharacter_C*                     Param____;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FightManager_C_______DelegateSignature) == 0x000008, "Wrong alignment on BP_FightManager_C_______DelegateSignature");
static_assert(sizeof(BP_FightManager_C_______DelegateSignature) == 0x000008, "Wrong size on BP_FightManager_C_______DelegateSignature");
static_assert(offsetof(BP_FightManager_C_______DelegateSignature, Param____) == 0x000000, "Member 'BP_FightManager_C_______DelegateSignature::Param____' has a wrong offset!");

// Function BP_FightManager.BP_FightManager_C.ûÞæÑ__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_FightManager_C_______DelegateSignature final
{
public:
	class ATsBaseCharacter_C*                     Param____;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FightManager_C_______DelegateSignature) == 0x000008, "Wrong alignment on BP_FightManager_C_______DelegateSignature");
static_assert(sizeof(BP_FightManager_C_______DelegateSignature) == 0x000008, "Wrong size on BP_FightManager_C_______DelegateSignature");
static_assert(offsetof(BP_FightManager_C_______DelegateSignature, Param____) == 0x000000, "Member 'BP_FightManager_C_______DelegateSignature::Param____' has a wrong offset!");

// Function BP_FightManager.BP_FightManager_C.4}aæÑ__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_FightManager_C_Four_a____DelegateSignature final
{
public:
	class ATsBaseCharacter_C*                     Param____;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FightManager_C_Four_a____DelegateSignature) == 0x000008, "Wrong alignment on BP_FightManager_C_Four_a____DelegateSignature");
static_assert(sizeof(BP_FightManager_C_Four_a____DelegateSignature) == 0x000008, "Wrong size on BP_FightManager_C_Four_a____DelegateSignature");
static_assert(offsetof(BP_FightManager_C_Four_a____DelegateSignature, Param____) == 0x000000, "Member 'BP_FightManager_C_Four_a____DelegateSignature::Param____' has a wrong offset!");

// Function BP_FightManager.BP_FightManager_C.û Debug„FightAttribute__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_FightManager_C___Debug_FightAttribute__DelegateSignature final
{
public:
	class FString                                 Option;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FightManager_C___Debug_FightAttribute__DelegateSignature) == 0x000008, "Wrong alignment on BP_FightManager_C___Debug_FightAttribute__DelegateSignature");
static_assert(sizeof(BP_FightManager_C___Debug_FightAttribute__DelegateSignature) == 0x000010, "Wrong size on BP_FightManager_C___Debug_FightAttribute__DelegateSignature");
static_assert(offsetof(BP_FightManager_C___Debug_FightAttribute__DelegateSignature, Option) == 0x000000, "Member 'BP_FightManager_C___Debug_FightAttribute__DelegateSignature::Option' has a wrong offset!");

// Function BP_FightManager.BP_FightManager_C. dDebug„FightAttribute__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_FightManager_C__dDebug_FightAttribute__DelegateSignature final
{
public:
	class FString                                 Option;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FightManager_C__dDebug_FightAttribute__DelegateSignature) == 0x000008, "Wrong alignment on BP_FightManager_C__dDebug_FightAttribute__DelegateSignature");
static_assert(sizeof(BP_FightManager_C__dDebug_FightAttribute__DelegateSignature) == 0x000010, "Wrong size on BP_FightManager_C__dDebug_FightAttribute__DelegateSignature");
static_assert(offsetof(BP_FightManager_C__dDebug_FightAttribute__DelegateSignature, Option) == 0x000000, "Member 'BP_FightManager_C__dDebug_FightAttribute__DelegateSignature::Option' has a wrong offset!");

// Function BP_FightManager.BP_FightManager_C.ExecuteUbergraph_BP_FightManager
// 0x0008 (0x0008 - 0x0000)
struct BP_FightManager_C_ExecuteUbergraph_BP_FightManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FightManager_C_ExecuteUbergraph_BP_FightManager) == 0x000004, "Wrong alignment on BP_FightManager_C_ExecuteUbergraph_BP_FightManager");
static_assert(sizeof(BP_FightManager_C_ExecuteUbergraph_BP_FightManager) == 0x000008, "Wrong size on BP_FightManager_C_ExecuteUbergraph_BP_FightManager");
static_assert(offsetof(BP_FightManager_C_ExecuteUbergraph_BP_FightManager, EntryPoint) == 0x000000, "Member 'BP_FightManager_C_ExecuteUbergraph_BP_FightManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_ExecuteUbergraph_BP_FightManager, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_FightManager_C_ExecuteUbergraph_BP_FightManager::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_FightManager.BP_FightManager_C.Tick
// 0x0004 (0x0004 - 0x0000)
struct BP_FightManager_C_Tick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FightManager_C_Tick) == 0x000004, "Wrong alignment on BP_FightManager_C_Tick");
static_assert(sizeof(BP_FightManager_C_Tick) == 0x000004, "Wrong size on BP_FightManager_C_Tick");
static_assert(offsetof(BP_FightManager_C_Tick, DeltaSeconds) == 0x000000, "Member 'BP_FightManager_C_Tick::DeltaSeconds' has a wrong offset!");

// Function BP_FightManager.BP_FightManager_C.—Ë
// 0x0010 (0x0010 - 0x0000)
struct BP_FightManager_C______ final
{
public:
	class UBP_ActorManager_C*                     CallFunc_SpawnObject_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FightManager_C______) == 0x000008, "Wrong alignment on BP_FightManager_C______");
static_assert(sizeof(BP_FightManager_C______) == 0x000010, "Wrong size on BP_FightManager_C______");
static_assert(offsetof(BP_FightManager_C______, CallFunc_SpawnObject_ReturnValue) == 0x000000, "Member 'BP_FightManager_C______::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C______, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_FightManager_C______::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C______, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_FightManager_C______::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_FightManager.BP_FightManager_C.Ë
// 0x0008 (0x0008 - 0x0000)
struct BP_FightManager_C____ final
{
public:
	class UBP_MainGameInstance_C*                 Param_Eight___;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FightManager_C____) == 0x000008, "Wrong alignment on BP_FightManager_C____");
static_assert(sizeof(BP_FightManager_C____) == 0x000008, "Wrong size on BP_FightManager_C____");
static_assert(offsetof(BP_FightManager_C____, Param_Eight___) == 0x000000, "Member 'BP_FightManager_C____::Param_Eight___' has a wrong offset!");

// Function BP_FightManager.BP_FightManager_C.5%$­
// 0x0050 (0x0050 - 0x0000)
struct BP_FightManager_C_Five___ final
{
public:
	ECamp                                         __5_;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECamp                                         __5__0;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERelation                                     S_;                                                // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         S_tp;                                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSCamp                                 _0_5_pn;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSCamp                                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FightManager_C_Five___) == 0x000008, "Wrong alignment on BP_FightManager_C_Five___");
static_assert(sizeof(BP_FightManager_C_Five___) == 0x000050, "Wrong size on BP_FightManager_C_Five___");
static_assert(offsetof(BP_FightManager_C_Five___, __5_) == 0x000000, "Member 'BP_FightManager_C_Five___::__5_' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_Five___, __5__0) == 0x000001, "Member 'BP_FightManager_C_Five___::__5__0' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_Five___, S_) == 0x000002, "Member 'BP_FightManager_C_Five___::S_' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_Five___, S_tp) == 0x000004, "Member 'BP_FightManager_C_Five___::S_tp' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_Five___, _0_5_pn) == 0x000008, "Member 'BP_FightManager_C_Five___::_0_5_pn' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_Five___, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000018, "Member 'BP_FightManager_C_Five___::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_Five___, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000028, "Member 'BP_FightManager_C_Five___::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_Five___, CallFunc_Conv_StringToName_ReturnValue) == 0x00002C, "Member 'BP_FightManager_C_Five___::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_Five___, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'BP_FightManager_C_Five___::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_Five___, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000048, "Member 'BP_FightManager_C_Five___::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_Five___, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000049, "Member 'BP_FightManager_C_Five___::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_Five___, K2Node_SwitchInteger_CmpSuccess) == 0x00004A, "Member 'BP_FightManager_C_Five___::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_FightManager.BP_FightManager_C.È¦ÔÞNPC
// 0x0048 (0x0048 - 0x0000)
struct BP_FightManager_C_____NPC final
{
public:
	class FString                                 ___npc;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Param_____;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _____0_P;                                          // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Stari__C___;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        Stariaic__p_;                                      // 0x0020(0x0010)(Edit, BlueprintVisible)
	class UObject*                                _r_S__;                                            // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UObject*>                        _rp___;                                            // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
};
static_assert(alignof(BP_FightManager_C_____NPC) == 0x000008, "Wrong alignment on BP_FightManager_C_____NPC");
static_assert(sizeof(BP_FightManager_C_____NPC) == 0x000048, "Wrong size on BP_FightManager_C_____NPC");
static_assert(offsetof(BP_FightManager_C_____NPC, ___npc) == 0x000000, "Member 'BP_FightManager_C_____NPC::___npc' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_____NPC, Param_____) == 0x000010, "Member 'BP_FightManager_C_____NPC::Param_____' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_____NPC, _____0_P) == 0x000014, "Member 'BP_FightManager_C_____NPC::_____0_P' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_____NPC, Stari__C___) == 0x000018, "Member 'BP_FightManager_C_____NPC::Stari__C___' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_____NPC, Stariaic__p_) == 0x000020, "Member 'BP_FightManager_C_____NPC::Stariaic__p_' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_____NPC, _r_S__) == 0x000030, "Member 'BP_FightManager_C_____NPC::_r_S__' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_____NPC, _rp___) == 0x000038, "Member 'BP_FightManager_C_____NPC::_rp___' has a wrong offset!");

// Function BP_FightManager.BP_FightManager_C.È¦·Ö@	Actor
// 0x0018 (0x0018 - 0x0000)
struct BP_FightManager_C_______Actor final
{
public:
	int32                                         SMStari__;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Stari4___;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                _r4___;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FightManager_C_______Actor) == 0x000008, "Wrong alignment on BP_FightManager_C_______Actor");
static_assert(sizeof(BP_FightManager_C_______Actor) == 0x000018, "Wrong size on BP_FightManager_C_______Actor");
static_assert(offsetof(BP_FightManager_C_______Actor, SMStari__) == 0x000000, "Member 'BP_FightManager_C_______Actor::SMStari__' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_______Actor, Stari4___) == 0x000008, "Member 'BP_FightManager_C_______Actor::Stari4___' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_______Actor, _r4___) == 0x000010, "Member 'BP_FightManager_C_______Actor::_r4___' has a wrong offset!");

// Function BP_FightManager.BP_FightManager_C.èŒBPai
// 0x0008 (0x0008 - 0x0000)
struct BP_FightManager_C___BPai final
{
public:
	class UObject*                                BPAI_a;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FightManager_C___BPai) == 0x000008, "Wrong alignment on BP_FightManager_C___BPai");
static_assert(sizeof(BP_FightManager_C___BPai) == 0x000008, "Wrong size on BP_FightManager_C___BPai");
static_assert(offsetof(BP_FightManager_C___BPai, BPAI_a) == 0x000000, "Member 'BP_FightManager_C___BPai::BPAI_a' has a wrong offset!");

// Function BP_FightManager.BP_FightManager_C.û Debug„ùa
// 0x0060 (0x0060 - 0x0000)
struct BP_FightManager_C___Debug__a final
{
public:
	const class ATsBaseCharacter_C*               baseChar;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CreatureInterface_C> CallFunc_GetEntityId_self_CastInput;               // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetEntityId_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FightManager_C___Debug__a) == 0x000008, "Wrong alignment on BP_FightManager_C___Debug__a");
static_assert(sizeof(BP_FightManager_C___Debug__a) == 0x000060, "Wrong size on BP_FightManager_C___Debug__a");
static_assert(offsetof(BP_FightManager_C___Debug__a, baseChar) == 0x000000, "Member 'BP_FightManager_C___Debug__a::baseChar' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C___Debug__a, CallFunc_GetEntityId_self_CastInput) == 0x000008, "Member 'BP_FightManager_C___Debug__a::CallFunc_GetEntityId_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C___Debug__a, CallFunc_GetEntityId_ReturnValue) == 0x000018, "Member 'BP_FightManager_C___Debug__a::CallFunc_GetEntityId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C___Debug__a, CallFunc_GetObjectName_ReturnValue) == 0x000020, "Member 'BP_FightManager_C___Debug__a::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C___Debug__a, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'BP_FightManager_C___Debug__a::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C___Debug__a, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BP_FightManager_C___Debug__a::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C___Debug__a, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'BP_FightManager_C___Debug__a::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_FightManager.BP_FightManager_C. dDebug„ùa
// 0x0068 (0x0068 - 0x0000)
struct BP_FightManager_C__dDebug__a final
{
public:
	const class ATsBaseCharacter_C*               baseChar;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CreatureInterface_C> CallFunc_GetEntityId_self_CastInput;               // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetEntityId_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FightManager_C__dDebug__a) == 0x000008, "Wrong alignment on BP_FightManager_C__dDebug__a");
static_assert(sizeof(BP_FightManager_C__dDebug__a) == 0x000068, "Wrong size on BP_FightManager_C__dDebug__a");
static_assert(offsetof(BP_FightManager_C__dDebug__a, baseChar) == 0x000000, "Member 'BP_FightManager_C__dDebug__a::baseChar' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C__dDebug__a, CallFunc_GetEntityId_self_CastInput) == 0x000008, "Member 'BP_FightManager_C__dDebug__a::CallFunc_GetEntityId_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C__dDebug__a, CallFunc_GetEntityId_ReturnValue) == 0x000018, "Member 'BP_FightManager_C__dDebug__a::CallFunc_GetEntityId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C__dDebug__a, CallFunc_GetObjectName_ReturnValue) == 0x000020, "Member 'BP_FightManager_C__dDebug__a::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C__dDebug__a, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'BP_FightManager_C__dDebug__a::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C__dDebug__a, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BP_FightManager_C__dDebug__a::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C__dDebug__a, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'BP_FightManager_C__dDebug__a::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C__dDebug__a, CallFunc_Map_Remove_ReturnValue) == 0x000060, "Member 'BP_FightManager_C__dDebug__a::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function BP_FightManager.BP_FightManager_C.ÙM§6
// 0x0020 (0x0020 - 0x0000)
struct BP_FightManager_C__M_6 final
{
public:
	TArray<class UObject*>                        Starip_;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                Four__Minus__;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                _M4_p__a;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FightManager_C__M_6) == 0x000008, "Wrong alignment on BP_FightManager_C__M_6");
static_assert(sizeof(BP_FightManager_C__M_6) == 0x000020, "Wrong size on BP_FightManager_C__M_6");
static_assert(offsetof(BP_FightManager_C__M_6, Starip_) == 0x000000, "Member 'BP_FightManager_C__M_6::Starip_' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C__M_6, Four__Minus__) == 0x000010, "Member 'BP_FightManager_C__M_6::Four__Minus__' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C__M_6, _M4_p__a) == 0x000018, "Member 'BP_FightManager_C__M_6::_M4_p__a' has a wrong offset!");

// Function BP_FightManager.BP_FightManager_C.åâ×û{‹†Ö
// 0x0128 (0x0128 - 0x0000)
struct BP_FightManager_C_________ final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSHitMapping                           Param_____;                                        // 0x0008(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          __0;                                               // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSHitMapping                           _0_pn;                                             // 0x0038(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0080(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSHitMapping                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x00F8(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FightManager_C_________) == 0x000008, "Wrong alignment on BP_FightManager_C_________");
static_assert(sizeof(BP_FightManager_C_________) == 0x000128, "Wrong size on BP_FightManager_C_________");
static_assert(offsetof(BP_FightManager_C_________, ID) == 0x000000, "Member 'BP_FightManager_C_________::ID' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_________, Param_____) == 0x000008, "Member 'BP_FightManager_C_________::Param_____' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_________, __0) == 0x000030, "Member 'BP_FightManager_C_________::__0' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_________, _0_pn) == 0x000038, "Member 'BP_FightManager_C_________::_0_pn' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_________, CallFunc_Conv_IntToString_ReturnValue) == 0x000060, "Member 'BP_FightManager_C_________::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_________, CallFunc_Conv_StringToName_ReturnValue) == 0x000070, "Member 'BP_FightManager_C_________::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_________, K2Node_MakeStruct_FormatArgumentData) == 0x000080, "Member 'BP_FightManager_C_________::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_________, K2Node_MakeArray_Array) == 0x0000C0, "Member 'BP_FightManager_C_________::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_________, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'BP_FightManager_C_________::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_________, CallFunc_Conv_TextToString_ReturnValue) == 0x0000E8, "Member 'BP_FightManager_C_________::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_________, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000F8, "Member 'BP_FightManager_C_________::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_FightManager_C_________, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000120, "Member 'BP_FightManager_C_________::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

}

