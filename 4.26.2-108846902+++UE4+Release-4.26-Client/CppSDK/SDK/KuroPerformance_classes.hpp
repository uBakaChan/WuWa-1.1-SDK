#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KuroPerformance

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// Class KuroPerformance.KuroPerformanceBPLibrary
// 0x0000 (0x0030 - 0x0030)
class UKuroPerformanceBPLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool BoostCPU(int32 FrequencyPercentage, int32 BoostDurationInMilliSecond, bool bBoostMemory);
	static bool BoostGPU(int32 FrequencyPercentage, int32 BoostDurationInMilliSecond, bool bBoostMemory);
	static void GetCurrentTemperatureData(const TDelegate<void(bool bResult, float CurrentTemperature, float TempBudget)>& Delegate);
	static void GetTickedPerformanceReport(struct FKuroPerformanceReport* PerformanceReport);
	static bool IsPerformanceAdaptiveRunning();
	static bool PredictWorkload(int32 CPULoadScale, int32 GPULoadScale);
	static void SetPerformanceAdaptiveStatus(bool bEnable);
	static bool SetTargetFPS(int32 FPS, int32 ThreadId);
	static bool StartPerformanceAdaptiveService(int32 EServiceFlags);
	static bool StopPerformanceAdaptiveService(int32 EServiceFlags);
	static int32 Tick();
	static int32 TickPerfReport();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KuroPerformanceBPLibrary">();
	}
	static class UKuroPerformanceBPLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKuroPerformanceBPLibrary>();
	}
};
static_assert(alignof(UKuroPerformanceBPLibrary) == 0x000008, "Wrong alignment on UKuroPerformanceBPLibrary");
static_assert(sizeof(UKuroPerformanceBPLibrary) == 0x000030, "Wrong size on UKuroPerformanceBPLibrary");

}

