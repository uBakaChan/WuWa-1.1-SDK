#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsAnimNotifyWeaponHide

#include "Basic.hpp"

#include "KuroRenderingRuntimeBPPlugin_classes.hpp"


namespace SDK
{

// TypeScriptGeneratedClass TsAnimNotifyWeaponHide.TsAnimNotifyWeaponHide_C
// 0x0010 (0x0058 - 0x0048)
class UTsAnimNotifyWeaponHide_C final : public UKuroAnimNotify
{
public:
	bool                                          Hide;                                              // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WeaponIndex;                                       // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideEffect;                                        // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseHighPriority;                                   // 0x0051(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);

	class FString GetNotifyName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TsAnimNotifyWeaponHide_C">();
	}
	static class UTsAnimNotifyWeaponHide_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTsAnimNotifyWeaponHide_C>();
	}
};
static_assert(alignof(UTsAnimNotifyWeaponHide_C) == 0x000008, "Wrong alignment on UTsAnimNotifyWeaponHide_C");
static_assert(sizeof(UTsAnimNotifyWeaponHide_C) == 0x000058, "Wrong size on UTsAnimNotifyWeaponHide_C");
static_assert(offsetof(UTsAnimNotifyWeaponHide_C, Hide) == 0x000048, "Member 'UTsAnimNotifyWeaponHide_C::Hide' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyWeaponHide_C, WeaponIndex) == 0x00004C, "Member 'UTsAnimNotifyWeaponHide_C::WeaponIndex' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyWeaponHide_C, HideEffect) == 0x000050, "Member 'UTsAnimNotifyWeaponHide_C::HideEffect' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyWeaponHide_C, UseHighPriority) == 0x000051, "Member 'UTsAnimNotifyWeaponHide_C::UseHighPriority' has a wrong offset!");

}

