#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsMoveBlueprintFunctionLibrary

#include "Basic.hpp"

#include "SClimbState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EExitClimb_structs.hpp"
#include "SMovementSetting_structs.hpp"
#include "EMovementDirection_structs.hpp"
#include "EClimbState_structs.hpp"
#include "EEnterClimb_structs.hpp"
#include "SClimbInfo_structs.hpp"
#include "Engine_structs.hpp"
#include "SMovementSetting_State_structs.hpp"


namespace SDK::Params
{

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetActorRotationWithPriority
// 0x0038 (0x0038 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithPriority final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Value;                                             // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Sweep;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Context;                                           // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithPriority) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithPriority");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithPriority) == 0x000038, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithPriority");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithPriority, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithPriority::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithPriority, Value) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithPriority::Value' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithPriority, Sweep) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithPriority::Sweep' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithPriority, Context) == 0x000018, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithPriority::Context' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithPriority, __WorldContext) == 0x000028, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithPriority::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithPriority, ReturnValue) == 0x000030, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithPriority::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetActorRotationWithContext
// 0x0038 (0x0038 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithContext final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Sweep;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Context;                                           // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithContext) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithContext");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithContext) == 0x000038, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithContext");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithContext, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithContext::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithContext, Rotation) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithContext::Rotation' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithContext, Sweep) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithContext::Sweep' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithContext, Context) == 0x000018, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithContext::Context' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithContext, __WorldContext) == 0x000028, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithContext::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithContext, ReturnValue) == 0x000030, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorRotationWithContext::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.ActorTeleportToWithContext
// 0x0038 (0x0038 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_ActorTeleportToWithContext final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Context;                                           // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_ActorTeleportToWithContext) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_ActorTeleportToWithContext");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_ActorTeleportToWithContext) == 0x000038, "Wrong size on TsMoveBlueprintFunctionLibrary_C_ActorTeleportToWithContext");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_ActorTeleportToWithContext, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_ActorTeleportToWithContext::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_ActorTeleportToWithContext, Location) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_ActorTeleportToWithContext::Location' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_ActorTeleportToWithContext, Rotation) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_ActorTeleportToWithContext::Rotation' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_ActorTeleportToWithContext, Context) == 0x000020, "Member 'TsMoveBlueprintFunctionLibrary_C_ActorTeleportToWithContext::Context' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_ActorTeleportToWithContext, __WorldContext) == 0x000030, "Member 'TsMoveBlueprintFunctionLibrary_C_ActorTeleportToWithContext::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.ActorKuroMoveAlongFloorWithContext
// 0x0030 (0x0030 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_ActorKuroMoveAlongFloorWithContext final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Context;                                           // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_ActorKuroMoveAlongFloorWithContext) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_ActorKuroMoveAlongFloorWithContext");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_ActorKuroMoveAlongFloorWithContext) == 0x000030, "Wrong size on TsMoveBlueprintFunctionLibrary_C_ActorKuroMoveAlongFloorWithContext");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_ActorKuroMoveAlongFloorWithContext, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_ActorKuroMoveAlongFloorWithContext::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_ActorKuroMoveAlongFloorWithContext, Velocity) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_ActorKuroMoveAlongFloorWithContext::Velocity' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_ActorKuroMoveAlongFloorWithContext, DeltaSeconds) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_ActorKuroMoveAlongFloorWithContext::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_ActorKuroMoveAlongFloorWithContext, Context) == 0x000018, "Member 'TsMoveBlueprintFunctionLibrary_C_ActorKuroMoveAlongFloorWithContext::Context' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_ActorKuroMoveAlongFloorWithContext, __WorldContext) == 0x000028, "Member 'TsMoveBlueprintFunctionLibrary_C_ActorKuroMoveAlongFloorWithContext::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetInputDirect
// 0x0020 (0x0020 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetInputDirect final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetInputDirect) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetInputDirect");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetInputDirect) == 0x000020, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetInputDirect");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetInputDirect, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetInputDirect::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetInputDirect, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetInputDirect::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetInputDirect, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetInputDirect::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetInputDirect
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetInputDirect final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                Direct;                                            // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetInputDirect) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetInputDirect");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetInputDirect) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetInputDirect");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetInputDirect, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetInputDirect::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetInputDirect, Direct) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetInputDirect::Direct' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetInputDirect, __WorldContext) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_SetInputDirect::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetInputRotator
// 0x0020 (0x0020 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetInputRotator final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetInputRotator) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetInputRotator");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetInputRotator) == 0x000020, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetInputRotator");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetInputRotator, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetInputRotator::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetInputRotator, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetInputRotator::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetInputRotator, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetInputRotator::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetInputRotator
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetInputRotator final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FRotator                               Rotator;                                           // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetInputRotator) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetInputRotator");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetInputRotator) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetInputRotator");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetInputRotator, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetInputRotator::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetInputRotator, Rotator) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetInputRotator::Rotator' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetInputRotator, __WorldContext) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_SetInputRotator::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetCharacterHidden
// 0x0028 (0x0028 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetCharacterHidden final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          IsHidden;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallObject;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Reason;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetCharacterHidden) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetCharacterHidden");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetCharacterHidden) == 0x000028, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetCharacterHidden");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetCharacterHidden, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetCharacterHidden::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetCharacterHidden, IsHidden) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetCharacterHidden::IsHidden' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetCharacterHidden, CallObject) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_SetCharacterHidden::CallObject' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetCharacterHidden, Reason) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_SetCharacterHidden::Reason' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetCharacterHidden, __WorldContext) == 0x000020, "Member 'TsMoveBlueprintFunctionLibrary_C_SetCharacterHidden::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetHiddenMovementMode
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetHiddenMovementMode final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          IsHidden;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetHiddenMovementMode) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetHiddenMovementMode");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetHiddenMovementMode) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetHiddenMovementMode");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetHiddenMovementMode, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetHiddenMovementMode::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetHiddenMovementMode, IsHidden) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetHiddenMovementMode::IsHidden' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetHiddenMovementMode, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_SetHiddenMovementMode::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.CanResponseInput
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_CanResponseInput final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_CanResponseInput) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_CanResponseInput");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_CanResponseInput) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_CanResponseInput");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_CanResponseInput, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_CanResponseInput::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_CanResponseInput, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_CanResponseInput::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_CanResponseInput, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_CanResponseInput::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.CanJumpPress
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_CanJumpPress final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_CanJumpPress) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_CanJumpPress");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_CanJumpPress) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_CanJumpPress");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_CanJumpPress, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_CanJumpPress::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_CanJumpPress, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_CanJumpPress::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_CanJumpPress, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_CanJumpPress::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.CanWalkPress
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_CanWalkPress final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_CanWalkPress) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_CanWalkPress");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_CanWalkPress) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_CanWalkPress");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_CanWalkPress, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_CanWalkPress::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_CanWalkPress, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_CanWalkPress::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_CanWalkPress, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_CanWalkPress::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetHeightAboveGround
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetHeightAboveGround final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetHeightAboveGround) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetHeightAboveGround");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetHeightAboveGround) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetHeightAboveGround");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetHeightAboveGround, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetHeightAboveGround::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetHeightAboveGround, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetHeightAboveGround::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetHeightAboveGround, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetHeightAboveGround::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetAcceleration
// 0x0020 (0x0020 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetAcceleration final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetAcceleration) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetAcceleration");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetAcceleration) == 0x000020, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetAcceleration");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetAcceleration, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetAcceleration::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetAcceleration, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetAcceleration::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetAcceleration, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetAcceleration::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetAimYawRate
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetAimYawRate final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetAimYawRate) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetAimYawRate");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetAimYawRate) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetAimYawRate");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetAimYawRate, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetAimYawRate::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetAimYawRate, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetAimYawRate::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetAimYawRate, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetAimYawRate::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetMovementData
// 0x0648 (0x0648 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetMovementData final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSMovementSetting_State                ReturnValue;                                       // 0x0010(0x0638)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetMovementData) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetMovementData");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetMovementData) == 0x000648, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetMovementData");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetMovementData, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetMovementData::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetMovementData, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetMovementData::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetMovementData, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetMovementData::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SmoothCharacterRotation
// 0x0030 (0x0030 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SmoothCharacterRotation final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FRotator                               Target;                                            // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Speed;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Context;                                           // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SmoothCharacterRotation) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SmoothCharacterRotation");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SmoothCharacterRotation) == 0x000030, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SmoothCharacterRotation");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SmoothCharacterRotation, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SmoothCharacterRotation::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SmoothCharacterRotation, Target) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SmoothCharacterRotation::Target' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SmoothCharacterRotation, Speed) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_SmoothCharacterRotation::Speed' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SmoothCharacterRotation, Context) == 0x000018, "Member 'TsMoveBlueprintFunctionLibrary_C_SmoothCharacterRotation::Context' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SmoothCharacterRotation, __WorldContext) == 0x000028, "Member 'TsMoveBlueprintFunctionLibrary_C_SmoothCharacterRotation::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.HasMoveInput
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_HasMoveInput final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_HasMoveInput) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_HasMoveInput");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_HasMoveInput) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_HasMoveInput");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_HasMoveInput, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_HasMoveInput::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_HasMoveInput, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_HasMoveInput::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_HasMoveInput, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_HasMoveInput::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.HasRotatorInput
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_HasRotatorInput final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_HasRotatorInput) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_HasRotatorInput");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_HasRotatorInput) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_HasRotatorInput");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_HasRotatorInput, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_HasRotatorInput::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_HasRotatorInput, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_HasRotatorInput::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_HasRotatorInput, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_HasRotatorInput::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.IsMoving
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_IsMoving final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_IsMoving) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_IsMoving");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_IsMoving) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_IsMoving");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_IsMoving, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_IsMoving::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_IsMoving, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_IsMoving::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_IsMoving, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_IsMoving::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.IsJump
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_IsJump final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_IsJump) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_IsJump");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_IsJump) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_IsJump");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_IsJump, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_IsJump::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_IsJump, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_IsJump::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_IsJump, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_IsJump::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetSpeed
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetSpeed final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetSpeed) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetSpeed");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetSpeed) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetSpeed");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetSpeed, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetSpeed::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetSpeed, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetSpeed::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetSpeed, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetSpeed::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetGroundedTime
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetGroundedTime final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetGroundedTime) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetGroundedTime");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetGroundedTime) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetGroundedTime");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetGroundedTime, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetGroundedTime::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetGroundedTime, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetGroundedTime::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetGroundedTime, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetGroundedTime::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.IsFallingIntoWater
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_IsFallingIntoWater final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_IsFallingIntoWater) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_IsFallingIntoWater");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_IsFallingIntoWater) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_IsFallingIntoWater");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_IsFallingIntoWater, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_IsFallingIntoWater::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_IsFallingIntoWater, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_IsFallingIntoWater::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_IsFallingIntoWater, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_IsFallingIntoWater::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetForceSpeed
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetForceSpeed final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                Speed;                                             // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetForceSpeed) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetForceSpeed");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetForceSpeed) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetForceSpeed");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetForceSpeed, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetForceSpeed::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetForceSpeed, Speed) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetForceSpeed::Speed' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetForceSpeed, __WorldContext) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_SetForceSpeed::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetAddMove
// 0x0030 (0x0030 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetAddMove final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         Mesh;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Speed;                                             // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeLength;                                        // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Curve;                                             // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetAddMove) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetAddMove");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetAddMove) == 0x000030, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetAddMove");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAddMove, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAddMove::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAddMove, Mesh) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAddMove::Mesh' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAddMove, Speed) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAddMove::Speed' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAddMove, TimeLength) == 0x00001C, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAddMove::TimeLength' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAddMove, Curve) == 0x000020, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAddMove::Curve' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAddMove, __WorldContext) == 0x000028, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAddMove::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.StopAddMove
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_StopAddMove final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         Mesh;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_StopAddMove) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_StopAddMove");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_StopAddMove) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_StopAddMove");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_StopAddMove, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_StopAddMove::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_StopAddMove, Mesh) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_StopAddMove::Mesh' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_StopAddMove, __WorldContext) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_StopAddMove::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.FixActorLocation
// 0x00B8 (0x00B8 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_FixActorLocation final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                Target;                                            // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Offset;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             ReturnValue;                                       // 0x0020(0x0094)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_FixActorLocation) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_FixActorLocation");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_FixActorLocation) == 0x0000B8, "Wrong size on TsMoveBlueprintFunctionLibrary_C_FixActorLocation");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_FixActorLocation, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_FixActorLocation::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_FixActorLocation, Target) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_FixActorLocation::Target' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_FixActorLocation, Offset) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_FixActorLocation::Offset' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_FixActorLocation, __WorldContext) == 0x000018, "Member 'TsMoveBlueprintFunctionLibrary_C_FixActorLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_FixActorLocation, ReturnValue) == 0x000020, "Member 'TsMoveBlueprintFunctionLibrary_C_FixActorLocation::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.StopAllAddMove
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_StopAllAddMove final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_StopAllAddMove) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_StopAllAddMove");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_StopAllAddMove) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_StopAllAddMove");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_StopAllAddMove, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_StopAllAddMove::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_StopAllAddMove, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_StopAllAddMove::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetAddMoveWorld
// 0x0030 (0x0030 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorld final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         Mesh;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Speed;                                             // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeLength;                                        // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Curve;                                             // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorld) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorld");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorld) == 0x000030, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorld");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorld, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorld::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorld, Mesh) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorld::Mesh' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorld, Speed) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorld::Speed' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorld, TimeLength) == 0x00001C, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorld::TimeLength' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorld, Curve) == 0x000020, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorld::Curve' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorld, __WorldContext) == 0x000028, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorld::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetAddMoveWorldSpeed
// 0x0028 (0x0028 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorldSpeed final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         Mesh;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Speed;                                             // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorldSpeed) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorldSpeed");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorldSpeed) == 0x000028, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorldSpeed");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorldSpeed, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorldSpeed::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorldSpeed, Mesh) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorldSpeed::Mesh' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorldSpeed, Speed) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorldSpeed::Speed' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorldSpeed, __WorldContext) == 0x000020, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAddMoveWorldSpeed::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetAddMoveOffset
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetAddMoveOffset final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveOffset) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetAddMoveOffset");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveOffset) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetAddMoveOffset");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveOffset, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAddMoveOffset::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveOffset, Offset) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAddMoveOffset::Offset' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveOffset, __WorldContext) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAddMoveOffset::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetAddMoveRotation
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetAddMoveRotation final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveRotation) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetAddMoveRotation");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveRotation) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetAddMoveRotation");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveRotation, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAddMoveRotation::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveRotation, Rotation) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAddMoveRotation::Rotation' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAddMoveRotation, __WorldContext) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAddMoveRotation::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetEnterWaterState
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetEnterWaterState final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          IsEnter;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetEnterWaterState) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetEnterWaterState");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetEnterWaterState) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetEnterWaterState");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetEnterWaterState, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetEnterWaterState::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetEnterWaterState, IsEnter) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetEnterWaterState::IsEnter' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetEnterWaterState, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_SetEnterWaterState::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetClimbState
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetClimbState final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSClimbState                           ReturnValue;                                       // 0x0010(0x0003)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetClimbState) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetClimbState");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetClimbState) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetClimbState");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetClimbState, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetClimbState::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetClimbState, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetClimbState::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetClimbState, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetClimbState::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetClimbRadius
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetClimbRadius final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetClimbRadius) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetClimbRadius");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetClimbRadius) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetClimbRadius");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetClimbRadius, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetClimbRadius::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetClimbRadius, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetClimbRadius::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetClimbRadius, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetClimbRadius::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetClimbInfo
// 0x0030 (0x0030 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetClimbInfo final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSClimbInfo                            ReturnValue;                                       // 0x0010(0x001C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetClimbInfo) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetClimbInfo");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetClimbInfo) == 0x000030, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetClimbInfo");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetClimbInfo, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetClimbInfo::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetClimbInfo, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetClimbInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetClimbInfo, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetClimbInfo::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.KickExitCheck
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_KickExitCheck final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_KickExitCheck) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_KickExitCheck");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_KickExitCheck) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_KickExitCheck");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_KickExitCheck, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_KickExitCheck::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_KickExitCheck, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_KickExitCheck::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.CanClimbPress
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_CanClimbPress final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_CanClimbPress) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_CanClimbPress");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_CanClimbPress) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_CanClimbPress");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_CanClimbPress, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_CanClimbPress::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_CanClimbPress, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_CanClimbPress::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_CanClimbPress, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_CanClimbPress::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.OnEnterClimb
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_OnEnterClimb final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_OnEnterClimb) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_OnEnterClimb");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_OnEnterClimb) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_OnEnterClimb");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_OnEnterClimb, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_OnEnterClimb::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_OnEnterClimb, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_OnEnterClimb::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.OnExitClimb
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_OnExitClimb final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_OnExitClimb) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_OnExitClimb");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_OnExitClimb) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_OnExitClimb");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_OnExitClimb, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_OnExitClimb::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_OnExitClimb, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_OnExitClimb::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.DealClimbUpStart
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_DealClimbUpStart final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_DealClimbUpStart) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_DealClimbUpStart");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_DealClimbUpStart) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_DealClimbUpStart");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_DealClimbUpStart, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_DealClimbUpStart::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_DealClimbUpStart, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_DealClimbUpStart::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.FinishClimbDown
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_FinishClimbDown final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_FinishClimbDown) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_FinishClimbDown");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_FinishClimbDown) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_FinishClimbDown");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_FinishClimbDown, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_FinishClimbDown::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_FinishClimbDown, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_FinishClimbDown::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.DealClimbUpFinish
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_DealClimbUpFinish final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_DealClimbUpFinish) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_DealClimbUpFinish");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_DealClimbUpFinish) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_DealClimbUpFinish");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_DealClimbUpFinish, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_DealClimbUpFinish::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_DealClimbUpFinish, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_DealClimbUpFinish::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetClimbState
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetClimbState final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EClimbState                                   ClimbState;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetClimbState) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetClimbState");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetClimbState) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetClimbState");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetClimbState, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetClimbState::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetClimbState, ClimbState) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetClimbState::ClimbState' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetClimbState, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_SetClimbState::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetEnterClimbType
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetEnterClimbType final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EEnterClimb                                   EnterType;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetEnterClimbType) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetEnterClimbType");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetEnterClimbType) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetEnterClimbType");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetEnterClimbType, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetEnterClimbType::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetEnterClimbType, EnterType) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetEnterClimbType::EnterType' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetEnterClimbType, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_SetEnterClimbType::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetExitClimbType
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetExitClimbType final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EExitClimb                                    ExitType;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetExitClimbType) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetExitClimbType");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetExitClimbType) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetExitClimbType");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetExitClimbType, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetExitClimbType::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetExitClimbType, ExitType) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetExitClimbType::ExitType' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetExitClimbType, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_SetExitClimbType::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetWaterLocation
// 0x0020 (0x0020 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetWaterLocation final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetWaterLocation) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetWaterLocation");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetWaterLocation) == 0x000020, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetWaterLocation");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetWaterLocation, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetWaterLocation::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetWaterLocation, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetWaterLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetWaterLocation, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetWaterLocation::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetWaterVolume
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetWaterVolume final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetWaterVolume) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetWaterVolume");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetWaterVolume) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetWaterVolume");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetWaterVolume, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetWaterVolume::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetWaterVolume, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetWaterVolume::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetWaterVolume, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetWaterVolume::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetClimbOnWallAngle
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetClimbOnWallAngle final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetClimbOnWallAngle) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetClimbOnWallAngle");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetClimbOnWallAngle) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetClimbOnWallAngle");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetClimbOnWallAngle, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetClimbOnWallAngle::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetClimbOnWallAngle, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetClimbOnWallAngle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetClimbOnWallAngle, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetClimbOnWallAngle::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetUseDebugMovementSetting
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetUseDebugMovementSetting final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          NewSelect;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetUseDebugMovementSetting) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetUseDebugMovementSetting");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetUseDebugMovementSetting) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetUseDebugMovementSetting");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetUseDebugMovementSetting, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetUseDebugMovementSetting::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetUseDebugMovementSetting, NewSelect) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetUseDebugMovementSetting::NewSelect' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetUseDebugMovementSetting, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_SetUseDebugMovementSetting::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetDebugMovementSetting
// 0x0068 (0x0068 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetDebugMovementSetting final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSMovementSetting                      NewSetting;                                        // 0x0008(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetDebugMovementSetting) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetDebugMovementSetting");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetDebugMovementSetting) == 0x000068, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetDebugMovementSetting");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetDebugMovementSetting, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetDebugMovementSetting::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetDebugMovementSetting, NewSetting) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_SetDebugMovementSetting::NewSetting' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetDebugMovementSetting, __WorldContext) == 0x000060, "Member 'TsMoveBlueprintFunctionLibrary_C_SetDebugMovementSetting::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetLockedRotation
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetLockedRotation final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Lock;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetLockedRotation) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetLockedRotation");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetLockedRotation) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetLockedRotation");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetLockedRotation, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetLockedRotation::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetLockedRotation, Lock) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetLockedRotation::Lock' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetLockedRotation, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_SetLockedRotation::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetLockedRotation
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetLockedRotation final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetLockedRotation) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetLockedRotation");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetLockedRotation) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetLockedRotation");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetLockedRotation, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetLockedRotation::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetLockedRotation, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetLockedRotation::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetLockedRotation, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetLockedRotation::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetFallingHorizontalMaxSpeed
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetFallingHorizontalMaxSpeed final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetFallingHorizontalMaxSpeed) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetFallingHorizontalMaxSpeed");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetFallingHorizontalMaxSpeed) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetFallingHorizontalMaxSpeed");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetFallingHorizontalMaxSpeed, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetFallingHorizontalMaxSpeed::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetFallingHorizontalMaxSpeed, Speed) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetFallingHorizontalMaxSpeed::Speed' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetFallingHorizontalMaxSpeed, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_SetFallingHorizontalMaxSpeed::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.ClearFallingHorizontalMaxSpeed
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_ClearFallingHorizontalMaxSpeed final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_ClearFallingHorizontalMaxSpeed) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_ClearFallingHorizontalMaxSpeed");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_ClearFallingHorizontalMaxSpeed) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_ClearFallingHorizontalMaxSpeed");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_ClearFallingHorizontalMaxSpeed, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_ClearFallingHorizontalMaxSpeed::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_ClearFallingHorizontalMaxSpeed, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_ClearFallingHorizontalMaxSpeed::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.DetectClimbWithDirect
// 0x0028 (0x0028 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_DetectClimbWithDirect final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          bSprintEnter;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Direct;                                            // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_DetectClimbWithDirect) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_DetectClimbWithDirect");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_DetectClimbWithDirect) == 0x000028, "Wrong size on TsMoveBlueprintFunctionLibrary_C_DetectClimbWithDirect");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_DetectClimbWithDirect, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_DetectClimbWithDirect::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_DetectClimbWithDirect, bSprintEnter) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_DetectClimbWithDirect::bSprintEnter' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_DetectClimbWithDirect, Direct) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_DetectClimbWithDirect::Direct' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_DetectClimbWithDirect, __WorldContext) == 0x000018, "Member 'TsMoveBlueprintFunctionLibrary_C_DetectClimbWithDirect::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_DetectClimbWithDirect, ReturnValue) == 0x000020, "Member 'TsMoveBlueprintFunctionLibrary_C_DetectClimbWithDirect::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.TurnToTarget
// 0x0020 (0x0020 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_TurnToTarget final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_TurnToTarget) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_TurnToTarget");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_TurnToTarget) == 0x000020, "Wrong size on TsMoveBlueprintFunctionLibrary_C_TurnToTarget");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_TurnToTarget, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_TurnToTarget::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_TurnToTarget, Target) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_TurnToTarget::Target' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_TurnToTarget, Speed) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_TurnToTarget::Speed' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_TurnToTarget, __WorldContext) == 0x000018, "Member 'TsMoveBlueprintFunctionLibrary_C_TurnToTarget::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetMonsterMoveDirection
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetMonsterMoveDirection final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementDirection                            ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetMonsterMoveDirection) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetMonsterMoveDirection");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetMonsterMoveDirection) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetMonsterMoveDirection");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetMonsterMoveDirection, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetMonsterMoveDirection::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetMonsterMoveDirection, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetMonsterMoveDirection::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetMonsterMoveDirection, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetMonsterMoveDirection::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetRoleBody
// 0x0020 (0x0020 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetRoleBody final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetRoleBody) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetRoleBody");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetRoleBody) == 0x000020, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetRoleBody");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetRoleBody, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetRoleBody::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetRoleBody, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetRoleBody::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetRoleBody, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetRoleBody::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetRacingRightSpeed
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetRacingRightSpeed final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetRacingRightSpeed) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetRacingRightSpeed");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetRacingRightSpeed) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetRacingRightSpeed");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetRacingRightSpeed, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetRacingRightSpeed::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetRacingRightSpeed, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetRacingRightSpeed::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetRacingRightSpeed, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetRacingRightSpeed::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetPendulumData
// 0x0038 (0x0038 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetPendulumData final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         AddVelocityX;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AddVelocityY;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AddVelocityZ;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ForwardLossPercentage;                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LossPercentage;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Gravity;                                           // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Friction;                                          // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Deceleration;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Accelerator;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxSpeed;                                          // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxFallingSpeed;                                   // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetPendulumData) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetPendulumData");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetPendulumData) == 0x000038, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetPendulumData");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetPendulumData, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetPendulumData::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetPendulumData, AddVelocityX) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetPendulumData::AddVelocityX' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetPendulumData, AddVelocityY) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_SetPendulumData::AddVelocityY' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetPendulumData, AddVelocityZ) == 0x00000C, "Member 'TsMoveBlueprintFunctionLibrary_C_SetPendulumData::AddVelocityZ' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetPendulumData, ForwardLossPercentage) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_SetPendulumData::ForwardLossPercentage' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetPendulumData, LossPercentage) == 0x000014, "Member 'TsMoveBlueprintFunctionLibrary_C_SetPendulumData::LossPercentage' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetPendulumData, Gravity) == 0x000018, "Member 'TsMoveBlueprintFunctionLibrary_C_SetPendulumData::Gravity' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetPendulumData, Friction) == 0x00001C, "Member 'TsMoveBlueprintFunctionLibrary_C_SetPendulumData::Friction' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetPendulumData, Deceleration) == 0x000020, "Member 'TsMoveBlueprintFunctionLibrary_C_SetPendulumData::Deceleration' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetPendulumData, Accelerator) == 0x000024, "Member 'TsMoveBlueprintFunctionLibrary_C_SetPendulumData::Accelerator' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetPendulumData, MaxSpeed) == 0x000028, "Member 'TsMoveBlueprintFunctionLibrary_C_SetPendulumData::MaxSpeed' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetPendulumData, MaxFallingSpeed) == 0x00002C, "Member 'TsMoveBlueprintFunctionLibrary_C_SetPendulumData::MaxFallingSpeed' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetPendulumData, __WorldContext) == 0x000030, "Member 'TsMoveBlueprintFunctionLibrary_C_SetPendulumData::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.Reset
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_Reset final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_Reset) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_Reset");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_Reset) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_Reset");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_Reset, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_Reset::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_Reset, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_Reset::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetGrabPoint
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetGrabPoint final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                Point;                                             // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetGrabPoint) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetGrabPoint");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetGrabPoint) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetGrabPoint");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetGrabPoint, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetGrabPoint::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetGrabPoint, Point) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetGrabPoint::Point' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetGrabPoint, __WorldContext) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_SetGrabPoint::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetGrabPoint
// 0x0020 (0x0020 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetGrabPoint final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetGrabPoint) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetGrabPoint");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetGrabPoint) == 0x000020, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetGrabPoint");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetGrabPoint, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetGrabPoint::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetGrabPoint, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetGrabPoint::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetGrabPoint, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetGrabPoint::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetHooked
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetHooked final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          IsHooked;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetHooked) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetHooked");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetHooked) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetHooked");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetHooked, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetHooked::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetHooked, IsHooked) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetHooked::IsHooked' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetHooked, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_SetHooked::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetHooked
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetHooked final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetHooked) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetHooked");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetHooked) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetHooked");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetHooked, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetHooked::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetHooked, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetHooked::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetHooked, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetHooked::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetSocketName
// 0x0020 (0x0020 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetSocketName final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SocketName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetSocketName) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetSocketName");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetSocketName) == 0x000020, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetSocketName");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetSocketName, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetSocketName::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetSocketName, SocketName) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_SetSocketName::SocketName' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetSocketName, __WorldContext) == 0x000018, "Member 'TsMoveBlueprintFunctionLibrary_C_SetSocketName::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetRopeForce
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetRopeForce final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         RopeForce;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetRopeForce) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetRopeForce");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetRopeForce) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetRopeForce");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetRopeForce, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetRopeForce::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetRopeForce, RopeForce) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetRopeForce::RopeForce' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetRopeForce, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_SetRopeForce::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetRopeForce
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetRopeForce final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetRopeForce) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetRopeForce");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetRopeForce) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetRopeForce");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetRopeForce, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetRopeForce::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetRopeForce, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetRopeForce::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetRopeForce, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetRopeForce::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetDistanceRopeToActor
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetDistanceRopeToActor final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         RopeForce;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetDistanceRopeToActor) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetDistanceRopeToActor");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetDistanceRopeToActor) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetDistanceRopeToActor");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetDistanceRopeToActor, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetDistanceRopeToActor::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetDistanceRopeToActor, RopeForce) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetDistanceRopeToActor::RopeForce' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetDistanceRopeToActor, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_SetDistanceRopeToActor::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetDistanceRopeToActor
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetDistanceRopeToActor final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetDistanceRopeToActor) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetDistanceRopeToActor");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetDistanceRopeToActor) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetDistanceRopeToActor");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetDistanceRopeToActor, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetDistanceRopeToActor::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetDistanceRopeToActor, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetDistanceRopeToActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetDistanceRopeToActor, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetDistanceRopeToActor::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetAirControl
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetAirControl final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         AirControl;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetAirControl) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetAirControl");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetAirControl) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetAirControl");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAirControl, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAirControl::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAirControl, AirControl) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAirControl::AirControl' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetAirControl, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_SetAirControl::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetAirControl
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetAirControl final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetAirControl) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetAirControl");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetAirControl) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetAirControl");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetAirControl, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetAirControl::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetAirControl, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetAirControl::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetAirControl, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetAirControl::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetUpLength
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetUpLength final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         Length;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetUpLength) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetUpLength");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetUpLength) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetUpLength");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetUpLength, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetUpLength::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetUpLength, Length) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetUpLength::Length' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetUpLength, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_SetUpLength::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetCanMoveFromInput
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetCanMoveFromInput final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CanMove;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetCanMoveFromInput) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetCanMoveFromInput");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetCanMoveFromInput) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetCanMoveFromInput");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetCanMoveFromInput, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetCanMoveFromInput::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetCanMoveFromInput, CanMove) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetCanMoveFromInput::CanMove' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetCanMoveFromInput, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_SetCanMoveFromInput::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.UpdateAnimInfoMoveMonster
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMoveMonster final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ABPLogicParams_C*                   AnimLogicParams;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMoveMonster) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMoveMonster");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMoveMonster) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMoveMonster");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMoveMonster, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMoveMonster::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMoveMonster, AnimLogicParams) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMoveMonster::AnimLogicParams' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMoveMonster, __WorldContext) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMoveMonster::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.UpdateAnimInfoMove
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMove final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ABPLogicParams_C*                   AnimLogicParams;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMove) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMove");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMove) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMove");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMove, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMove::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMove, AnimLogicParams) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMove::AnimLogicParams' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMove, __WorldContext) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMove::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.UpdateAnimInfoMoveRoleNpc
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMoveRoleNpc final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ABPLogicParams_C*                   AnimLogicParams;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMoveRoleNpc) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMoveRoleNpc");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMoveRoleNpc) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMoveRoleNpc");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMoveRoleNpc, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMoveRoleNpc::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMoveRoleNpc, AnimLogicParams) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMoveRoleNpc::AnimLogicParams' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMoveRoleNpc, __WorldContext) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_UpdateAnimInfoMoveRoleNpc::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.TurnOffAutomaticFlightMode
// 0x0010 (0x0010 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_TurnOffAutomaticFlightMode final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_TurnOffAutomaticFlightMode) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_TurnOffAutomaticFlightMode");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_TurnOffAutomaticFlightMode) == 0x000010, "Wrong size on TsMoveBlueprintFunctionLibrary_C_TurnOffAutomaticFlightMode");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_TurnOffAutomaticFlightMode, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_TurnOffAutomaticFlightMode::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_TurnOffAutomaticFlightMode, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_TurnOffAutomaticFlightMode::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.TurnOnAutomaticFlightMode
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_TurnOnAutomaticFlightMode final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UICM_AutomaticFlight_DataBase_C*        DataAsset;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_TurnOnAutomaticFlightMode) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_TurnOnAutomaticFlightMode");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_TurnOnAutomaticFlightMode) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_TurnOnAutomaticFlightMode");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_TurnOnAutomaticFlightMode, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_TurnOnAutomaticFlightMode::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_TurnOnAutomaticFlightMode, DataAsset) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_TurnOnAutomaticFlightMode::DataAsset' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_TurnOnAutomaticFlightMode, __WorldContext) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_TurnOnAutomaticFlightMode::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.HasMoveInputOrTickIntervalAndModelBuffer
// 0x0018 (0x0018 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_HasMoveInputOrTickIntervalAndModelBuffer final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_HasMoveInputOrTickIntervalAndModelBuffer) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_HasMoveInputOrTickIntervalAndModelBuffer");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_HasMoveInputOrTickIntervalAndModelBuffer) == 0x000018, "Wrong size on TsMoveBlueprintFunctionLibrary_C_HasMoveInputOrTickIntervalAndModelBuffer");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_HasMoveInputOrTickIntervalAndModelBuffer, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_HasMoveInputOrTickIntervalAndModelBuffer::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_HasMoveInputOrTickIntervalAndModelBuffer, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_HasMoveInputOrTickIntervalAndModelBuffer::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_HasMoveInputOrTickIntervalAndModelBuffer, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_HasMoveInputOrTickIntervalAndModelBuffer::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetActorLocationWithContext
// 0x0038 (0x0038 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetActorLocationWithContext final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sweep;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Context;                                           // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetActorLocationWithContext) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetActorLocationWithContext");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetActorLocationWithContext) == 0x000038, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetActorLocationWithContext");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorLocationWithContext, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorLocationWithContext::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorLocationWithContext, Location) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorLocationWithContext::Location' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorLocationWithContext, Sweep) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorLocationWithContext::Sweep' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorLocationWithContext, Context) == 0x000018, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorLocationWithContext::Context' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorLocationWithContext, __WorldContext) == 0x000028, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorLocationWithContext::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorLocationWithContext, ReturnValue) == 0x000030, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorLocationWithContext::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SetActorLocationAndRotationWithContext
// 0x0038 (0x0038 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SetActorLocationAndRotationWithContext final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Sweep;                                             // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Context;                                           // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SetActorLocationAndRotationWithContext) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SetActorLocationAndRotationWithContext");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SetActorLocationAndRotationWithContext) == 0x000038, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SetActorLocationAndRotationWithContext");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorLocationAndRotationWithContext, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorLocationAndRotationWithContext::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorLocationAndRotationWithContext, Location) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorLocationAndRotationWithContext::Location' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorLocationAndRotationWithContext, Rotation) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorLocationAndRotationWithContext::Rotation' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorLocationAndRotationWithContext, Sweep) == 0x00001C, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorLocationAndRotationWithContext::Sweep' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorLocationAndRotationWithContext, Context) == 0x000020, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorLocationAndRotationWithContext::Context' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SetActorLocationAndRotationWithContext, __WorldContext) == 0x000030, "Member 'TsMoveBlueprintFunctionLibrary_C_SetActorLocationAndRotationWithContext::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.AddActorWorldOffsetWithContext
// 0x0030 (0x0030 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_AddActorWorldOffsetWithContext final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sweep;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Context;                                           // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_AddActorWorldOffsetWithContext) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_AddActorWorldOffsetWithContext");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_AddActorWorldOffsetWithContext) == 0x000030, "Wrong size on TsMoveBlueprintFunctionLibrary_C_AddActorWorldOffsetWithContext");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_AddActorWorldOffsetWithContext, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_AddActorWorldOffsetWithContext::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_AddActorWorldOffsetWithContext, Offset) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_AddActorWorldOffsetWithContext::Offset' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_AddActorWorldOffsetWithContext, Sweep) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_AddActorWorldOffsetWithContext::Sweep' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_AddActorWorldOffsetWithContext, Context) == 0x000018, "Member 'TsMoveBlueprintFunctionLibrary_C_AddActorWorldOffsetWithContext::Context' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_AddActorWorldOffsetWithContext, __WorldContext) == 0x000028, "Member 'TsMoveBlueprintFunctionLibrary_C_AddActorWorldOffsetWithContext::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.AddActorWorldRotationWithContext
// 0x0030 (0x0030 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_AddActorWorldRotationWithContext final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Sweep;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Context;                                           // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_AddActorWorldRotationWithContext) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_AddActorWorldRotationWithContext");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_AddActorWorldRotationWithContext) == 0x000030, "Wrong size on TsMoveBlueprintFunctionLibrary_C_AddActorWorldRotationWithContext");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_AddActorWorldRotationWithContext, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_AddActorWorldRotationWithContext::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_AddActorWorldRotationWithContext, Rotation) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_AddActorWorldRotationWithContext::Rotation' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_AddActorWorldRotationWithContext, Sweep) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_AddActorWorldRotationWithContext::Sweep' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_AddActorWorldRotationWithContext, Context) == 0x000018, "Member 'TsMoveBlueprintFunctionLibrary_C_AddActorWorldRotationWithContext::Context' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_AddActorWorldRotationWithContext, __WorldContext) == 0x000028, "Member 'TsMoveBlueprintFunctionLibrary_C_AddActorWorldRotationWithContext::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.AddActorLocalRotationWithContext
// 0x0030 (0x0030 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_AddActorLocalRotationWithContext final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Sweep;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Context;                                           // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_AddActorLocalRotationWithContext) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_AddActorLocalRotationWithContext");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_AddActorLocalRotationWithContext) == 0x000030, "Wrong size on TsMoveBlueprintFunctionLibrary_C_AddActorLocalRotationWithContext");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_AddActorLocalRotationWithContext, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_AddActorLocalRotationWithContext::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_AddActorLocalRotationWithContext, Rotation) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_AddActorLocalRotationWithContext::Rotation' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_AddActorLocalRotationWithContext, Sweep) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_AddActorLocalRotationWithContext::Sweep' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_AddActorLocalRotationWithContext, Context) == 0x000018, "Member 'TsMoveBlueprintFunctionLibrary_C_AddActorLocalRotationWithContext::Context' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_AddActorLocalRotationWithContext, __WorldContext) == 0x000028, "Member 'TsMoveBlueprintFunctionLibrary_C_AddActorLocalRotationWithContext::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.AddActorLocalOffsetWithContext
// 0x0030 (0x0030 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_AddActorLocalOffsetWithContext final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sweep;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Context;                                           // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_AddActorLocalOffsetWithContext) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_AddActorLocalOffsetWithContext");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_AddActorLocalOffsetWithContext) == 0x000030, "Wrong size on TsMoveBlueprintFunctionLibrary_C_AddActorLocalOffsetWithContext");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_AddActorLocalOffsetWithContext, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_AddActorLocalOffsetWithContext::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_AddActorLocalOffsetWithContext, Offset) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_AddActorLocalOffsetWithContext::Offset' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_AddActorLocalOffsetWithContext, Sweep) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_AddActorLocalOffsetWithContext::Sweep' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_AddActorLocalOffsetWithContext, Context) == 0x000018, "Member 'TsMoveBlueprintFunctionLibrary_C_AddActorLocalOffsetWithContext::Context' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_AddActorLocalOffsetWithContext, __WorldContext) == 0x000028, "Member 'TsMoveBlueprintFunctionLibrary_C_AddActorLocalOffsetWithContext::__WorldContext' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.GetSwimLocation
// 0x0020 (0x0020 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_GetSwimLocation final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_GetSwimLocation) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_GetSwimLocation");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_GetSwimLocation) == 0x000020, "Wrong size on TsMoveBlueprintFunctionLibrary_C_GetSwimLocation");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetSwimLocation, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_GetSwimLocation::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetSwimLocation, __WorldContext) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_GetSwimLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_GetSwimLocation, ReturnValue) == 0x000010, "Member 'TsMoveBlueprintFunctionLibrary_C_GetSwimLocation::ReturnValue' has a wrong offset!");

// Function TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C.SimpleSwim
// 0x0030 (0x0030 - 0x0000)
struct TsMoveBlueprintFunctionLibrary_C_SimpleSwim final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DetectedHeight;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentSpeed;                                      // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0020(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsMoveBlueprintFunctionLibrary_C_SimpleSwim) == 0x000008, "Wrong alignment on TsMoveBlueprintFunctionLibrary_C_SimpleSwim");
static_assert(sizeof(TsMoveBlueprintFunctionLibrary_C_SimpleSwim) == 0x000030, "Wrong size on TsMoveBlueprintFunctionLibrary_C_SimpleSwim");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SimpleSwim, EntityId) == 0x000000, "Member 'TsMoveBlueprintFunctionLibrary_C_SimpleSwim::EntityId' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SimpleSwim, DeltaSeconds) == 0x000004, "Member 'TsMoveBlueprintFunctionLibrary_C_SimpleSwim::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SimpleSwim, DetectedHeight) == 0x000008, "Member 'TsMoveBlueprintFunctionLibrary_C_SimpleSwim::DetectedHeight' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SimpleSwim, CurrentSpeed) == 0x00000C, "Member 'TsMoveBlueprintFunctionLibrary_C_SimpleSwim::CurrentSpeed' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SimpleSwim, __WorldContext) == 0x000018, "Member 'TsMoveBlueprintFunctionLibrary_C_SimpleSwim::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsMoveBlueprintFunctionLibrary_C_SimpleSwim, ReturnValue) == 0x000020, "Member 'TsMoveBlueprintFunctionLibrary_C_SimpleSwim::ReturnValue' has a wrong offset!");

}

