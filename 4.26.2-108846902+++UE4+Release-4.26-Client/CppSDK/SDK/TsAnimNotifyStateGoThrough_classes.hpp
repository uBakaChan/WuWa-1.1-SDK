#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsAnimNotifyStateGoThrough

#include "Basic.hpp"

#include "KuroRenderingRuntimeBPPlugin_classes.hpp"


namespace SDK
{

// TypeScriptGeneratedClass TsAnimNotifyStateGoThrough.TsAnimNotifyStateGoThrough_C
// 0x0018 (0x0060 - 0x0048)
class UTsAnimNotifyStateGoThrough_C final : public UKuroAnimNotifyState
{
public:
	int32                                         FirstGoThroughPriority;                            // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SecondHitPriority;                                 // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldGoThroughPriority;                              // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldHitPriority;                                    // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeftTime;                                          // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnd;                                             // 0x005C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);
	bool K2_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime);
	bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);

	class FString GetNotifyName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TsAnimNotifyStateGoThrough_C">();
	}
	static class UTsAnimNotifyStateGoThrough_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTsAnimNotifyStateGoThrough_C>();
	}
};
static_assert(alignof(UTsAnimNotifyStateGoThrough_C) == 0x000008, "Wrong alignment on UTsAnimNotifyStateGoThrough_C");
static_assert(sizeof(UTsAnimNotifyStateGoThrough_C) == 0x000060, "Wrong size on UTsAnimNotifyStateGoThrough_C");
static_assert(offsetof(UTsAnimNotifyStateGoThrough_C, FirstGoThroughPriority) == 0x000048, "Member 'UTsAnimNotifyStateGoThrough_C::FirstGoThroughPriority' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateGoThrough_C, SecondHitPriority) == 0x00004C, "Member 'UTsAnimNotifyStateGoThrough_C::SecondHitPriority' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateGoThrough_C, OldGoThroughPriority) == 0x000050, "Member 'UTsAnimNotifyStateGoThrough_C::OldGoThroughPriority' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateGoThrough_C, OldHitPriority) == 0x000054, "Member 'UTsAnimNotifyStateGoThrough_C::OldHitPriority' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateGoThrough_C, LeftTime) == 0x000058, "Member 'UTsAnimNotifyStateGoThrough_C::LeftTime' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateGoThrough_C, IsEnd) == 0x00005C, "Member 'UTsAnimNotifyStateGoThrough_C::IsEnd' has a wrong offset!");

}

