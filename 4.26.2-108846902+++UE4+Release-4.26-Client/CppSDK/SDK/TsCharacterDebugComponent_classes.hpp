#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsCharacterDebugComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// TypeScriptGeneratedClass TsCharacterDebugComponent.TsCharacterDebugComponent_C
// 0x0058 (0x0118 - 0x00C0)
class UTsCharacterDebugComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         MaxFixSpeed;                                       // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StaticInit;                                        // 0x00CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StaticAttrId;                                      // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 StaticAiId;                                        // 0x00D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	float                                         TestRiseSpeed;                                     // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               EnterClimbTrace;                                   // 0x00EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               UpArriveClimbTrace;                                // 0x00ED(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               VaultClimbTrace;                                   // 0x00EE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               ClimbingTrace;                                     // 0x00EF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBehaviorTree*                          BehaviorTree;                                      // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 PatrolSpline;                                      // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DebugEntityId;                                     // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         DebugCreatureId;                                   // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DebugInteractCount;                                // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TsCharacterDebugComponent(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void ActivateDebugSpeed(bool Param_Activate);
	void DebugDrawActivateArea();
	void ChangeNoTop();
	void ChangeEnterClimbTrace();
	void ChangeVaultClimbTrace();
	void ChangeUpArriveClimbTrace();
	void ChangeClimbingTrace();
	void SetDebugRiseEnable(bool Enable);
	void DrawDebugPatrolPoints();
	void DrawErrorNavigationPaths();
	void SetMovementDebug(bool NewDebug);
	void AiDebugDraw();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TsCharacterDebugComponent_C">();
	}
	static class UTsCharacterDebugComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTsCharacterDebugComponent_C>();
	}
};
static_assert(alignof(UTsCharacterDebugComponent_C) == 0x000008, "Wrong alignment on UTsCharacterDebugComponent_C");
static_assert(sizeof(UTsCharacterDebugComponent_C) == 0x000118, "Wrong size on UTsCharacterDebugComponent_C");
static_assert(offsetof(UTsCharacterDebugComponent_C, UberGraphFrame) == 0x0000C0, "Member 'UTsCharacterDebugComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTsCharacterDebugComponent_C, MaxFixSpeed) == 0x0000C8, "Member 'UTsCharacterDebugComponent_C::MaxFixSpeed' has a wrong offset!");
static_assert(offsetof(UTsCharacterDebugComponent_C, StaticInit) == 0x0000CC, "Member 'UTsCharacterDebugComponent_C::StaticInit' has a wrong offset!");
static_assert(offsetof(UTsCharacterDebugComponent_C, StaticAttrId) == 0x0000D0, "Member 'UTsCharacterDebugComponent_C::StaticAttrId' has a wrong offset!");
static_assert(offsetof(UTsCharacterDebugComponent_C, StaticAiId) == 0x0000D8, "Member 'UTsCharacterDebugComponent_C::StaticAiId' has a wrong offset!");
static_assert(offsetof(UTsCharacterDebugComponent_C, TestRiseSpeed) == 0x0000E8, "Member 'UTsCharacterDebugComponent_C::TestRiseSpeed' has a wrong offset!");
static_assert(offsetof(UTsCharacterDebugComponent_C, EnterClimbTrace) == 0x0000EC, "Member 'UTsCharacterDebugComponent_C::EnterClimbTrace' has a wrong offset!");
static_assert(offsetof(UTsCharacterDebugComponent_C, UpArriveClimbTrace) == 0x0000ED, "Member 'UTsCharacterDebugComponent_C::UpArriveClimbTrace' has a wrong offset!");
static_assert(offsetof(UTsCharacterDebugComponent_C, VaultClimbTrace) == 0x0000EE, "Member 'UTsCharacterDebugComponent_C::VaultClimbTrace' has a wrong offset!");
static_assert(offsetof(UTsCharacterDebugComponent_C, ClimbingTrace) == 0x0000EF, "Member 'UTsCharacterDebugComponent_C::ClimbingTrace' has a wrong offset!");
static_assert(offsetof(UTsCharacterDebugComponent_C, BehaviorTree) == 0x0000F0, "Member 'UTsCharacterDebugComponent_C::BehaviorTree' has a wrong offset!");
static_assert(offsetof(UTsCharacterDebugComponent_C, PatrolSpline) == 0x0000F8, "Member 'UTsCharacterDebugComponent_C::PatrolSpline' has a wrong offset!");
static_assert(offsetof(UTsCharacterDebugComponent_C, DebugEntityId) == 0x000100, "Member 'UTsCharacterDebugComponent_C::DebugEntityId' has a wrong offset!");
static_assert(offsetof(UTsCharacterDebugComponent_C, DebugCreatureId) == 0x000108, "Member 'UTsCharacterDebugComponent_C::DebugCreatureId' has a wrong offset!");
static_assert(offsetof(UTsCharacterDebugComponent_C, DebugInteractCount) == 0x000110, "Member 'UTsCharacterDebugComponent_C::DebugInteractCount' has a wrong offset!");

}

