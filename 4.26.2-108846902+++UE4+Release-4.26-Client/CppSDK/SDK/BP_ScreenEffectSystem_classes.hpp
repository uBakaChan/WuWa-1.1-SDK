#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ScreenEffectSystem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ScreenEffectSystem.BP_ScreenEffectSystem_C
// 0x00B0 (0x0358 - 0x02A8)
class ABP_ScreenEffectSystem_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UEffectScreenPlayData_C*                DebugData;                                         // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UEffectScreenPlayData_C*, class ABP_ScreenEffectPlayer_C*> Effects;                                           // 0x02C0(0x0050)(Edit, BlueprintVisible)
	TArray<class UEffectScreenPlayData_C*>        OrderDatas;                                        // 0x0310(0x0010)(Edit, BlueprintVisible)
	TArray<class UEffectScreenPlayData_C*>        IndependentDatas;                                  // 0x0320(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bEvaluateOrderEffects;                             // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AUIContainerActor*                      EditorScreenRoot;                                  // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AUIContainerActor*                      ScreenEffectFightRoot;                             // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AUIContainerActor*                      ScreenEffectPlotRoot;                              // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnvironmentFactorDebug;                            // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateEnvironmentFactorDebug();
	void UpdateSEEnvironmentFactor(class UEffectScreenPlayData_C* Data, float EnvironmentFactor);
	void DestroyScreenEffect(class UEffectScreenPlayData_C* Data);
	void SpawnPlayer(class UEffectScreenPlayData_C* Data, class ABP_ScreenEffectPlayer_C** OutputPlayer);
	void GetScreenEffectPlotRoot(class AUIContainerActor** Param_ScreenEffectPlotRoot);
	void Init_SEPlotRoot();
	void Init_SEFight_Root();
	void GetScreenEffectFightRoot(class AUIContainerActor** Param_ScreenEffectFightRoot);
	void UpdateLGUIMaterialParams();
	void ClearSystem();
	void SetVisibilityOfSystem(bool Visibility, bool bOverrideFadeSpeed, float OverrideFadeSpeed);
	void EndEffectDebug();
	void EndScreenEffect(class UEffectScreenPlayData_C* Data);
	void EvaluateOrderEffects();
	void PlayEffectDebug();
	void PlayScreenEffect(class UEffectScreenPlayData_C* Data);
	void AddEffect(class UEffectScreenPlayData_C* Data, class ABP_ScreenEffectPlayer_C** EffectPlayer);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ExecuteUbergraph_BP_ScreenEffectSystem(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ScreenEffectSystem_C">();
	}
	static class ABP_ScreenEffectSystem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ScreenEffectSystem_C>();
	}
};
static_assert(alignof(ABP_ScreenEffectSystem_C) == 0x000008, "Wrong alignment on ABP_ScreenEffectSystem_C");
static_assert(sizeof(ABP_ScreenEffectSystem_C) == 0x000358, "Wrong size on ABP_ScreenEffectSystem_C");
static_assert(offsetof(ABP_ScreenEffectSystem_C, UberGraphFrame) == 0x0002A8, "Member 'ABP_ScreenEffectSystem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ScreenEffectSystem_C, DefaultSceneRoot) == 0x0002B0, "Member 'ABP_ScreenEffectSystem_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ScreenEffectSystem_C, DebugData) == 0x0002B8, "Member 'ABP_ScreenEffectSystem_C::DebugData' has a wrong offset!");
static_assert(offsetof(ABP_ScreenEffectSystem_C, Effects) == 0x0002C0, "Member 'ABP_ScreenEffectSystem_C::Effects' has a wrong offset!");
static_assert(offsetof(ABP_ScreenEffectSystem_C, OrderDatas) == 0x000310, "Member 'ABP_ScreenEffectSystem_C::OrderDatas' has a wrong offset!");
static_assert(offsetof(ABP_ScreenEffectSystem_C, IndependentDatas) == 0x000320, "Member 'ABP_ScreenEffectSystem_C::IndependentDatas' has a wrong offset!");
static_assert(offsetof(ABP_ScreenEffectSystem_C, bEvaluateOrderEffects) == 0x000330, "Member 'ABP_ScreenEffectSystem_C::bEvaluateOrderEffects' has a wrong offset!");
static_assert(offsetof(ABP_ScreenEffectSystem_C, EditorScreenRoot) == 0x000338, "Member 'ABP_ScreenEffectSystem_C::EditorScreenRoot' has a wrong offset!");
static_assert(offsetof(ABP_ScreenEffectSystem_C, ScreenEffectFightRoot) == 0x000340, "Member 'ABP_ScreenEffectSystem_C::ScreenEffectFightRoot' has a wrong offset!");
static_assert(offsetof(ABP_ScreenEffectSystem_C, ScreenEffectPlotRoot) == 0x000348, "Member 'ABP_ScreenEffectSystem_C::ScreenEffectPlotRoot' has a wrong offset!");
static_assert(offsetof(ABP_ScreenEffectSystem_C, EnvironmentFactorDebug) == 0x000350, "Member 'ABP_ScreenEffectSystem_C::EnvironmentFactorDebug' has a wrong offset!");

}

