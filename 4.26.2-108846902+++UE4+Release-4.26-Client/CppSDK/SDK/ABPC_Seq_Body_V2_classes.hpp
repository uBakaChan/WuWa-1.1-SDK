#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABPC_Seq_Body_V2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ABPC_Seq_Body_V2.ABPC_Seq_Body_V2_C
// 0x0048 (0x0108 - 0x00C0)
class UABPC_Seq_Body_V2_C final : public UActorComponent
{
public:
	bool                                          _i___;                                             // 0x00C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         I___C_;                                            // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	TArray<struct FNamedCurveValue>               NamedCurves;                                       // 0x00C8(0x0010)(Edit, BlueprintVisible)
	struct FRotator                               Add_LookAt;                                        // 0x00D8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Add_Bip001Head;                                    // 0x00E4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Add_Bip001Neck;                                    // 0x00F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Add_Bip001Spine2;                                  // 0x00FC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void SetAnimDataVectorByOwner(TMap<class FName, struct FVector>& VectorMap);
	void SetAnimDataFloatByOwner(TArray<struct FNamedCurveValue>& InCurves);
	void ProcessEye(const struct FVector& EyeLookAt, float AngleScale);

	float GetCurveValue(class FName CurveName) const;
	void GetCurves(TArray<struct FNamedCurveValue>* OutValues) const;
	class FName GetBindingName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABPC_Seq_Body_V2_C">();
	}
	static class UABPC_Seq_Body_V2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABPC_Seq_Body_V2_C>();
	}
};
static_assert(alignof(UABPC_Seq_Body_V2_C) == 0x000008, "Wrong alignment on UABPC_Seq_Body_V2_C");
static_assert(sizeof(UABPC_Seq_Body_V2_C) == 0x000108, "Wrong size on UABPC_Seq_Body_V2_C");
static_assert(offsetof(UABPC_Seq_Body_V2_C, _i___) == 0x0000C0, "Member 'UABPC_Seq_Body_V2_C::_i___' has a wrong offset!");
static_assert(offsetof(UABPC_Seq_Body_V2_C, I___C_) == 0x0000C4, "Member 'UABPC_Seq_Body_V2_C::I___C_' has a wrong offset!");
static_assert(offsetof(UABPC_Seq_Body_V2_C, NamedCurves) == 0x0000C8, "Member 'UABPC_Seq_Body_V2_C::NamedCurves' has a wrong offset!");
static_assert(offsetof(UABPC_Seq_Body_V2_C, Add_LookAt) == 0x0000D8, "Member 'UABPC_Seq_Body_V2_C::Add_LookAt' has a wrong offset!");
static_assert(offsetof(UABPC_Seq_Body_V2_C, Add_Bip001Head) == 0x0000E4, "Member 'UABPC_Seq_Body_V2_C::Add_Bip001Head' has a wrong offset!");
static_assert(offsetof(UABPC_Seq_Body_V2_C, Add_Bip001Neck) == 0x0000F0, "Member 'UABPC_Seq_Body_V2_C::Add_Bip001Neck' has a wrong offset!");
static_assert(offsetof(UABPC_Seq_Body_V2_C, Add_Bip001Spine2) == 0x0000FC, "Member 'UABPC_Seq_Body_V2_C::Add_Bip001Spine2' has a wrong offset!");

}

