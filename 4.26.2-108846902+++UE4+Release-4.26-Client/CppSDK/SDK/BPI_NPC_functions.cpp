#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_NPC

#include "Basic.hpp"

#include "BPI_NPC_classes.hpp"
#include "BPI_NPC_parameters.hpp"


namespace SDK
{

// Function BPI_NPC.BPI_NPC_C.GetNPCName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString IBPI_NPC_C::GetNPCName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_NPC_C", "GetNPCName");

	Params::BPI_NPC_C_GetNPCName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPI_NPC.BPI_NPC_C.GetCurrInteractionConfig
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSInteractionConfig              ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash)

struct FSInteractionConfig IBPI_NPC_C::GetCurrInteractionConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_NPC_C", "GetCurrInteractionConfig");

	Params::BPI_NPC_C_GetCurrInteractionConfig Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPI_NPC.BPI_NPC_C.InteractNPC
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_NPC_C::InteractNPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_NPC_C", "InteractNPC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_NPC.BPI_NPC_C.TriggerNPCInteraction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool IBPI_NPC_C::TriggerNPCInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_NPC_C", "TriggerNPCInteraction");

	Params::BPI_NPC_C_TriggerNPCInteraction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPI_NPC.BPI_NPC_C.IsNPCInteractable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool IBPI_NPC_C::IsNPCInteractable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_NPC_C", "IsNPCInteractable");

	Params::BPI_NPC_C_IsNPCInteractable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPI_NPC.BPI_NPC_C.ApplyEntityConfig
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSEntityConfig                   InConfig                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool IBPI_NPC_C::ApplyEntityConfig(const struct FSEntityConfig& InConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_NPC_C", "ApplyEntityConfig");

	Params::BPI_NPC_C_ApplyEntityConfig Parms{};

	Parms.InConfig = std::move(InConfig);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPI_NPC.BPI_NPC_C.NPC(Þ‹ö
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EventID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_NPC_C::NPC______(class FName EventID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_NPC_C", "NPC(Þ‹ö");

	Params::BPI_NPC_C_NPC______ Parms{};

	Parms.EventID = EventID;

	UObject::ProcessEvent(Func, &Parms);
}

}

