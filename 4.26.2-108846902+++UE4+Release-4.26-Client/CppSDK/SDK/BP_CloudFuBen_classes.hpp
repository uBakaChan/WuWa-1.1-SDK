#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CloudFuBen

#include "Basic.hpp"

#include "KuroCurve_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CloudFuBen.BP_CloudFuBen_C
// 0x0250 (0x0508 - 0x02B8)
class ABP_CloudFuBen_C final : public AKuroEditorTickActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Cloud_Anomalies;                                   // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sun_Moon;                                          // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cloud_BigShape;                                    // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cloud_Special;                                     // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cloud_Top;                                         // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_Top;                                           // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_Anomalies;                                     // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_SunMoon;                                       // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_BigShape;                                      // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpdatePerFourFrame01;                              // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          UpdatePerFourFrame02;                              // 0x0311(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_312[0x6];                                      // 0x0312(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Top_Texture;                                       // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             POI_Texture;                                       // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               POI_Rotation;                                      // 0x0328(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      TOP_Material;                                      // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UV1UV2_;                                           // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UVTiling;                                          // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CloudSpeed;                                        // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Top_Rotation;                                      // 0x034C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Special_Texture;                                   // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Special_Material;                                  // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Special_Rotation;                                  // 0x0360(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Intensity;                                         // 0x036C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TransSortNumber;                                   // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CloudSpecialMesh;                                  // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Noise_Texture;                                     // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NoiseStrength;                                     // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NoiseSpeed;                                        // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NoiseTilling;                                      // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Anomalies_Texture;                                 // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Anomalies_Rotation;                                // 0x03A0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Anomalies_Intensity;                               // 0x03AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Anomalies_Scale;                                   // 0x03B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKuroCurveFloat                        Sky;                                               // 0x03C0(0x0090)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FKuroCurveFloat                        StarTrails;                                        // 0x0450(0x0090)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Delta_Seconds;                                     // 0x04E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x04E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x04E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTick;                                            // 0x04EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor)
	uint8                                         Pad_4ED[0x3];                                      // 0x04ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Anomalies_NoiseSpeed;                              // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Anomalies_NoiseStrength;                           // 0x04F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Anomalies_NoiseTilling;                            // 0x04F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Anomalies_NoiseTex;                                // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_CloudFuBen(int32 EntryPoint);
	void EditorTick(float DeltaSeconds);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void Single_Cloud_Parameters_Initial(class UMaterialInstanceDynamic* DMI, class UStaticMeshComponent* Mesh, class UTexture2D* Texture, bool Param_UV1UV2_, float Param_CloudSpeed, float Param_Top_Rotation, float Param_UVTiling, float Param_NoiseStrength, float Param_NoiseSpeed, float Param_NoiseTilling, class UTexture2D* NoiseTex);
	void CreateDMI(class UStaticMeshComponent* Mesh, class UMaterialInstanceDynamic** DMI);
	void UpdatePerFourFrame();
	void Single_POI_Parameters_Initial(class UMaterialInstanceDynamic* DMI, class UStaticMeshComponent* Mesh, class UTexture2D* Texture, const struct FRotator& POIRotation);
	void SunMoon_Parameters_Initial(class UMaterialInstanceDynamic* DMI, class UStaticMeshComponent* Mesh, class UTexture2D* Texture, const struct FRotator& POIRotation, float Param_Intensity);
	void Special_Parameters_Initial(class UMaterialInstanceDynamic* DMI, class UStaticMeshComponent* Mesh, class UTexture2D* Texture, const struct FRotator& POIRotation, float Param_Intensity, const struct FVector& Scale, class UTexture2D* NoiseTex, float Param_NoiseSpeed, float Param_NoiseStrength, float Param_NoiseTilling);
	void ChangeSky(bool Param_IsTick);
	void Timer(float* ElapsedTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CloudFuBen_C">();
	}
	static class ABP_CloudFuBen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CloudFuBen_C>();
	}
};
static_assert(alignof(ABP_CloudFuBen_C) == 0x000008, "Wrong alignment on ABP_CloudFuBen_C");
static_assert(sizeof(ABP_CloudFuBen_C) == 0x000508, "Wrong size on ABP_CloudFuBen_C");
static_assert(offsetof(ABP_CloudFuBen_C, UberGraphFrame) == 0x0002B8, "Member 'ABP_CloudFuBen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Cloud_Anomalies) == 0x0002C0, "Member 'ABP_CloudFuBen_C::Cloud_Anomalies' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Sun_Moon) == 0x0002C8, "Member 'ABP_CloudFuBen_C::Sun_Moon' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Cloud_BigShape) == 0x0002D0, "Member 'ABP_CloudFuBen_C::Cloud_BigShape' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Cloud_Special) == 0x0002D8, "Member 'ABP_CloudFuBen_C::Cloud_Special' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Cloud_Top) == 0x0002E0, "Member 'ABP_CloudFuBen_C::Cloud_Top' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, DefaultSceneRoot) == 0x0002E8, "Member 'ABP_CloudFuBen_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, DMI_Top) == 0x0002F0, "Member 'ABP_CloudFuBen_C::DMI_Top' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, DMI_Anomalies) == 0x0002F8, "Member 'ABP_CloudFuBen_C::DMI_Anomalies' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, DMI_SunMoon) == 0x000300, "Member 'ABP_CloudFuBen_C::DMI_SunMoon' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, DMI_BigShape) == 0x000308, "Member 'ABP_CloudFuBen_C::DMI_BigShape' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, UpdatePerFourFrame01) == 0x000310, "Member 'ABP_CloudFuBen_C::UpdatePerFourFrame01' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, UpdatePerFourFrame02) == 0x000311, "Member 'ABP_CloudFuBen_C::UpdatePerFourFrame02' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Top_Texture) == 0x000318, "Member 'ABP_CloudFuBen_C::Top_Texture' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, POI_Texture) == 0x000320, "Member 'ABP_CloudFuBen_C::POI_Texture' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, POI_Rotation) == 0x000328, "Member 'ABP_CloudFuBen_C::POI_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, TOP_Material) == 0x000338, "Member 'ABP_CloudFuBen_C::TOP_Material' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, UV1UV2_) == 0x000340, "Member 'ABP_CloudFuBen_C::UV1UV2_' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, UVTiling) == 0x000344, "Member 'ABP_CloudFuBen_C::UVTiling' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, CloudSpeed) == 0x000348, "Member 'ABP_CloudFuBen_C::CloudSpeed' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Top_Rotation) == 0x00034C, "Member 'ABP_CloudFuBen_C::Top_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Special_Texture) == 0x000350, "Member 'ABP_CloudFuBen_C::Special_Texture' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Special_Material) == 0x000358, "Member 'ABP_CloudFuBen_C::Special_Material' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Special_Rotation) == 0x000360, "Member 'ABP_CloudFuBen_C::Special_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Intensity) == 0x00036C, "Member 'ABP_CloudFuBen_C::Intensity' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, TransSortNumber) == 0x000370, "Member 'ABP_CloudFuBen_C::TransSortNumber' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, CloudSpecialMesh) == 0x000378, "Member 'ABP_CloudFuBen_C::CloudSpecialMesh' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Noise_Texture) == 0x000380, "Member 'ABP_CloudFuBen_C::Noise_Texture' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, NoiseStrength) == 0x000388, "Member 'ABP_CloudFuBen_C::NoiseStrength' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, NoiseSpeed) == 0x00038C, "Member 'ABP_CloudFuBen_C::NoiseSpeed' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, NoiseTilling) == 0x000390, "Member 'ABP_CloudFuBen_C::NoiseTilling' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Anomalies_Texture) == 0x000398, "Member 'ABP_CloudFuBen_C::Anomalies_Texture' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Anomalies_Rotation) == 0x0003A0, "Member 'ABP_CloudFuBen_C::Anomalies_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Anomalies_Intensity) == 0x0003AC, "Member 'ABP_CloudFuBen_C::Anomalies_Intensity' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Anomalies_Scale) == 0x0003B0, "Member 'ABP_CloudFuBen_C::Anomalies_Scale' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Sky) == 0x0003C0, "Member 'ABP_CloudFuBen_C::Sky' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, StarTrails) == 0x000450, "Member 'ABP_CloudFuBen_C::StarTrails' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Delta_Seconds) == 0x0004E0, "Member 'ABP_CloudFuBen_C::Delta_Seconds' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Time) == 0x0004E4, "Member 'ABP_CloudFuBen_C::Time' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Duration) == 0x0004E8, "Member 'ABP_CloudFuBen_C::Duration' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, IsTick) == 0x0004EC, "Member 'ABP_CloudFuBen_C::IsTick' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Anomalies_NoiseSpeed) == 0x0004F0, "Member 'ABP_CloudFuBen_C::Anomalies_NoiseSpeed' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Anomalies_NoiseStrength) == 0x0004F4, "Member 'ABP_CloudFuBen_C::Anomalies_NoiseStrength' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Anomalies_NoiseTilling) == 0x0004F8, "Member 'ABP_CloudFuBen_C::Anomalies_NoiseTilling' has a wrong offset!");
static_assert(offsetof(ABP_CloudFuBen_C, Anomalies_NoiseTex) == 0x000500, "Member 'ABP_CloudFuBen_C::Anomalies_NoiseTex' has a wrong offset!");

}

