#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FSM_Node

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "KuroUtility_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FSM_Node.BP_FSM_Node_C
// 0x0048 (0x00F0 - 0x00A8)
class UBP_FSM_Node_C final : public UKuroStateMachineBase
{
public:
	int32                                         __Id;                                              // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ____;                                              // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int64>                                 __Buff;                                            // 0x00B0(0x0010)(Edit, BlueprintVisible)
	TArray<int64>                                 _e___Buff;                                         // 0x00C0(0x0010)(Edit, BlueprintVisible)
	TArray<int64>                                 _____Buff;                                         // 0x00D0(0x0010)(Edit, BlueprintVisible)
	TArray<struct FGameplayTag>                   __Tag;                                             // 0x00E0(0x0010)(Edit, BlueprintVisible)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FSM_Node_C">();
	}
	static class UBP_FSM_Node_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_FSM_Node_C>();
	}
};
static_assert(alignof(UBP_FSM_Node_C) == 0x000008, "Wrong alignment on UBP_FSM_Node_C");
static_assert(sizeof(UBP_FSM_Node_C) == 0x0000F0, "Wrong size on UBP_FSM_Node_C");
static_assert(offsetof(UBP_FSM_Node_C, __Id) == 0x0000A8, "Member 'UBP_FSM_Node_C::__Id' has a wrong offset!");
static_assert(offsetof(UBP_FSM_Node_C, ____) == 0x0000AC, "Member 'UBP_FSM_Node_C::____' has a wrong offset!");
static_assert(offsetof(UBP_FSM_Node_C, __Buff) == 0x0000B0, "Member 'UBP_FSM_Node_C::__Buff' has a wrong offset!");
static_assert(offsetof(UBP_FSM_Node_C, _e___Buff) == 0x0000C0, "Member 'UBP_FSM_Node_C::_e___Buff' has a wrong offset!");
static_assert(offsetof(UBP_FSM_Node_C, _____Buff) == 0x0000D0, "Member 'UBP_FSM_Node_C::_____Buff' has a wrong offset!");
static_assert(offsetof(UBP_FSM_Node_C, __Tag) == 0x0000E0, "Member 'UBP_FSM_Node_C::__Tag' has a wrong offset!");

}

