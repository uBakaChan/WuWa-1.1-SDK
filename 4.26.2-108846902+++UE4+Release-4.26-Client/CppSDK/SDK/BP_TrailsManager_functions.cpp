#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TrailsManager

#include "Basic.hpp"

#include "BP_TrailsManager_classes.hpp"
#include "BP_TrailsManager_parameters.hpp"


namespace SDK
{

// Function BP_TrailsManager.BP_TrailsManager_C.OnProxyShow
// (Event, Public, BlueprintEvent)
// Parameters:
// class ALandscapeStreamingProxy*         Proxy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TrailsManager_C::OnProxyShow(class ALandscapeStreamingProxy* Proxy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TrailsManager_C", "OnProxyShow");

	Params::BP_TrailsManager_C_OnProxyShow Parms{};

	Parms.Proxy = Proxy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TrailsManager.BP_TrailsManager_C.OnProxyHide
// (Event, Public, BlueprintEvent)
// Parameters:
// class ALandscapeStreamingProxy*         Proxy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TrailsManager_C::OnProxyHide(class ALandscapeStreamingProxy* Proxy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TrailsManager_C", "OnProxyHide");

	Params::BP_TrailsManager_C_OnProxyHide Parms{};

	Parms.Proxy = Proxy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TrailsManager.BP_TrailsManager_C.ExecuteUbergraph_BP_TrailsManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TrailsManager_C::ExecuteUbergraph_BP_TrailsManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TrailsManager_C", "ExecuteUbergraph_BP_TrailsManager");

	Params::BP_TrailsManager_C_ExecuteUbergraph_BP_TrailsManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TrailsManager.BP_TrailsManager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_TrailsManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TrailsManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TrailsManager.BP_TrailsManager_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TrailsManager_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TrailsManager_C", "ReceiveTick");

	Params::BP_TrailsManager_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TrailsManager.BP_TrailsManager_C.IsEnable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsEnable                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TrailsManager_C::IsEnable(bool* Param_IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TrailsManager_C", "IsEnable");

	Params::BP_TrailsManager_C_IsEnable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsEnable != nullptr)
		*Param_IsEnable = Parms.Param_IsEnable;
}


// Function BP_TrailsManager.BP_TrailsManager_C.ShowProxy
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ALandscapeStreamingProxy*         Proxy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TrailsManager_C::ShowProxy(class ALandscapeStreamingProxy* Proxy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TrailsManager_C", "ShowProxy");

	Params::BP_TrailsManager_C_ShowProxy Parms{};

	Parms.Proxy = Proxy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TrailsManager.BP_TrailsManager_C.HideProxy
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ALandscapeStreamingProxy*         Proxy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TrailsManager_C::HideProxy(class ALandscapeStreamingProxy* Proxy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TrailsManager_C", "HideProxy");

	Params::BP_TrailsManager_C_HideProxy Parms{};

	Parms.Proxy = Proxy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TrailsManager.BP_TrailsManager_C.ContainsTag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ALandscapeStreamingProxy*         Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Str                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Param_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TrailsManager_C::ContainsTag(class ALandscapeStreamingProxy* Actor, class FName Str, bool* Ret, int32* Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TrailsManager_C", "ContainsTag");

	Params::BP_TrailsManager_C_ContainsTag Parms{};

	Parms.Actor = Actor;
	Parms.Str = Str;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;

	if (Param_Index != nullptr)
		*Param_Index = Parms.Param_Index;
}


// Function BP_TrailsManager.BP_TrailsManager_C.GetTag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ALandscapeStreamingProxy*         Proxy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Tag                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_TrailsManager_C::GetTag(class ALandscapeStreamingProxy* Proxy, int32 Param_Index, class FString* Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TrailsManager_C", "GetTag");

	Params::BP_TrailsManager_C_GetTag Parms{};

	Parms.Proxy = Proxy;
	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Tag != nullptr)
		*Tag = std::move(Parms.Tag);
}


// Function BP_TrailsManager.BP_TrailsManager_C.UpdateLandscapes
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TrailsManager_C::UpdateLandscapes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TrailsManager_C", "UpdateLandscapes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TrailsManager.BP_TrailsManager_C.test
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TrailsManager_C::Test()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TrailsManager_C", "test");

	UObject::ProcessEvent(Func, nullptr);
}

}

