#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AudioVisualizer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AudioVisualizer.BP_AudioVisualizer_C
// 0x00B0 (0x0358 - 0x02A8)
class ABP_AudioVisualizer_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         LeftRight_Amount_E70A81694434E6033ACF01BCCBB3EA40; // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeftRight_Speed_E70A81694434E6033ACF01BCCBB3EA40;  // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            LeftRight__Direction_E70A81694434E6033ACF01BCCBB3EA40; // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     LeftRight;                                         // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_Amount_E9903C6548E1132FB686C5B44E42F03F; // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_Speed_E9903C6548E1132FB686C5B44E42F03F; // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_E9903C6548E1132FB686C5B44E42F03F; // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BassTimeline_Amount_56F891924BAD722F43E980B6AFE54B74; // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BassTimeline_Speed_56F891924BAD722F43E980B6AFE54B74; // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            BassTimeline__Direction_56F891924BAD722F43E980B6AFE54B74; // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BassTimeline;                                      // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Amount_84FB19EE41A244783A5C418B4069C9D8; // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Speed_84FB19EE41A244783A5C418B4069C9D8; // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_84FB19EE41A244783A5C418B4069C9D8; // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewVar_0;                                          // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          Ak_Event;                                          // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A01Time;                                           // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A02Time;                                           // 0x0334(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A03Time;                                           // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A04Time;                                           // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A01Speed;                                          // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A02Speed;                                          // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A03Speed;                                          // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A04Speed;                                          // 0x034C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsingMax_;                                         // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayID;                                            // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AudioVisualizer(int32 EntryPoint);
	void Stop();
	void MIDICall(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo, const class FString& State);
	void ReceiveTick(float DeltaSeconds);
	void C4_On();
	void F_4_Off();
	void G_4_On();
	void G4_On();
	void F_4_On();
	void F4_On();
	void E4_On();
	void D_4_On();
	void D4_On();
	void C_4_On();
	void ReceiveBeginPlay();
	void LeftRight__UpdateFunc();
	void LeftRight__FinishedFunc();
	void Timeline_1__UpdateFunc();
	void Timeline_1__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void BassTimeline__UpdateFunc();
	void BassTimeline__FinishedFunc();
	void NotifyMidi(class UAkCallbackInfo* CallbackInfo, EAkCallbackType CallbackType, const class FString& State);
	void StopAllEffects();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AudioVisualizer_C">();
	}
	static class ABP_AudioVisualizer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AudioVisualizer_C>();
	}
};
static_assert(alignof(ABP_AudioVisualizer_C) == 0x000008, "Wrong alignment on ABP_AudioVisualizer_C");
static_assert(sizeof(ABP_AudioVisualizer_C) == 0x000358, "Wrong size on ABP_AudioVisualizer_C");
static_assert(offsetof(ABP_AudioVisualizer_C, UberGraphFrame) == 0x0002A8, "Member 'ABP_AudioVisualizer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, Ak) == 0x0002B0, "Member 'ABP_AudioVisualizer_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_AudioVisualizer_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, LeftRight_Amount_E70A81694434E6033ACF01BCCBB3EA40) == 0x0002C0, "Member 'ABP_AudioVisualizer_C::LeftRight_Amount_E70A81694434E6033ACF01BCCBB3EA40' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, LeftRight_Speed_E70A81694434E6033ACF01BCCBB3EA40) == 0x0002C4, "Member 'ABP_AudioVisualizer_C::LeftRight_Speed_E70A81694434E6033ACF01BCCBB3EA40' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, LeftRight__Direction_E70A81694434E6033ACF01BCCBB3EA40) == 0x0002C8, "Member 'ABP_AudioVisualizer_C::LeftRight__Direction_E70A81694434E6033ACF01BCCBB3EA40' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, LeftRight) == 0x0002D0, "Member 'ABP_AudioVisualizer_C::LeftRight' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, Timeline_1_Amount_E9903C6548E1132FB686C5B44E42F03F) == 0x0002D8, "Member 'ABP_AudioVisualizer_C::Timeline_1_Amount_E9903C6548E1132FB686C5B44E42F03F' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, Timeline_1_Speed_E9903C6548E1132FB686C5B44E42F03F) == 0x0002DC, "Member 'ABP_AudioVisualizer_C::Timeline_1_Speed_E9903C6548E1132FB686C5B44E42F03F' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, Timeline_1__Direction_E9903C6548E1132FB686C5B44E42F03F) == 0x0002E0, "Member 'ABP_AudioVisualizer_C::Timeline_1__Direction_E9903C6548E1132FB686C5B44E42F03F' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, Timeline_1) == 0x0002E8, "Member 'ABP_AudioVisualizer_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, BassTimeline_Amount_56F891924BAD722F43E980B6AFE54B74) == 0x0002F0, "Member 'ABP_AudioVisualizer_C::BassTimeline_Amount_56F891924BAD722F43E980B6AFE54B74' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, BassTimeline_Speed_56F891924BAD722F43E980B6AFE54B74) == 0x0002F4, "Member 'ABP_AudioVisualizer_C::BassTimeline_Speed_56F891924BAD722F43E980B6AFE54B74' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, BassTimeline__Direction_56F891924BAD722F43E980B6AFE54B74) == 0x0002F8, "Member 'ABP_AudioVisualizer_C::BassTimeline__Direction_56F891924BAD722F43E980B6AFE54B74' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, BassTimeline) == 0x000300, "Member 'ABP_AudioVisualizer_C::BassTimeline' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, Timeline_0_Amount_84FB19EE41A244783A5C418B4069C9D8) == 0x000308, "Member 'ABP_AudioVisualizer_C::Timeline_0_Amount_84FB19EE41A244783A5C418B4069C9D8' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, Timeline_0_Speed_84FB19EE41A244783A5C418B4069C9D8) == 0x00030C, "Member 'ABP_AudioVisualizer_C::Timeline_0_Speed_84FB19EE41A244783A5C418B4069C9D8' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, Timeline_0__Direction_84FB19EE41A244783A5C418B4069C9D8) == 0x000310, "Member 'ABP_AudioVisualizer_C::Timeline_0__Direction_84FB19EE41A244783A5C418B4069C9D8' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, Timeline_0) == 0x000318, "Member 'ABP_AudioVisualizer_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, NewVar_0) == 0x000320, "Member 'ABP_AudioVisualizer_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, Ak_Event) == 0x000328, "Member 'ABP_AudioVisualizer_C::Ak_Event' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, A01Time) == 0x000330, "Member 'ABP_AudioVisualizer_C::A01Time' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, A02Time) == 0x000334, "Member 'ABP_AudioVisualizer_C::A02Time' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, A03Time) == 0x000338, "Member 'ABP_AudioVisualizer_C::A03Time' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, A04Time) == 0x00033C, "Member 'ABP_AudioVisualizer_C::A04Time' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, A01Speed) == 0x000340, "Member 'ABP_AudioVisualizer_C::A01Speed' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, A02Speed) == 0x000344, "Member 'ABP_AudioVisualizer_C::A02Speed' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, A03Speed) == 0x000348, "Member 'ABP_AudioVisualizer_C::A03Speed' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, A04Speed) == 0x00034C, "Member 'ABP_AudioVisualizer_C::A04Speed' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, UsingMax_) == 0x000350, "Member 'ABP_AudioVisualizer_C::UsingMax_' has a wrong offset!");
static_assert(offsetof(ABP_AudioVisualizer_C, PlayID) == 0x000354, "Member 'ABP_AudioVisualizer_C::PlayID' has a wrong offset!");

}

