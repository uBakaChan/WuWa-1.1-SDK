#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Base_Sword

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "KuroAnim_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Base_Sword.ABP_Base_Sword_C
// 0x04E0 (0x0860 - 0x0380)
class UABP_Base_Sword_C final : public UAnimInstance
{
public:
	uint8                                         Pad_378[0x8];                                      // 0x0378(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0380(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0388(0x0038)()
	struct FAnimNode_PhyCloth                     AnimGraphNode_PhyCloth;                            // 0x03C0(0x0440)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0800(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0820(0x0020)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x0840(0x0018)()

public:
	void ExecuteUbergraph_ABP_Base_Sword(int32 EntryPoint);
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Base_Sword_C">();
	}
	static class UABP_Base_Sword_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Base_Sword_C>();
	}
};
static_assert(alignof(UABP_Base_Sword_C) == 0x000010, "Wrong alignment on UABP_Base_Sword_C");
static_assert(sizeof(UABP_Base_Sword_C) == 0x000860, "Wrong size on UABP_Base_Sword_C");
static_assert(offsetof(UABP_Base_Sword_C, UberGraphFrame) == 0x000380, "Member 'UABP_Base_Sword_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Base_Sword_C, AnimGraphNode_Root) == 0x000388, "Member 'UABP_Base_Sword_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Base_Sword_C, AnimGraphNode_PhyCloth) == 0x0003C0, "Member 'UABP_Base_Sword_C::AnimGraphNode_PhyCloth' has a wrong offset!");
static_assert(offsetof(UABP_Base_Sword_C, AnimGraphNode_ComponentToLocalSpace) == 0x000800, "Member 'UABP_Base_Sword_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Base_Sword_C, AnimGraphNode_LocalToComponentSpace) == 0x000820, "Member 'UABP_Base_Sword_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Base_Sword_C, AnimGraphNode_LocalRefPose) == 0x000840, "Member 'UABP_Base_Sword_C::AnimGraphNode_LocalRefPose' has a wrong offset!");

}

