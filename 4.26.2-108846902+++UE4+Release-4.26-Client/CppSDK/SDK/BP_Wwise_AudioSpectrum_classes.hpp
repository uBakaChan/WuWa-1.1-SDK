#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Wwise_AudioSpectrum

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Wwise_AudioSpectrum.BP_Wwise_AudioSpectrum_C
// 0x0050 (0x02F8 - 0x02A8)
class ABP_Wwise_AudioSpectrum_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UConstantQNRT*                          Synesthesia_Analysis;                              // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 Frequency_Band_Strengths;                          // 0x02C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 OutputArray;                                       // 0x02D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAkAudioEvent*                          AkResource;                                        // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          Ak_Event;                                          // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Wwise_AudioSpectrum(int32 EntryPoint);
	void AkCall(class UAkComponent* Param_Ak, class UAkAudioEvent* AkEvent);
	void ReceiveTick(float DeltaSeconds);
	void NotifyAnalyser(class UAkComponent* Param_Ak, class UAkAudioEvent* AkEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Wwise_AudioSpectrum_C">();
	}
	static class ABP_Wwise_AudioSpectrum_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Wwise_AudioSpectrum_C>();
	}
};
static_assert(alignof(ABP_Wwise_AudioSpectrum_C) == 0x000008, "Wrong alignment on ABP_Wwise_AudioSpectrum_C");
static_assert(sizeof(ABP_Wwise_AudioSpectrum_C) == 0x0002F8, "Wrong size on ABP_Wwise_AudioSpectrum_C");
static_assert(offsetof(ABP_Wwise_AudioSpectrum_C, UberGraphFrame) == 0x0002A8, "Member 'ABP_Wwise_AudioSpectrum_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Wwise_AudioSpectrum_C, Ak) == 0x0002B0, "Member 'ABP_Wwise_AudioSpectrum_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_Wwise_AudioSpectrum_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_Wwise_AudioSpectrum_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Wwise_AudioSpectrum_C, Synesthesia_Analysis) == 0x0002C0, "Member 'ABP_Wwise_AudioSpectrum_C::Synesthesia_Analysis' has a wrong offset!");
static_assert(offsetof(ABP_Wwise_AudioSpectrum_C, Frequency_Band_Strengths) == 0x0002C8, "Member 'ABP_Wwise_AudioSpectrum_C::Frequency_Band_Strengths' has a wrong offset!");
static_assert(offsetof(ABP_Wwise_AudioSpectrum_C, OutputArray) == 0x0002D8, "Member 'ABP_Wwise_AudioSpectrum_C::OutputArray' has a wrong offset!");
static_assert(offsetof(ABP_Wwise_AudioSpectrum_C, AkResource) == 0x0002E8, "Member 'ABP_Wwise_AudioSpectrum_C::AkResource' has a wrong offset!");
static_assert(offsetof(ABP_Wwise_AudioSpectrum_C, Ak_Event) == 0x0002F0, "Member 'ABP_Wwise_AudioSpectrum_C::Ak_Event' has a wrong offset!");

}

