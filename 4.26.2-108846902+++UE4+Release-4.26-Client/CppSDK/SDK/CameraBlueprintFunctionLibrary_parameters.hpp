#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CameraBlueprintFunctionLibrary

#include "Basic.hpp"

#include "ESequenceCameraAnsEffectiveClientType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SCameraModifier_Condition_structs.hpp"
#include "SSequenceCamera_Settings_structs.hpp"
#include "SBaseCurve_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "SCameraModifier_Settings_structs.hpp"
#include "ECameraAnsEffectiveClientType_structs.hpp"
#include "SCameraDebugTool_CameraModeInfo_structs.hpp"
#include "EAimAssistMode_structs.hpp"
#include "SCameraDebugTool_ControllerModification_structs.hpp"
#include "SCameraDebugTool_SubCameraModification_structs.hpp"
#include "ECustomCameraMode_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.OnPossess
// 0x0010 (0x0010 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_OnPossess final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_OnPossess) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_OnPossess");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_OnPossess) == 0x000010, "Wrong size on CameraBlueprintFunctionLibrary_C_OnPossess");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_OnPossess, Pawn) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_OnPossess::Pawn' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_OnPossess, __WorldContext) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_OnPossess::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.GetCameraMode
// 0x0010 (0x0010 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_GetCameraMode final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECustomCameraMode                             ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_GetCameraMode) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_GetCameraMode");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_GetCameraMode) == 0x000010, "Wrong size on CameraBlueprintFunctionLibrary_C_GetCameraMode");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_GetCameraMode, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_GetCameraMode::__WorldContext' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_GetCameraMode, ReturnValue) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_GetCameraMode::ReturnValue' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.SetCameraRotation
// 0x0018 (0x0018 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_SetCameraRotation final
{
public:
	struct FRotator                               Rotator;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_SetCameraRotation) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_SetCameraRotation");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_SetCameraRotation) == 0x000018, "Wrong size on CameraBlueprintFunctionLibrary_C_SetCameraRotation");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SetCameraRotation, Rotator) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_SetCameraRotation::Rotator' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SetCameraRotation, __WorldContext) == 0x000010, "Member 'CameraBlueprintFunctionLibrary_C_SetCameraRotation::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.GetTargetSocketLocation
// 0x0018 (0x0018 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_GetTargetSocketLocation final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_GetTargetSocketLocation) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_GetTargetSocketLocation");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_GetTargetSocketLocation) == 0x000018, "Wrong size on CameraBlueprintFunctionLibrary_C_GetTargetSocketLocation");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_GetTargetSocketLocation, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_GetTargetSocketLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_GetTargetSocketLocation, ReturnValue) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_GetTargetSocketLocation::ReturnValue' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.SetWidgetCameraBlendParams
// 0x0038 (0x0038 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams final
{
public:
	float                                         blendTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EViewTargetBlendFunction                      blendFunction;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         blendExp;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          blendLocation;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsRelativeLocation;                                // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OverrideLocation;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NewLocation;                                       // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          blendRotation;                                     // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsRelativeRotation;                                // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OverrideRotation;                                  // 0x001E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               NewRotation;                                       // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams) == 0x000038, "Wrong size on CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams, blendTime) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams::blendTime' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams, blendFunction) == 0x000004, "Member 'CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams::blendFunction' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams, blendExp) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams::blendExp' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams, blendLocation) == 0x00000C, "Member 'CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams::blendLocation' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams, IsRelativeLocation) == 0x00000D, "Member 'CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams::IsRelativeLocation' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams, OverrideLocation) == 0x00000E, "Member 'CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams::OverrideLocation' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams, NewLocation) == 0x000010, "Member 'CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams::NewLocation' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams, blendRotation) == 0x00001C, "Member 'CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams::blendRotation' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams, IsRelativeRotation) == 0x00001D, "Member 'CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams::IsRelativeRotation' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams, OverrideRotation) == 0x00001E, "Member 'CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams::OverrideRotation' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams, NewRotation) == 0x000020, "Member 'CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams::NewRotation' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams, __WorldContext) == 0x000030, "Member 'CameraBlueprintFunctionLibrary_C_SetWidgetCameraBlendParams::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.GetFightCameraLocation
// 0x0018 (0x0018 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_GetFightCameraLocation final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_GetFightCameraLocation) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_GetFightCameraLocation");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_GetFightCameraLocation) == 0x000018, "Wrong size on CameraBlueprintFunctionLibrary_C_GetFightCameraLocation");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_GetFightCameraLocation, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_GetFightCameraLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_GetFightCameraLocation, ReturnValue) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_GetFightCameraLocation::ReturnValue' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.SetFightCameraFollow
// 0x0010 (0x0010 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_SetFightCameraFollow final
{
public:
	bool                                          Follow;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_SetFightCameraFollow) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_SetFightCameraFollow");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_SetFightCameraFollow) == 0x000010, "Wrong size on CameraBlueprintFunctionLibrary_C_SetFightCameraFollow");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SetFightCameraFollow, Follow) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_SetFightCameraFollow::Follow' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SetFightCameraFollow, __WorldContext) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_SetFightCameraFollow::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.ResetFightCameraPitchAndArmLength
// 0x0008 (0x0008 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_ResetFightCameraPitchAndArmLength final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_ResetFightCameraPitchAndArmLength) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_ResetFightCameraPitchAndArmLength");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_ResetFightCameraPitchAndArmLength) == 0x000008, "Wrong size on CameraBlueprintFunctionLibrary_C_ResetFightCameraPitchAndArmLength");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ResetFightCameraPitchAndArmLength, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_ResetFightCameraPitchAndArmLength::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.EnterCameraExplore
// 0x0038 (0x0038 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_EnterCameraExplore final
{
public:
	int32                                         Id;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAt1;                                           // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAt2;                                           // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PrepTime;                                          // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeDistance;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ArmLengthMin;                                      // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ArmLengthMax;                                      // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_EnterCameraExplore) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_EnterCameraExplore");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_EnterCameraExplore) == 0x000038, "Wrong size on CameraBlueprintFunctionLibrary_C_EnterCameraExplore");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_EnterCameraExplore, Id) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_EnterCameraExplore::Id' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_EnterCameraExplore, LookAt1) == 0x000004, "Member 'CameraBlueprintFunctionLibrary_C_EnterCameraExplore::LookAt1' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_EnterCameraExplore, LookAt2) == 0x000010, "Member 'CameraBlueprintFunctionLibrary_C_EnterCameraExplore::LookAt2' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_EnterCameraExplore, PrepTime) == 0x00001C, "Member 'CameraBlueprintFunctionLibrary_C_EnterCameraExplore::PrepTime' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_EnterCameraExplore, FadeDistance) == 0x000020, "Member 'CameraBlueprintFunctionLibrary_C_EnterCameraExplore::FadeDistance' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_EnterCameraExplore, ArmLengthMin) == 0x000024, "Member 'CameraBlueprintFunctionLibrary_C_EnterCameraExplore::ArmLengthMin' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_EnterCameraExplore, ArmLengthMax) == 0x000028, "Member 'CameraBlueprintFunctionLibrary_C_EnterCameraExplore::ArmLengthMax' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_EnterCameraExplore, __WorldContext) == 0x000030, "Member 'CameraBlueprintFunctionLibrary_C_EnterCameraExplore::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.ExitCameraExplore
// 0x0010 (0x0010 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_ExitCameraExplore final
{
public:
	int32                                         Id;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_ExitCameraExplore) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_ExitCameraExplore");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_ExitCameraExplore) == 0x000010, "Wrong size on CameraBlueprintFunctionLibrary_C_ExitCameraExplore");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ExitCameraExplore, Id) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_ExitCameraExplore::Id' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ExitCameraExplore, __WorldContext) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_ExitCameraExplore::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.EnterSequenceDialogue
// 0x0010 (0x0010 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_EnterSequenceDialogue final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_EnterSequenceDialogue) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_EnterSequenceDialogue");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_EnterSequenceDialogue) == 0x000010, "Wrong size on CameraBlueprintFunctionLibrary_C_EnterSequenceDialogue");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_EnterSequenceDialogue, Target) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_EnterSequenceDialogue::Target' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_EnterSequenceDialogue, __WorldContext) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_EnterSequenceDialogue::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.ExitSequenceDialogue
// 0x0008 (0x0008 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_ExitSequenceDialogue final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_ExitSequenceDialogue) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_ExitSequenceDialogue");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_ExitSequenceDialogue) == 0x000008, "Wrong size on CameraBlueprintFunctionLibrary_C_ExitSequenceDialogue");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ExitSequenceDialogue, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_ExitSequenceDialogue::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.EnterCameraMode
// 0x0018 (0x0018 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_EnterCameraMode final
{
public:
	ECustomCameraMode                             CameraMode;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         blendTime;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewTargetBlendFunction                      blendFunction;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         blendExp;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_EnterCameraMode) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_EnterCameraMode");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_EnterCameraMode) == 0x000018, "Wrong size on CameraBlueprintFunctionLibrary_C_EnterCameraMode");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_EnterCameraMode, CameraMode) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_EnterCameraMode::CameraMode' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_EnterCameraMode, blendTime) == 0x000004, "Member 'CameraBlueprintFunctionLibrary_C_EnterCameraMode::blendTime' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_EnterCameraMode, blendFunction) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_EnterCameraMode::blendFunction' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_EnterCameraMode, blendExp) == 0x00000C, "Member 'CameraBlueprintFunctionLibrary_C_EnterCameraMode::blendExp' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_EnterCameraMode, __WorldContext) == 0x000010, "Member 'CameraBlueprintFunctionLibrary_C_EnterCameraMode::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.ExitCameraMode
// 0x0018 (0x0018 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_ExitCameraMode final
{
public:
	ECustomCameraMode                             CameraMode;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         blendTime;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewTargetBlendFunction                      blendFunction;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         blendExp;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_ExitCameraMode) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_ExitCameraMode");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_ExitCameraMode) == 0x000018, "Wrong size on CameraBlueprintFunctionLibrary_C_ExitCameraMode");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ExitCameraMode, CameraMode) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_ExitCameraMode::CameraMode' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ExitCameraMode, blendTime) == 0x000004, "Member 'CameraBlueprintFunctionLibrary_C_ExitCameraMode::blendTime' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ExitCameraMode, blendFunction) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_ExitCameraMode::blendFunction' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ExitCameraMode, blendExp) == 0x00000C, "Member 'CameraBlueprintFunctionLibrary_C_ExitCameraMode::blendExp' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ExitCameraMode, __WorldContext) == 0x000010, "Member 'CameraBlueprintFunctionLibrary_C_ExitCameraMode::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.ReloadCameraConfig
// 0x0008 (0x0008 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_ReloadCameraConfig final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_ReloadCameraConfig) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_ReloadCameraConfig");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_ReloadCameraConfig) == 0x000008, "Wrong size on CameraBlueprintFunctionLibrary_C_ReloadCameraConfig");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ReloadCameraConfig, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_ReloadCameraConfig::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.GetFightCameraActor
// 0x0010 (0x0010 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_GetFightCameraActor final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACameraActor*                           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_GetFightCameraActor) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_GetFightCameraActor");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_GetFightCameraActor) == 0x000010, "Wrong size on CameraBlueprintFunctionLibrary_C_GetFightCameraActor");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_GetFightCameraActor, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_GetFightCameraActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_GetFightCameraActor, ReturnValue) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_GetFightCameraActor::ReturnValue' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.PlayCameraOrbital
// 0x0030 (0x0030 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_PlayCameraOrbital final
{
public:
	class ULevelSequence*                         LevelSequence;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartLocation1;                                    // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndLocation1;                                      // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         blendInTime1;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         blendOutTime1;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_PlayCameraOrbital) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_PlayCameraOrbital");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_PlayCameraOrbital) == 0x000030, "Wrong size on CameraBlueprintFunctionLibrary_C_PlayCameraOrbital");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_PlayCameraOrbital, LevelSequence) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_PlayCameraOrbital::LevelSequence' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_PlayCameraOrbital, StartLocation1) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_PlayCameraOrbital::StartLocation1' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_PlayCameraOrbital, EndLocation1) == 0x000014, "Member 'CameraBlueprintFunctionLibrary_C_PlayCameraOrbital::EndLocation1' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_PlayCameraOrbital, blendInTime1) == 0x000020, "Member 'CameraBlueprintFunctionLibrary_C_PlayCameraOrbital::blendInTime1' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_PlayCameraOrbital, blendOutTime1) == 0x000024, "Member 'CameraBlueprintFunctionLibrary_C_PlayCameraOrbital::blendOutTime1' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_PlayCameraOrbital, __WorldContext) == 0x000028, "Member 'CameraBlueprintFunctionLibrary_C_PlayCameraOrbital::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.StopCameraOrbital
// 0x0008 (0x0008 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_StopCameraOrbital final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_StopCameraOrbital) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_StopCameraOrbital");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_StopCameraOrbital) == 0x000008, "Wrong size on CameraBlueprintFunctionLibrary_C_StopCameraOrbital");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_StopCameraOrbital, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_StopCameraOrbital::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.IsRoleOnCameraRight
// 0x0010 (0x0010 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_IsRoleOnCameraRight final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_IsRoleOnCameraRight) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_IsRoleOnCameraRight");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_IsRoleOnCameraRight) == 0x000010, "Wrong size on CameraBlueprintFunctionLibrary_C_IsRoleOnCameraRight");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_IsRoleOnCameraRight, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_IsRoleOnCameraRight::__WorldContext' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_IsRoleOnCameraRight, ReturnValue) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_IsRoleOnCameraRight::ReturnValue' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.SetCameraDebugToolEnabled
// 0x0010 (0x0010 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_SetCameraDebugToolEnabled final
{
public:
	bool                                          InEnable;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_SetCameraDebugToolEnabled) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_SetCameraDebugToolEnabled");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_SetCameraDebugToolEnabled) == 0x000010, "Wrong size on CameraBlueprintFunctionLibrary_C_SetCameraDebugToolEnabled");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SetCameraDebugToolEnabled, InEnable) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_SetCameraDebugToolEnabled::InEnable' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SetCameraDebugToolEnabled, __WorldContext) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_SetCameraDebugToolEnabled::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.SwitchCameraDebugToolDrawSpringArm
// 0x0008 (0x0008 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawSpringArm final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawSpringArm) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawSpringArm");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawSpringArm) == 0x000008, "Wrong size on CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawSpringArm");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawSpringArm, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawSpringArm::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.SwitchCameraDebugToolDrawFocusTargetLine
// 0x0008 (0x0008 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawFocusTargetLine final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawFocusTargetLine) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawFocusTargetLine");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawFocusTargetLine) == 0x000008, "Wrong size on CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawFocusTargetLine");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawFocusTargetLine, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawFocusTargetLine::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.SwitchCameraDebugToolDrawSpringArmEdgeRange
// 0x0008 (0x0008 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawSpringArmEdgeRange final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawSpringArmEdgeRange) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawSpringArmEdgeRange");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawSpringArmEdgeRange) == 0x000008, "Wrong size on CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawSpringArmEdgeRange");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawSpringArmEdgeRange, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawSpringArmEdgeRange::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.GetSubCameraModifications
// 0x0018 (0x0018 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_GetSubCameraModifications final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSCameraDebugTool_SubCameraModification> ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_GetSubCameraModifications) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_GetSubCameraModifications");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_GetSubCameraModifications) == 0x000018, "Wrong size on CameraBlueprintFunctionLibrary_C_GetSubCameraModifications");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_GetSubCameraModifications, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_GetSubCameraModifications::__WorldContext' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_GetSubCameraModifications, ReturnValue) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_GetSubCameraModifications::ReturnValue' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.GetControllerModifications
// 0x0018 (0x0018 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_GetControllerModifications final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSCameraDebugTool_ControllerModification> ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_GetControllerModifications) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_GetControllerModifications");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_GetControllerModifications) == 0x000018, "Wrong size on CameraBlueprintFunctionLibrary_C_GetControllerModifications");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_GetControllerModifications, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_GetControllerModifications::__WorldContext' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_GetControllerModifications, ReturnValue) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_GetControllerModifications::ReturnValue' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.SetAimAssistMode
// 0x0010 (0x0010 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_SetAimAssistMode final
{
public:
	EAimAssistMode                                Mode;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_SetAimAssistMode) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_SetAimAssistMode");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_SetAimAssistMode) == 0x000010, "Wrong size on CameraBlueprintFunctionLibrary_C_SetAimAssistMode");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SetAimAssistMode, Mode) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_SetAimAssistMode::Mode' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SetAimAssistMode, __WorldContext) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_SetAimAssistMode::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.GetIsCameraTargetInScreen
// 0x0010 (0x0010 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_GetIsCameraTargetInScreen final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_GetIsCameraTargetInScreen) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_GetIsCameraTargetInScreen");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_GetIsCameraTargetInScreen) == 0x000010, "Wrong size on CameraBlueprintFunctionLibrary_C_GetIsCameraTargetInScreen");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_GetIsCameraTargetInScreen, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_GetIsCameraTargetInScreen::__WorldContext' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_GetIsCameraTargetInScreen, ReturnValue) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_GetIsCameraTargetInScreen::ReturnValue' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.ExitSpecialGameplayCamera
// 0x0008 (0x0008 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_ExitSpecialGameplayCamera final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_ExitSpecialGameplayCamera) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_ExitSpecialGameplayCamera");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_ExitSpecialGameplayCamera) == 0x000008, "Wrong size on CameraBlueprintFunctionLibrary_C_ExitSpecialGameplayCamera");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ExitSpecialGameplayCamera, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_ExitSpecialGameplayCamera::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.SwitchCameraDebugToolDrawCameraCollision
// 0x0008 (0x0008 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawCameraCollision final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawCameraCollision) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawCameraCollision");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawCameraCollision) == 0x000008, "Wrong size on CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawCameraCollision");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawCameraCollision, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawCameraCollision::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.GetDebugDesiredCameraProps
// 0x0058 (0x0058 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_GetDebugDesiredCameraProps final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            ReturnValue;                                       // 0x0008(0x0050)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_GetDebugDesiredCameraProps) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_GetDebugDesiredCameraProps");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_GetDebugDesiredCameraProps) == 0x000058, "Wrong size on CameraBlueprintFunctionLibrary_C_GetDebugDesiredCameraProps");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_GetDebugDesiredCameraProps, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_GetDebugDesiredCameraProps::__WorldContext' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_GetDebugDesiredCameraProps, ReturnValue) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_GetDebugDesiredCameraProps::ReturnValue' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.GetCamereModeInfo
// 0x0020 (0x0020 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_GetCamereModeInfo final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSCameraDebugTool_CameraModeInfo       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_GetCamereModeInfo) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_GetCamereModeInfo");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_GetCamereModeInfo) == 0x000020, "Wrong size on CameraBlueprintFunctionLibrary_C_GetCamereModeInfo");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_GetCamereModeInfo, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_GetCamereModeInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_GetCamereModeInfo, ReturnValue) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_GetCamereModeInfo::ReturnValue' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.SwitchCameraDebugToolDrawLockCameraMoveLine
// 0x0008 (0x0008 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawLockCameraMoveLine final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawLockCameraMoveLine) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawLockCameraMoveLine");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawLockCameraMoveLine) == 0x000008, "Wrong size on CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawLockCameraMoveLine");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawLockCameraMoveLine, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawLockCameraMoveLine::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.ApplyCameraModify
// 0x0158 (0x0158 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_ApplyCameraModify final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         blendInTime;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         blendOutTime;                                      // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         breakBlendOutTime;                                 // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCameraModifier_Settings              CameraModifySettings;                              // 0x0020(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UAnimMontage*                           Montage;                                           // 0x0110(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSBaseCurve                            blendInCurve;                                      // 0x0118(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSBaseCurve                            blendOutCurve;                                     // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CameraAttachSocket;                                // 0x0128(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         EntityId;                                          // 0x0138(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECameraAnsEffectiveClientType                 CameraEffectiveClientType;                         // 0x013C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSCameraModifier_Condition>     CameraModifierContions;                            // 0x0140(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0150(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_ApplyCameraModify) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_ApplyCameraModify");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_ApplyCameraModify) == 0x000158, "Wrong size on CameraBlueprintFunctionLibrary_C_ApplyCameraModify");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ApplyCameraModify, Tag) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_ApplyCameraModify::Tag' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ApplyCameraModify, Duration) == 0x00000C, "Member 'CameraBlueprintFunctionLibrary_C_ApplyCameraModify::Duration' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ApplyCameraModify, blendInTime) == 0x000010, "Member 'CameraBlueprintFunctionLibrary_C_ApplyCameraModify::blendInTime' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ApplyCameraModify, blendOutTime) == 0x000014, "Member 'CameraBlueprintFunctionLibrary_C_ApplyCameraModify::blendOutTime' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ApplyCameraModify, breakBlendOutTime) == 0x000018, "Member 'CameraBlueprintFunctionLibrary_C_ApplyCameraModify::breakBlendOutTime' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ApplyCameraModify, CameraModifySettings) == 0x000020, "Member 'CameraBlueprintFunctionLibrary_C_ApplyCameraModify::CameraModifySettings' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ApplyCameraModify, Montage) == 0x000110, "Member 'CameraBlueprintFunctionLibrary_C_ApplyCameraModify::Montage' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ApplyCameraModify, blendInCurve) == 0x000118, "Member 'CameraBlueprintFunctionLibrary_C_ApplyCameraModify::blendInCurve' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ApplyCameraModify, blendOutCurve) == 0x000120, "Member 'CameraBlueprintFunctionLibrary_C_ApplyCameraModify::blendOutCurve' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ApplyCameraModify, CameraAttachSocket) == 0x000128, "Member 'CameraBlueprintFunctionLibrary_C_ApplyCameraModify::CameraAttachSocket' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ApplyCameraModify, EntityId) == 0x000138, "Member 'CameraBlueprintFunctionLibrary_C_ApplyCameraModify::EntityId' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ApplyCameraModify, CameraEffectiveClientType) == 0x00013C, "Member 'CameraBlueprintFunctionLibrary_C_ApplyCameraModify::CameraEffectiveClientType' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ApplyCameraModify, CameraModifierContions) == 0x000140, "Member 'CameraBlueprintFunctionLibrary_C_ApplyCameraModify::CameraModifierContions' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ApplyCameraModify, __WorldContext) == 0x000150, "Member 'CameraBlueprintFunctionLibrary_C_ApplyCameraModify::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.GetSequenceCameraActor
// 0x0010 (0x0010 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_GetSequenceCameraActor final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_GetSequenceCameraActor) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_GetSequenceCameraActor");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_GetSequenceCameraActor) == 0x000010, "Wrong size on CameraBlueprintFunctionLibrary_C_GetSequenceCameraActor");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_GetSequenceCameraActor, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_GetSequenceCameraActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_GetSequenceCameraActor, ReturnValue) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_GetSequenceCameraActor::ReturnValue' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.GetWidgetCameraActor
// 0x0010 (0x0010 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_GetWidgetCameraActor final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACameraActor*                           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_GetWidgetCameraActor) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_GetWidgetCameraActor");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_GetWidgetCameraActor) == 0x000010, "Wrong size on CameraBlueprintFunctionLibrary_C_GetWidgetCameraActor");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_GetWidgetCameraActor, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_GetWidgetCameraActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_GetWidgetCameraActor, ReturnValue) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_GetWidgetCameraActor::ReturnValue' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.EnterSpecialGameplayCamera
// 0x0018 (0x0018 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_EnterSpecialGameplayCamera final
{
public:
	int32                                         GameplayId;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACameraActor*                           ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_EnterSpecialGameplayCamera) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_EnterSpecialGameplayCamera");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_EnterSpecialGameplayCamera) == 0x000018, "Wrong size on CameraBlueprintFunctionLibrary_C_EnterSpecialGameplayCamera");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_EnterSpecialGameplayCamera, GameplayId) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_EnterSpecialGameplayCamera::GameplayId' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_EnterSpecialGameplayCamera, __WorldContext) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_EnterSpecialGameplayCamera::__WorldContext' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_EnterSpecialGameplayCamera, ReturnValue) == 0x000010, "Member 'CameraBlueprintFunctionLibrary_C_EnterSpecialGameplayCamera::ReturnValue' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.ExitSpecialGameplayCamera2
// 0x0008 (0x0008 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_ExitSpecialGameplayCamera2 final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_ExitSpecialGameplayCamera2) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_ExitSpecialGameplayCamera2");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_ExitSpecialGameplayCamera2) == 0x000008, "Wrong size on CameraBlueprintFunctionLibrary_C_ExitSpecialGameplayCamera2");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_ExitSpecialGameplayCamera2, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_ExitSpecialGameplayCamera2::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.PlaySettlementCamera
// 0x0008 (0x0008 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_PlaySettlementCamera final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_PlaySettlementCamera) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_PlaySettlementCamera");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_PlaySettlementCamera) == 0x000008, "Wrong size on CameraBlueprintFunctionLibrary_C_PlaySettlementCamera");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_PlaySettlementCamera, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_PlaySettlementCamera::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.SwitchCameraDebugToolDrawSettlementCamera
// 0x0008 (0x0008 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawSettlementCamera final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawSettlementCamera) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawSettlementCamera");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawSettlementCamera) == 0x000008, "Wrong size on CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawSettlementCamera");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawSettlementCamera, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_SwitchCameraDebugToolDrawSettlementCamera::__WorldContext' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.PlayCameraSequence
// 0x0098 (0x0098 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_PlayCameraSequence final
{
public:
	ESequenceCameraAnsEffectiveClientType         _H_7_;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EntityId;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSSequenceCamera_Settings              Settings;                                          // 0x0008(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          ResetLockOnCamera;                                 // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               AdditiveRotation;                                  // 0x0044(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CameraAttachSocket;                                // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CameraDetectSocket;                                // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                ExtraSphereLocation;                               // 0x0070(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExtraDetectSphereRadius;                           // 0x007C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShowExtraSphere;                                 // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsIgnoreCharacterCollision;                        // 0x0081(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DisableMovementInput;                              // 0x0082(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DisableLookAtInput;                                // 0x0083(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DisableMotionBlur;                                 // 0x0084(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_PlayCameraSequence) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_PlayCameraSequence");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_PlayCameraSequence) == 0x000098, "Wrong size on CameraBlueprintFunctionLibrary_C_PlayCameraSequence");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_PlayCameraSequence, _H_7_) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_PlayCameraSequence::_H_7_' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_PlayCameraSequence, EntityId) == 0x000004, "Member 'CameraBlueprintFunctionLibrary_C_PlayCameraSequence::EntityId' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_PlayCameraSequence, Settings) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_PlayCameraSequence::Settings' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_PlayCameraSequence, ResetLockOnCamera) == 0x000040, "Member 'CameraBlueprintFunctionLibrary_C_PlayCameraSequence::ResetLockOnCamera' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_PlayCameraSequence, AdditiveRotation) == 0x000044, "Member 'CameraBlueprintFunctionLibrary_C_PlayCameraSequence::AdditiveRotation' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_PlayCameraSequence, CameraAttachSocket) == 0x000050, "Member 'CameraBlueprintFunctionLibrary_C_PlayCameraSequence::CameraAttachSocket' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_PlayCameraSequence, CameraDetectSocket) == 0x000060, "Member 'CameraBlueprintFunctionLibrary_C_PlayCameraSequence::CameraDetectSocket' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_PlayCameraSequence, ExtraSphereLocation) == 0x000070, "Member 'CameraBlueprintFunctionLibrary_C_PlayCameraSequence::ExtraSphereLocation' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_PlayCameraSequence, ExtraDetectSphereRadius) == 0x00007C, "Member 'CameraBlueprintFunctionLibrary_C_PlayCameraSequence::ExtraDetectSphereRadius' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_PlayCameraSequence, IsShowExtraSphere) == 0x000080, "Member 'CameraBlueprintFunctionLibrary_C_PlayCameraSequence::IsShowExtraSphere' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_PlayCameraSequence, IsIgnoreCharacterCollision) == 0x000081, "Member 'CameraBlueprintFunctionLibrary_C_PlayCameraSequence::IsIgnoreCharacterCollision' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_PlayCameraSequence, DisableMovementInput) == 0x000082, "Member 'CameraBlueprintFunctionLibrary_C_PlayCameraSequence::DisableMovementInput' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_PlayCameraSequence, DisableLookAtInput) == 0x000083, "Member 'CameraBlueprintFunctionLibrary_C_PlayCameraSequence::DisableLookAtInput' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_PlayCameraSequence, DisableMotionBlur) == 0x000084, "Member 'CameraBlueprintFunctionLibrary_C_PlayCameraSequence::DisableMotionBlur' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_PlayCameraSequence, __WorldContext) == 0x000088, "Member 'CameraBlueprintFunctionLibrary_C_PlayCameraSequence::__WorldContext' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_PlayCameraSequence, ReturnValue) == 0x000090, "Member 'CameraBlueprintFunctionLibrary_C_PlayCameraSequence::ReturnValue' has a wrong offset!");

// Function CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C.IsTargetSocketLocationValid
// 0x0010 (0x0010 - 0x0000)
struct CameraBlueprintFunctionLibrary_C_IsTargetSocketLocationValid final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CameraBlueprintFunctionLibrary_C_IsTargetSocketLocationValid) == 0x000008, "Wrong alignment on CameraBlueprintFunctionLibrary_C_IsTargetSocketLocationValid");
static_assert(sizeof(CameraBlueprintFunctionLibrary_C_IsTargetSocketLocationValid) == 0x000010, "Wrong size on CameraBlueprintFunctionLibrary_C_IsTargetSocketLocationValid");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_IsTargetSocketLocationValid, __WorldContext) == 0x000000, "Member 'CameraBlueprintFunctionLibrary_C_IsTargetSocketLocationValid::__WorldContext' has a wrong offset!");
static_assert(offsetof(CameraBlueprintFunctionLibrary_C_IsTargetSocketLocationValid, ReturnValue) == 0x000008, "Member 'CameraBlueprintFunctionLibrary_C_IsTargetSocketLocationValid::ReturnValue' has a wrong offset!");

}

