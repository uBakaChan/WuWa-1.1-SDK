#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ImageWriteQueue

#include "Basic.hpp"


namespace SDK
{

// Enum ImageWriteQueue.EDesiredImageFormat
// NumValues: 0x0005
enum class EDesiredImageFormat : uint8
{
	PNG                                      = 0,
	JPG                                      = 1,
	BMP                                      = 2,
	EXR                                      = 3,
	EDesiredImageFormat_MAX                  = 4,
};

// ScriptStruct ImageWriteQueue.ImageWriteOptions
// 0x0080 (0x0080 - 0x0000)
struct alignas(0x10) FImageWriteOptions final
{
public:
	EDesiredImageFormat                           Format;                                            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bSuccess)>                OnComplete;                                        // 0x0008(0x0028)(BlueprintVisible, ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	int32                                         CompressionQuality;                                // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverwriteFile;                                    // 0x0034(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAsync;                                            // 0x0035(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36[0x4A];                                      // 0x0036(0x004A)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FImageWriteOptions) == 0x000010, "Wrong alignment on FImageWriteOptions");
static_assert(sizeof(FImageWriteOptions) == 0x000080, "Wrong size on FImageWriteOptions");
static_assert(offsetof(FImageWriteOptions, Format) == 0x000000, "Member 'FImageWriteOptions::Format' has a wrong offset!");
static_assert(offsetof(FImageWriteOptions, OnComplete) == 0x000008, "Member 'FImageWriteOptions::OnComplete' has a wrong offset!");
static_assert(offsetof(FImageWriteOptions, CompressionQuality) == 0x000030, "Member 'FImageWriteOptions::CompressionQuality' has a wrong offset!");
static_assert(offsetof(FImageWriteOptions, bOverwriteFile) == 0x000034, "Member 'FImageWriteOptions::bOverwriteFile' has a wrong offset!");
static_assert(offsetof(FImageWriteOptions, bAsync) == 0x000035, "Member 'FImageWriteOptions::bAsync' has a wrong offset!");

}

