#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KuroPerformance

#include "Basic.hpp"


namespace SDK
{

// Enum KuroPerformance.EKuroThermalStatus
// NumValues: 0x0006
enum class EKuroThermalStatus : uint8
{
	Ts_None                                  = 0,
	Ts_Light                                 = 1,
	Ts_Moderate                              = 2,
	Ts_Severe                                = 3,
	Ts_Critical                              = 4,
	Ts_MAX                                   = 5,
};

// ScriptStruct KuroPerformance.KuroBoostQueryResult
// 0x0014 (0x0014 - 0x0000)
struct FKuroBoostQueryResult final
{
public:
	int32                                         Mode;                                              // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Target;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Level;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EKuroThermalStatus                            ThermalStatus;                                     // 0x000C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ThermalTempBudget;                                 // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FKuroBoostQueryResult) == 0x000004, "Wrong alignment on FKuroBoostQueryResult");
static_assert(sizeof(FKuroBoostQueryResult) == 0x000014, "Wrong size on FKuroBoostQueryResult");
static_assert(offsetof(FKuroBoostQueryResult, Mode) == 0x000000, "Member 'FKuroBoostQueryResult::Mode' has a wrong offset!");
static_assert(offsetof(FKuroBoostQueryResult, Target) == 0x000004, "Member 'FKuroBoostQueryResult::Target' has a wrong offset!");
static_assert(offsetof(FKuroBoostQueryResult, Level) == 0x000008, "Member 'FKuroBoostQueryResult::Level' has a wrong offset!");
static_assert(offsetof(FKuroBoostQueryResult, ThermalStatus) == 0x00000C, "Member 'FKuroBoostQueryResult::ThermalStatus' has a wrong offset!");
static_assert(offsetof(FKuroBoostQueryResult, ThermalTempBudget) == 0x000010, "Member 'FKuroBoostQueryResult::ThermalTempBudget' has a wrong offset!");

// ScriptStruct KuroPerformance.KuroPerformanceReport
// 0x0014 (0x0014 - 0x0000)
struct FKuroPerformanceReport final
{
public:
	float                                         CPUFrameTime;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GPUFrameTime;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurTemperature;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EKuroThermalStatus                            ThermalStatus;                                     // 0x000C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ThermalTempBudget;                                 // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FKuroPerformanceReport) == 0x000004, "Wrong alignment on FKuroPerformanceReport");
static_assert(sizeof(FKuroPerformanceReport) == 0x000014, "Wrong size on FKuroPerformanceReport");
static_assert(offsetof(FKuroPerformanceReport, CPUFrameTime) == 0x000000, "Member 'FKuroPerformanceReport::CPUFrameTime' has a wrong offset!");
static_assert(offsetof(FKuroPerformanceReport, GPUFrameTime) == 0x000004, "Member 'FKuroPerformanceReport::GPUFrameTime' has a wrong offset!");
static_assert(offsetof(FKuroPerformanceReport, CurTemperature) == 0x000008, "Member 'FKuroPerformanceReport::CurTemperature' has a wrong offset!");
static_assert(offsetof(FKuroPerformanceReport, ThermalStatus) == 0x00000C, "Member 'FKuroPerformanceReport::ThermalStatus' has a wrong offset!");
static_assert(offsetof(FKuroPerformanceReport, ThermalTempBudget) == 0x000010, "Member 'FKuroPerformanceReport::ThermalTempBudget' has a wrong offset!");

}

