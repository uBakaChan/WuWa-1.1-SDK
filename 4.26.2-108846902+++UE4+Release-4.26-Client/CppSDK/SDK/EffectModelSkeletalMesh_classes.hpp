#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EffectModelSkeletalMesh

#include "Basic.hpp"

#include "KuroCurve_structs.hpp"
#include "KuroGameplay_classes.hpp"


namespace SDK
{

// TypeScriptGeneratedClass EffectModelSkeletalMesh.EffectModelSkeletalMesh_C
// 0x0520 (0x0578 - 0x0058)
class UEffectModelSkeletalMesh_C final : public UEffectModelBase
{
public:
	bool                                          Looping;                                           // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Playing;                                           // 0x0059(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKuroCurveVector                       Location;                                          // 0x0060(0x01A8)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FKuroCurveVector                       Rotation;                                          // 0x0208(0x01A8)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FKuroCurveVector                       Scale;                                             // 0x03B0(0x01A8)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          EnableCollision;                                   // 0x0558(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          SkeletalMeshRef;                                   // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimationAsset*                        AnimationRef;                                      // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HideFrames;                                        // 0x0570(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CastShadow;                                        // 0x0574(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EffectModelSkeletalMesh_C">();
	}
	static class UEffectModelSkeletalMesh_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEffectModelSkeletalMesh_C>();
	}
};
static_assert(alignof(UEffectModelSkeletalMesh_C) == 0x000008, "Wrong alignment on UEffectModelSkeletalMesh_C");
static_assert(sizeof(UEffectModelSkeletalMesh_C) == 0x000578, "Wrong size on UEffectModelSkeletalMesh_C");
static_assert(offsetof(UEffectModelSkeletalMesh_C, Looping) == 0x000058, "Member 'UEffectModelSkeletalMesh_C::Looping' has a wrong offset!");
static_assert(offsetof(UEffectModelSkeletalMesh_C, Playing) == 0x000059, "Member 'UEffectModelSkeletalMesh_C::Playing' has a wrong offset!");
static_assert(offsetof(UEffectModelSkeletalMesh_C, Location) == 0x000060, "Member 'UEffectModelSkeletalMesh_C::Location' has a wrong offset!");
static_assert(offsetof(UEffectModelSkeletalMesh_C, Rotation) == 0x000208, "Member 'UEffectModelSkeletalMesh_C::Rotation' has a wrong offset!");
static_assert(offsetof(UEffectModelSkeletalMesh_C, Scale) == 0x0003B0, "Member 'UEffectModelSkeletalMesh_C::Scale' has a wrong offset!");
static_assert(offsetof(UEffectModelSkeletalMesh_C, EnableCollision) == 0x000558, "Member 'UEffectModelSkeletalMesh_C::EnableCollision' has a wrong offset!");
static_assert(offsetof(UEffectModelSkeletalMesh_C, SkeletalMeshRef) == 0x000560, "Member 'UEffectModelSkeletalMesh_C::SkeletalMeshRef' has a wrong offset!");
static_assert(offsetof(UEffectModelSkeletalMesh_C, AnimationRef) == 0x000568, "Member 'UEffectModelSkeletalMesh_C::AnimationRef' has a wrong offset!");
static_assert(offsetof(UEffectModelSkeletalMesh_C, HideFrames) == 0x000570, "Member 'UEffectModelSkeletalMesh_C::HideFrames' has a wrong offset!");
static_assert(offsetof(UEffectModelSkeletalMesh_C, CastShadow) == 0x000574, "Member 'UEffectModelSkeletalMesh_C::CastShadow' has a wrong offset!");

}

