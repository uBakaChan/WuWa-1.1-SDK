#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Device_Common

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "EWeaponViewName_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Device_Common.ABP_Device_Common_C
// 0x1750 (0x1AD0 - 0x0380)
class UABP_Device_Common_C final : public UAnimInstance
{
public:
	uint8                                         Pad_378[0x8];                                      // 0x0378(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0380(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0388(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x03C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x03E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x0410(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x0438(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x0460(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x0488(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x04B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x04D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x0500(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x0528(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x0550(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x0578(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x05A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x05C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x05F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x0618(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x0640(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x0668(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x0690(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x06B8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x0748(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x0780(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x0810(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x0848(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x08D8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x0910(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x09A0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x09D8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x0A68(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0AA0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x0B30(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0B68(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x0BF8(0x0038)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x0C30(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0C68(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x0CF8(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x0D30(0x0148)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x0E78(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x0EB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x0ED8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x0F00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x0F28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0F50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0F78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0FA0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0FC8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0FF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x1018(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x1040(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x1068(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x1090(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x10B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x10E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x1108(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x1130(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x1158(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x11E8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x1220(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x12B0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x12E8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x1378(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x13B0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x1440(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1478(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x1508(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1540(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x15D0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1608(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1698(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x16D0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1760(0x0038)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1798(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x17D0(0x0148)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1918(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1950(0x0148)()
	class ATsBaseCharacter_C*                     _r__;                                              // 0x1A98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Weapon_Fire;                                       // 0x1AA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AA1[0x3];                                     // 0x1AA1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendSpacePriority;                                // 0x1AA4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ____;                                              // 0x1AA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsUI;                                              // 0x1AA9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AAA[0x2];                                     // 0x1AAA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Open_delay;                                        // 0x1AAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta_Time;                                        // 0x1AB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __s_fh;                                            // 0x1AB4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AB5[0x3];                                     // 0x1AB5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Fh_____4I_;                                        // 0x1AB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SMfh_4I_;                                          // 0x1ABC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsUiSceneRoleActor_C*                  UILb__;                                            // 0x1AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EWeaponViewName                               UILb;                                              // 0x1AC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _c_____yH;                                         // 0x1AC9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ABP_Device_Common(int32 EntryPoint);
	void CustomEvent();
	void Set_Open_Delay();
	void Clear_Open_Delay();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_E7FA0AEA4F4D9515AB5BF5AC37FD3ECF();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void BlueprintInitializeAnimation();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_F3B7B59B414C0E84144368B72062FB09();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_39E6A5094AB60E03BE2089B0D0887B00();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_02EBA3A24EC79133BF3F66847E091ABF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_AF95079347D05829D2D25CAA047A1BA4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_650FE42B4AF795C762BB629A58D6D6F3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_179FC3464D4423EC0D9F40BD5EB39C4A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_221B77704AC52D156BA19CA86207F990();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_0384BD3F4874F7BD9189C78138933669();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_4C21884D46658354CD8FA491AB22C799();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_D4A72CC8490E8FBF64E54F955CA235E6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_9B68E29F49854555551F8F9B640BC309();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_293259C743DE0A8F263870B4C29BAA3A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_ECC111D047D595675620C381CD364F46();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_8A2185A841A6505A705C1495FA24D054();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_56A4CFBB4212CCC969B0F1A9C778E0B5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_4B9697574747B66C9A2ADCBE0587698F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_DA0A1C8845A28BA88991BCAAA1324C83();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_D89A6FCA4FF2DAAA1CB2069005BF68E4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_5ECEA32A4BDD5F2AF07D60BCD9E35B43();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_1294B2C4411BA21C085A62B6B010F013();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_90D0EFAA41EA7FEDDC95AE936D982F81();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_F5DA0AB14BAE650CC9429A95FE081CF9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_721E50794DDB9A79D4100EAB7E35F299();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_75C781B3411C24D24B7D5FAF66DFA385();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_496F3339419C67DBA9B833A822499DED();
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Device_Common_C">();
	}
	static class UABP_Device_Common_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Device_Common_C>();
	}
};
static_assert(alignof(UABP_Device_Common_C) == 0x000010, "Wrong alignment on UABP_Device_Common_C");
static_assert(sizeof(UABP_Device_Common_C) == 0x001AD0, "Wrong size on UABP_Device_Common_C");
static_assert(offsetof(UABP_Device_Common_C, UberGraphFrame) == 0x000380, "Member 'UABP_Device_Common_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_Root) == 0x000388, "Member 'UABP_Device_Common_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_35) == 0x0003C0, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_34) == 0x0003E8, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_33) == 0x000410, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_32) == 0x000438, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_31) == 0x000460, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_30) == 0x000488, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_29) == 0x0004B0, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_28) == 0x0004D8, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_27) == 0x000500, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_26) == 0x000528, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_25) == 0x000550, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_24) == 0x000578, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_23) == 0x0005A0, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_22) == 0x0005C8, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_21) == 0x0005F0, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_20) == 0x000618, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_19) == 0x000640, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_18) == 0x000668, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_17) == 0x000690, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_SequencePlayer_15) == 0x0006B8, "Member 'UABP_Device_Common_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_StateResult_19) == 0x000748, "Member 'UABP_Device_Common_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_SequencePlayer_14) == 0x000780, "Member 'UABP_Device_Common_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_StateResult_18) == 0x000810, "Member 'UABP_Device_Common_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_SequencePlayer_13) == 0x000848, "Member 'UABP_Device_Common_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_StateResult_17) == 0x0008D8, "Member 'UABP_Device_Common_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_SequencePlayer_12) == 0x000910, "Member 'UABP_Device_Common_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_StateResult_16) == 0x0009A0, "Member 'UABP_Device_Common_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_SequencePlayer_11) == 0x0009D8, "Member 'UABP_Device_Common_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_StateResult_15) == 0x000A68, "Member 'UABP_Device_Common_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_SequencePlayer_10) == 0x000AA0, "Member 'UABP_Device_Common_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_StateResult_14) == 0x000B30, "Member 'UABP_Device_Common_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_SequencePlayer_9) == 0x000B68, "Member 'UABP_Device_Common_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_StateResult_13) == 0x000BF8, "Member 'UABP_Device_Common_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_StateResult_12) == 0x000C30, "Member 'UABP_Device_Common_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_SequencePlayer_8) == 0x000C68, "Member 'UABP_Device_Common_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_StateResult_11) == 0x000CF8, "Member 'UABP_Device_Common_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_StateMachine_2) == 0x000D30, "Member 'UABP_Device_Common_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_StateResult_10) == 0x000E78, "Member 'UABP_Device_Common_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_16) == 0x000EB0, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_15) == 0x000ED8, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_14) == 0x000F00, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_13) == 0x000F28, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_12) == 0x000F50, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_11) == 0x000F78, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_10) == 0x000FA0, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_9) == 0x000FC8, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_8) == 0x000FF0, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_7) == 0x001018, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_6) == 0x001040, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_5) == 0x001068, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_4) == 0x001090, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_3) == 0x0010B8, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_2) == 0x0010E0, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult_1) == 0x001108, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_TransitionResult) == 0x001130, "Member 'UABP_Device_Common_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_SequencePlayer_7) == 0x001158, "Member 'UABP_Device_Common_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_StateResult_9) == 0x0011E8, "Member 'UABP_Device_Common_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_SequencePlayer_6) == 0x001220, "Member 'UABP_Device_Common_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_StateResult_8) == 0x0012B0, "Member 'UABP_Device_Common_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_SequencePlayer_5) == 0x0012E8, "Member 'UABP_Device_Common_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_StateResult_7) == 0x001378, "Member 'UABP_Device_Common_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_SequencePlayer_4) == 0x0013B0, "Member 'UABP_Device_Common_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_StateResult_6) == 0x001440, "Member 'UABP_Device_Common_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_SequencePlayer_3) == 0x001478, "Member 'UABP_Device_Common_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_StateResult_5) == 0x001508, "Member 'UABP_Device_Common_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_SequencePlayer_2) == 0x001540, "Member 'UABP_Device_Common_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_StateResult_4) == 0x0015D0, "Member 'UABP_Device_Common_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_SequencePlayer_1) == 0x001608, "Member 'UABP_Device_Common_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_StateResult_3) == 0x001698, "Member 'UABP_Device_Common_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_SequencePlayer) == 0x0016D0, "Member 'UABP_Device_Common_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_StateResult_2) == 0x001760, "Member 'UABP_Device_Common_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_StateResult_1) == 0x001798, "Member 'UABP_Device_Common_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_StateMachine_1) == 0x0017D0, "Member 'UABP_Device_Common_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_StateResult) == 0x001918, "Member 'UABP_Device_Common_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, AnimGraphNode_StateMachine) == 0x001950, "Member 'UABP_Device_Common_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, _r__) == 0x001A98, "Member 'UABP_Device_Common_C::_r__' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, Weapon_Fire) == 0x001AA0, "Member 'UABP_Device_Common_C::Weapon_Fire' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, BlendSpacePriority) == 0x001AA4, "Member 'UABP_Device_Common_C::BlendSpacePriority' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, ____) == 0x001AA8, "Member 'UABP_Device_Common_C::____' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, IsUI) == 0x001AA9, "Member 'UABP_Device_Common_C::IsUI' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, Open_delay) == 0x001AAC, "Member 'UABP_Device_Common_C::Open_delay' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, Delta_Time) == 0x001AB0, "Member 'UABP_Device_Common_C::Delta_Time' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, __s_fh) == 0x001AB4, "Member 'UABP_Device_Common_C::__s_fh' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, Fh_____4I_) == 0x001AB8, "Member 'UABP_Device_Common_C::Fh_____4I_' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, SMfh_4I_) == 0x001ABC, "Member 'UABP_Device_Common_C::SMfh_4I_' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, UILb__) == 0x001AC0, "Member 'UABP_Device_Common_C::UILb__' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, UILb) == 0x001AC8, "Member 'UABP_Device_Common_C::UILb' has a wrong offset!");
static_assert(offsetof(UABP_Device_Common_C, _c_____yH) == 0x001AC9, "Member 'UABP_Device_Common_C::_c_____yH' has a wrong offset!");

}

