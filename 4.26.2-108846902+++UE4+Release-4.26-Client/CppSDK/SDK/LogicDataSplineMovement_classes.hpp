#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LogicDataSplineMovement

#include "Basic.hpp"

#include "LogicDataBase_classes.hpp"


namespace SDK
{

// TypeScriptGeneratedClass LogicDataSplineMovement.LogicDataSplineMovement_C
// 0x0090 (0x00D0 - 0x0040)
class ULogicDataSplineMovement_C final : public ULogicDataBase_C
{
public:
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Duration;                                          // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UEffectModelBase>        EffectOnReach;                                     // 0x0040(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash)
	float                                         Height;                                            // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDestroyReach;                                    // 0x0074(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsForwardTangent;                                  // 0x0075(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsSummonOnReach;                                   // 0x0076(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77[0x1];                                       // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Length;                                            // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxSpeed;                                          // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinSpeed;                                          // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rotate;                                            // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SelfHeight;                                        // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SelfLength;                                        // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SelfRotate;                                        // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   SplineTrace;                                       // 0x0098(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          UseTargetLocation;                                 // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LogicDataSplineMovement_C">();
	}
	static class ULogicDataSplineMovement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULogicDataSplineMovement_C>();
	}
};
static_assert(alignof(ULogicDataSplineMovement_C) == 0x000008, "Wrong alignment on ULogicDataSplineMovement_C");
static_assert(sizeof(ULogicDataSplineMovement_C) == 0x0000D0, "Wrong size on ULogicDataSplineMovement_C");
static_assert(offsetof(ULogicDataSplineMovement_C, Duration) == 0x00003C, "Member 'ULogicDataSplineMovement_C::Duration' has a wrong offset!");
static_assert(offsetof(ULogicDataSplineMovement_C, EffectOnReach) == 0x000040, "Member 'ULogicDataSplineMovement_C::EffectOnReach' has a wrong offset!");
static_assert(offsetof(ULogicDataSplineMovement_C, Height) == 0x000070, "Member 'ULogicDataSplineMovement_C::Height' has a wrong offset!");
static_assert(offsetof(ULogicDataSplineMovement_C, IsDestroyReach) == 0x000074, "Member 'ULogicDataSplineMovement_C::IsDestroyReach' has a wrong offset!");
static_assert(offsetof(ULogicDataSplineMovement_C, IsForwardTangent) == 0x000075, "Member 'ULogicDataSplineMovement_C::IsForwardTangent' has a wrong offset!");
static_assert(offsetof(ULogicDataSplineMovement_C, IsSummonOnReach) == 0x000076, "Member 'ULogicDataSplineMovement_C::IsSummonOnReach' has a wrong offset!");
static_assert(offsetof(ULogicDataSplineMovement_C, Length) == 0x000078, "Member 'ULogicDataSplineMovement_C::Length' has a wrong offset!");
static_assert(offsetof(ULogicDataSplineMovement_C, MaxSpeed) == 0x00007C, "Member 'ULogicDataSplineMovement_C::MaxSpeed' has a wrong offset!");
static_assert(offsetof(ULogicDataSplineMovement_C, MinSpeed) == 0x000080, "Member 'ULogicDataSplineMovement_C::MinSpeed' has a wrong offset!");
static_assert(offsetof(ULogicDataSplineMovement_C, Rotate) == 0x000084, "Member 'ULogicDataSplineMovement_C::Rotate' has a wrong offset!");
static_assert(offsetof(ULogicDataSplineMovement_C, SelfHeight) == 0x000088, "Member 'ULogicDataSplineMovement_C::SelfHeight' has a wrong offset!");
static_assert(offsetof(ULogicDataSplineMovement_C, SelfLength) == 0x00008C, "Member 'ULogicDataSplineMovement_C::SelfLength' has a wrong offset!");
static_assert(offsetof(ULogicDataSplineMovement_C, SelfRotate) == 0x000090, "Member 'ULogicDataSplineMovement_C::SelfRotate' has a wrong offset!");
static_assert(offsetof(ULogicDataSplineMovement_C, SplineTrace) == 0x000098, "Member 'ULogicDataSplineMovement_C::SplineTrace' has a wrong offset!");
static_assert(offsetof(ULogicDataSplineMovement_C, UseTargetLocation) == 0x0000C8, "Member 'ULogicDataSplineMovement_C::UseTargetLocation' has a wrong offset!");

}

