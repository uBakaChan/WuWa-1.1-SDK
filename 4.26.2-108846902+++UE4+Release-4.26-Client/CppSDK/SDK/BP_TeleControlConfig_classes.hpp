#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TeleControlConfig

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TeleControlConfig.BP_TeleControlConfig_C
// 0x01F0 (0x0228 - 0x0038)
class UBP_TeleControlConfig_C final : public UPrimaryDataAsset
{
public:
	float                                         _a__;                                              // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         F___;                                              // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Eight___;                                          // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ____;                                              // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___;                                               // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _____0;                                            // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _____1;                                            // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Eight____0;                                        // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _P__;                                              // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         U___;                                              // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ____0;                                             // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         F____0;                                            // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                _l;                                                // 0x0068(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __O_;                                              // 0x0074(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __O__0;                                            // 0x0080(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           _i___4;                                            // 0x008C(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           _a_4;                                              // 0x0098(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 _a_O;                                              // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __6CD;                                             // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 _i___O;                                            // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Eight__L_4;                                        // 0x00C0(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Eight__L_O;                                        // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          S___Log;                                           // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _________;                                         // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _____;                                             // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<float, float>                            _____C_;                                           // 0x00E8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 ___O;                                              // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ____t__;                                           // 0x0140(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          _i____i_;                                          // 0x0141(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_142[0x2];                                      // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ____D___;                                          // 0x0144(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   _i____;                                            // 0x0148(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                ___P_O_;                                           // 0x0158(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IS__;                                              // 0x0164(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IS____;                                            // 0x0168(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IS_____;                                           // 0x016C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 _i__D_ID;                                          // 0x0170(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          _____l;                                            // 0x0180(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ________;                                          // 0x0184(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Eight_______;                                      // 0x0190(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   _________0;                                        // 0x019C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   _________1;                                        // 0x01A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           ____h___;                                          // 0x01B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _i____Debug;                                       // 0x01C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          _i_____s;                                          // 0x01C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C2[0x2];                                      // 0x01C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _i______;                                          // 0x01C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _i_______;                                         // 0x01C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _i_____KJ_;                                        // 0x01CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           _i_____4;                                          // 0x01D0(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        _i____7ayH;                                        // 0x01E0(0x0020)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSoftObjectPath                        _i______yH;                                        // 0x0200(0x0020)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         _i_________;                                       // 0x0220(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ______;                                            // 0x0224(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TeleControlConfig_C">();
	}
	static class UBP_TeleControlConfig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_TeleControlConfig_C>();
	}
};
static_assert(alignof(UBP_TeleControlConfig_C) == 0x000008, "Wrong alignment on UBP_TeleControlConfig_C");
static_assert(sizeof(UBP_TeleControlConfig_C) == 0x000228, "Wrong size on UBP_TeleControlConfig_C");
static_assert(offsetof(UBP_TeleControlConfig_C, _a__) == 0x000038, "Member 'UBP_TeleControlConfig_C::_a__' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, F___) == 0x00003C, "Member 'UBP_TeleControlConfig_C::F___' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, Eight___) == 0x000040, "Member 'UBP_TeleControlConfig_C::Eight___' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, ____) == 0x000044, "Member 'UBP_TeleControlConfig_C::____' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, ___) == 0x000048, "Member 'UBP_TeleControlConfig_C::___' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _____0) == 0x00004C, "Member 'UBP_TeleControlConfig_C::_____0' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _____1) == 0x000050, "Member 'UBP_TeleControlConfig_C::_____1' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, Eight____0) == 0x000054, "Member 'UBP_TeleControlConfig_C::Eight____0' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _P__) == 0x000058, "Member 'UBP_TeleControlConfig_C::_P__' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, U___) == 0x00005C, "Member 'UBP_TeleControlConfig_C::U___' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, ____0) == 0x000060, "Member 'UBP_TeleControlConfig_C::____0' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, F____0) == 0x000064, "Member 'UBP_TeleControlConfig_C::F____0' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _l) == 0x000068, "Member 'UBP_TeleControlConfig_C::_l' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, __O_) == 0x000074, "Member 'UBP_TeleControlConfig_C::__O_' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, __O__0) == 0x000080, "Member 'UBP_TeleControlConfig_C::__O__0' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _i___4) == 0x00008C, "Member 'UBP_TeleControlConfig_C::_i___4' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _a_4) == 0x000098, "Member 'UBP_TeleControlConfig_C::_a_4' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _a_O) == 0x0000A8, "Member 'UBP_TeleControlConfig_C::_a_O' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, __6CD) == 0x0000B0, "Member 'UBP_TeleControlConfig_C::__6CD' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _i___O) == 0x0000B8, "Member 'UBP_TeleControlConfig_C::_i___O' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, Eight__L_4) == 0x0000C0, "Member 'UBP_TeleControlConfig_C::Eight__L_4' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, Eight__L_O) == 0x0000D0, "Member 'UBP_TeleControlConfig_C::Eight__L_O' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, S___Log) == 0x0000D8, "Member 'UBP_TeleControlConfig_C::S___Log' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _________) == 0x0000DC, "Member 'UBP_TeleControlConfig_C::_________' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _____) == 0x0000E0, "Member 'UBP_TeleControlConfig_C::_____' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _____C_) == 0x0000E8, "Member 'UBP_TeleControlConfig_C::_____C_' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, ___O) == 0x000138, "Member 'UBP_TeleControlConfig_C::___O' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, ____t__) == 0x000140, "Member 'UBP_TeleControlConfig_C::____t__' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _i____i_) == 0x000141, "Member 'UBP_TeleControlConfig_C::_i____i_' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, ____D___) == 0x000144, "Member 'UBP_TeleControlConfig_C::____D___' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _i____) == 0x000148, "Member 'UBP_TeleControlConfig_C::_i____' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, ___P_O_) == 0x000158, "Member 'UBP_TeleControlConfig_C::___P_O_' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, IS__) == 0x000164, "Member 'UBP_TeleControlConfig_C::IS__' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, IS____) == 0x000168, "Member 'UBP_TeleControlConfig_C::IS____' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, IS_____) == 0x00016C, "Member 'UBP_TeleControlConfig_C::IS_____' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _i__D_ID) == 0x000170, "Member 'UBP_TeleControlConfig_C::_i__D_ID' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _____l) == 0x000180, "Member 'UBP_TeleControlConfig_C::_____l' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, ________) == 0x000184, "Member 'UBP_TeleControlConfig_C::________' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, Eight_______) == 0x000190, "Member 'UBP_TeleControlConfig_C::Eight_______' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _________0) == 0x00019C, "Member 'UBP_TeleControlConfig_C::_________0' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _________1) == 0x0001A8, "Member 'UBP_TeleControlConfig_C::_________1' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, ____h___) == 0x0001B8, "Member 'UBP_TeleControlConfig_C::____h___' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _i____Debug) == 0x0001C0, "Member 'UBP_TeleControlConfig_C::_i____Debug' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _i_____s) == 0x0001C1, "Member 'UBP_TeleControlConfig_C::_i_____s' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _i______) == 0x0001C4, "Member 'UBP_TeleControlConfig_C::_i______' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _i_______) == 0x0001C8, "Member 'UBP_TeleControlConfig_C::_i_______' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _i_____KJ_) == 0x0001CC, "Member 'UBP_TeleControlConfig_C::_i_____KJ_' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _i_____4) == 0x0001D0, "Member 'UBP_TeleControlConfig_C::_i_____4' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _i____7ayH) == 0x0001E0, "Member 'UBP_TeleControlConfig_C::_i____7ayH' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _i______yH) == 0x000200, "Member 'UBP_TeleControlConfig_C::_i______yH' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, _i_________) == 0x000220, "Member 'UBP_TeleControlConfig_C::_i_________' has a wrong offset!");
static_assert(offsetof(UBP_TeleControlConfig_C, ______) == 0x000224, "Member 'UBP_TeleControlConfig_C::______' has a wrong offset!");

}

