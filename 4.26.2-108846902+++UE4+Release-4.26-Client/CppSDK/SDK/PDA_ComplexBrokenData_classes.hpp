#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PDA_ComplexBrokenData

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SMaterialControllerFloatGroup_structs.hpp"
#include "SMaterialControllerFloatParameter_structs.hpp"
#include "SMaterialControllerColorParameter_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PDA_ComplexBrokenData.PDA_ComplexBrokenData_C
// 0x0560 (0x0598 - 0x0038)
class UPDA_ComplexBrokenData_C final : public UPrimaryDataAsset
{
public:
	class UMaterialInstance*                      MaterialReplace;                                   // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 PiecesMaskThreshold;                               // 0x0040(0x0010)(Edit, BlueprintVisible)
	struct FSMaterialControllerFloatGroup         ExtendMin;                                         // 0x0050(0x01B0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FSMaterialControllerFloatGroup         ExtendMax;                                         // 0x0200(0x01B0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UTexture2D*                             MaskTexture;                                       // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           MaskUVBiasScale;                                   // 0x03B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSMaterialControllerFloatParameter> CustomFloatParameters;                             // 0x03C8(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSMaterialControllerColorParameter> CustomColorParameters;                             // 0x03D8(0x0010)(Edit, BlueprintVisible)
	struct FSMaterialControllerFloatGroup         LoopTime;                                          // 0x03E8(0x01B0)(Edit, BlueprintVisible, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PDA_ComplexBrokenData_C">();
	}
	static class UPDA_ComplexBrokenData_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPDA_ComplexBrokenData_C>();
	}
};
static_assert(alignof(UPDA_ComplexBrokenData_C) == 0x000008, "Wrong alignment on UPDA_ComplexBrokenData_C");
static_assert(sizeof(UPDA_ComplexBrokenData_C) == 0x000598, "Wrong size on UPDA_ComplexBrokenData_C");
static_assert(offsetof(UPDA_ComplexBrokenData_C, MaterialReplace) == 0x000038, "Member 'UPDA_ComplexBrokenData_C::MaterialReplace' has a wrong offset!");
static_assert(offsetof(UPDA_ComplexBrokenData_C, PiecesMaskThreshold) == 0x000040, "Member 'UPDA_ComplexBrokenData_C::PiecesMaskThreshold' has a wrong offset!");
static_assert(offsetof(UPDA_ComplexBrokenData_C, ExtendMin) == 0x000050, "Member 'UPDA_ComplexBrokenData_C::ExtendMin' has a wrong offset!");
static_assert(offsetof(UPDA_ComplexBrokenData_C, ExtendMax) == 0x000200, "Member 'UPDA_ComplexBrokenData_C::ExtendMax' has a wrong offset!");
static_assert(offsetof(UPDA_ComplexBrokenData_C, MaskTexture) == 0x0003B0, "Member 'UPDA_ComplexBrokenData_C::MaskTexture' has a wrong offset!");
static_assert(offsetof(UPDA_ComplexBrokenData_C, MaskUVBiasScale) == 0x0003B8, "Member 'UPDA_ComplexBrokenData_C::MaskUVBiasScale' has a wrong offset!");
static_assert(offsetof(UPDA_ComplexBrokenData_C, CustomFloatParameters) == 0x0003C8, "Member 'UPDA_ComplexBrokenData_C::CustomFloatParameters' has a wrong offset!");
static_assert(offsetof(UPDA_ComplexBrokenData_C, CustomColorParameters) == 0x0003D8, "Member 'UPDA_ComplexBrokenData_C::CustomColorParameters' has a wrong offset!");
static_assert(offsetof(UPDA_ComplexBrokenData_C, LoopTime) == 0x0003E8, "Member 'UPDA_ComplexBrokenData_C::LoopTime' has a wrong offset!");

}

