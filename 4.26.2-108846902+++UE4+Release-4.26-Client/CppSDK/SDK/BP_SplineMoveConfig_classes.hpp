#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SplineMoveConfig

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SplineMoveConfig.BP_SplineMoveConfig_C
// 0x0018 (0x0050 - 0x0038)
class UBP_SplineMoveConfig_C final : public UPrimaryDataAsset
{
public:
	float                                         TurnRate;                                          // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AirControl;                                        // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         JumpHeightRate;                                    // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         JumpTimeScale;                                     // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxFlySpeed;                                       // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnsAccel;                                          // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SplineMoveConfig_C">();
	}
	static class UBP_SplineMoveConfig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SplineMoveConfig_C>();
	}
};
static_assert(alignof(UBP_SplineMoveConfig_C) == 0x000008, "Wrong alignment on UBP_SplineMoveConfig_C");
static_assert(sizeof(UBP_SplineMoveConfig_C) == 0x000050, "Wrong size on UBP_SplineMoveConfig_C");
static_assert(offsetof(UBP_SplineMoveConfig_C, TurnRate) == 0x000038, "Member 'UBP_SplineMoveConfig_C::TurnRate' has a wrong offset!");
static_assert(offsetof(UBP_SplineMoveConfig_C, AirControl) == 0x00003C, "Member 'UBP_SplineMoveConfig_C::AirControl' has a wrong offset!");
static_assert(offsetof(UBP_SplineMoveConfig_C, JumpHeightRate) == 0x000040, "Member 'UBP_SplineMoveConfig_C::JumpHeightRate' has a wrong offset!");
static_assert(offsetof(UBP_SplineMoveConfig_C, JumpTimeScale) == 0x000044, "Member 'UBP_SplineMoveConfig_C::JumpTimeScale' has a wrong offset!");
static_assert(offsetof(UBP_SplineMoveConfig_C, MaxFlySpeed) == 0x000048, "Member 'UBP_SplineMoveConfig_C::MaxFlySpeed' has a wrong offset!");
static_assert(offsetof(UBP_SplineMoveConfig_C, AnsAccel) == 0x00004C, "Member 'UBP_SplineMoveConfig_C::AnsAccel' has a wrong offset!");

}

