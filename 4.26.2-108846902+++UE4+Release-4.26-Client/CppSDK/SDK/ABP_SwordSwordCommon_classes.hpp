#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_SwordSwordCommon

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "EWeaponViewName_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_SwordSwordCommon.ABP_SwordSwordCommon_C
// 0x1710 (0x1A90 - 0x0380)
class UABP_SwordSwordCommon_C final : public UAnimInstance
{
public:
	uint8                                         Pad_378[0x8];                                      // 0x0378(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0380(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0388(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x03C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x03E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x0410(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x0438(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x0460(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x0488(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x04B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x04D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x0500(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x0528(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x0550(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x0578(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x05A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x05C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x05F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x0618(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x0640(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x0668(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x0690(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x0720(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x0758(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x07E8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x0820(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x08B0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x08E8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x0978(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x09B0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x0A40(0x0038)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x0A78(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0AB0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x0B40(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0B78(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x0C08(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0C40(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x0CD0(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x0D08(0x0148)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x0E50(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x0E88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x0EB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x0ED8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0F00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0F28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0F50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0F78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0FA0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0FC8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0FF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x1018(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x1040(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x1068(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x1090(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x10B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x10E0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x1108(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x1198(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x11D0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x1260(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x1298(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x1328(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x1360(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x13F0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1428(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x14B8(0x0038)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x14F0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1528(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x15B8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x15F0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1680(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x16B8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1748(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x1780(0x0148)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x18C8(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1900(0x0148)()
	class ATsBaseCharacter_C*                     _r__;                                              // 0x1A48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WeaponOpen;                                        // 0x1A50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A51[0x3];                                     // 0x1A51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Open_Delay;                                        // 0x1A54(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta_Time;                                        // 0x1A58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fh___;                                             // 0x1A5C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          __s_fh;                                            // 0x1A5D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsUI;                                              // 0x1A5E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A5F[0x1];                                     // 0x1A5F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Fh_4I_;                                            // 0x1A60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SMfh_4I_;                                          // 0x1A64(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 UILb_;                                             // 0x1A68(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class ATsUiSceneRoleActor_C*                  UILb__;                                            // 0x1A78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EWeaponViewName                               UILb;                                              // 0x1A80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _c_____yH;                                         // 0x1A81(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ABP_SwordSwordCommon(int32 EntryPoint);
	void Set_Open_Delay();
	void Clear_Open_Delay();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void BlueprintInitializeAnimation();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordSwordCommon_AnimGraphNode_TransitionResult_442026874D8AB105517C2FA2CA4D65DB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordSwordCommon_AnimGraphNode_TransitionResult_8C59DB094C01AC109040CB990C75C06A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordSwordCommon_AnimGraphNode_TransitionResult_3B8810F4459ACEB9527509985E65000C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordSwordCommon_AnimGraphNode_TransitionResult_8BA12FDD446C09C809D72AB0C2340A98();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordSwordCommon_AnimGraphNode_TransitionResult_DC26E11C4F8D83DD85917AA92461CB0E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordSwordCommon_AnimGraphNode_TransitionResult_822EA25E4453F301ABDBB99417972A4B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordSwordCommon_AnimGraphNode_TransitionResult_A79505614180433BB84161976EF0CD82();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordSwordCommon_AnimGraphNode_TransitionResult_0618CFED417F9E77161A52ABF158EEDE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordSwordCommon_AnimGraphNode_TransitionResult_197D57894C9E127C8AB8AE8761F49575();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordSwordCommon_AnimGraphNode_TransitionResult_637A0D9049297ECC14A2AFB1A9CC21A5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordSwordCommon_AnimGraphNode_TransitionResult_6C53DA824A250923620897AC53C14DBF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordSwordCommon_AnimGraphNode_TransitionResult_67E97B6D41A96949B0DD629FD45350FE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordSwordCommon_AnimGraphNode_TransitionResult_2EA48257401A5319A90E108D696296D8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordSwordCommon_AnimGraphNode_TransitionResult_1383B11F4B0B67D9C96694BB8861ECF8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordSwordCommon_AnimGraphNode_TransitionResult_C9ECF3D5476C89AF4D9F39B90AA9A9B4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordSwordCommon_AnimGraphNode_TransitionResult_A2FF5EFD4F3A175523B6E29053E0586F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordSwordCommon_AnimGraphNode_TransitionResult_B8628A9A4BEA47EB022CE5B5795F0F84();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordSwordCommon_AnimGraphNode_TransitionResult_4890461F4760D1A57BFA6A8FC2DBB9FF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordSwordCommon_AnimGraphNode_TransitionResult_08FB841740ED6B6DF05AB5BA11B8D01E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordSwordCommon_AnimGraphNode_TransitionResult_B33F3BE1490276AB523C79A4C66C6025();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordSwordCommon_AnimGraphNode_TransitionResult_1E9C272F4081A26A6BB81488A033428D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordSwordCommon_AnimGraphNode_TransitionResult_A876E9E04817193B384B6B986CDFB322();
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_SwordSwordCommon_C">();
	}
	static class UABP_SwordSwordCommon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_SwordSwordCommon_C>();
	}
};
static_assert(alignof(UABP_SwordSwordCommon_C) == 0x000010, "Wrong alignment on UABP_SwordSwordCommon_C");
static_assert(sizeof(UABP_SwordSwordCommon_C) == 0x001A90, "Wrong size on UABP_SwordSwordCommon_C");
static_assert(offsetof(UABP_SwordSwordCommon_C, UberGraphFrame) == 0x000380, "Member 'UABP_SwordSwordCommon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_Root) == 0x000388, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_33) == 0x0003C0, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_32) == 0x0003E8, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_31) == 0x000410, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_30) == 0x000438, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_29) == 0x000460, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_28) == 0x000488, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_27) == 0x0004B0, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_26) == 0x0004D8, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_25) == 0x000500, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_24) == 0x000528, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_23) == 0x000550, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_22) == 0x000578, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_21) == 0x0005A0, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_20) == 0x0005C8, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_19) == 0x0005F0, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_18) == 0x000618, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_17) == 0x000640, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_16) == 0x000668, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_SequencePlayer_15) == 0x000690, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_StateResult_19) == 0x000720, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_SequencePlayer_14) == 0x000758, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_StateResult_18) == 0x0007E8, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_SequencePlayer_13) == 0x000820, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_StateResult_17) == 0x0008B0, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_SequencePlayer_12) == 0x0008E8, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_StateResult_16) == 0x000978, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_SequencePlayer_11) == 0x0009B0, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_StateResult_15) == 0x000A40, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_StateResult_14) == 0x000A78, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_SequencePlayer_10) == 0x000AB0, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_StateResult_13) == 0x000B40, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_SequencePlayer_9) == 0x000B78, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_StateResult_12) == 0x000C08, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_SequencePlayer_8) == 0x000C40, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_StateResult_11) == 0x000CD0, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_StateMachine_2) == 0x000D08, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_StateResult_10) == 0x000E50, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_15) == 0x000E88, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_14) == 0x000EB0, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_13) == 0x000ED8, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_12) == 0x000F00, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_11) == 0x000F28, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_10) == 0x000F50, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_9) == 0x000F78, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_8) == 0x000FA0, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_7) == 0x000FC8, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_6) == 0x000FF0, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_5) == 0x001018, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_4) == 0x001040, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_3) == 0x001068, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_2) == 0x001090, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult_1) == 0x0010B8, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_TransitionResult) == 0x0010E0, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_SequencePlayer_7) == 0x001108, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_StateResult_9) == 0x001198, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_SequencePlayer_6) == 0x0011D0, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_StateResult_8) == 0x001260, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_SequencePlayer_5) == 0x001298, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_StateResult_7) == 0x001328, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_SequencePlayer_4) == 0x001360, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_StateResult_6) == 0x0013F0, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_SequencePlayer_3) == 0x001428, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_StateResult_5) == 0x0014B8, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_StateResult_4) == 0x0014F0, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_SequencePlayer_2) == 0x001528, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_StateResult_3) == 0x0015B8, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_SequencePlayer_1) == 0x0015F0, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_StateResult_2) == 0x001680, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_SequencePlayer) == 0x0016B8, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_StateResult_1) == 0x001748, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_StateMachine_1) == 0x001780, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_StateResult) == 0x0018C8, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, AnimGraphNode_StateMachine) == 0x001900, "Member 'UABP_SwordSwordCommon_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, _r__) == 0x001A48, "Member 'UABP_SwordSwordCommon_C::_r__' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, WeaponOpen) == 0x001A50, "Member 'UABP_SwordSwordCommon_C::WeaponOpen' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, Open_Delay) == 0x001A54, "Member 'UABP_SwordSwordCommon_C::Open_Delay' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, Delta_Time) == 0x001A58, "Member 'UABP_SwordSwordCommon_C::Delta_Time' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, Fh___) == 0x001A5C, "Member 'UABP_SwordSwordCommon_C::Fh___' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, __s_fh) == 0x001A5D, "Member 'UABP_SwordSwordCommon_C::__s_fh' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, IsUI) == 0x001A5E, "Member 'UABP_SwordSwordCommon_C::IsUI' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, Fh_4I_) == 0x001A60, "Member 'UABP_SwordSwordCommon_C::Fh_4I_' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, SMfh_4I_) == 0x001A64, "Member 'UABP_SwordSwordCommon_C::SMfh_4I_' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, UILb_) == 0x001A68, "Member 'UABP_SwordSwordCommon_C::UILb_' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, UILb__) == 0x001A78, "Member 'UABP_SwordSwordCommon_C::UILb__' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, UILb) == 0x001A80, "Member 'UABP_SwordSwordCommon_C::UILb' has a wrong offset!");
static_assert(offsetof(UABP_SwordSwordCommon_C, _c_____yH) == 0x001A81, "Member 'UABP_SwordSwordCommon_C::_c_____yH' has a wrong offset!");

}

