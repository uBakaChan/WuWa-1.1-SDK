#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkyDome

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_SkyDome.BP_SkyDome_C.OnWeatherPresetChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_SkyDome_C_OnWeatherPresetChanged__DelegateSignature final
{
public:
	class UClass*                                 Preset;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TransitionDuration;                                // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkyDome_C_OnWeatherPresetChanged__DelegateSignature) == 0x000008, "Wrong alignment on BP_SkyDome_C_OnWeatherPresetChanged__DelegateSignature");
static_assert(sizeof(BP_SkyDome_C_OnWeatherPresetChanged__DelegateSignature) == 0x000010, "Wrong size on BP_SkyDome_C_OnWeatherPresetChanged__DelegateSignature");
static_assert(offsetof(BP_SkyDome_C_OnWeatherPresetChanged__DelegateSignature, Preset) == 0x000000, "Member 'BP_SkyDome_C_OnWeatherPresetChanged__DelegateSignature::Preset' has a wrong offset!");
static_assert(offsetof(BP_SkyDome_C_OnWeatherPresetChanged__DelegateSignature, TransitionDuration) == 0x000008, "Member 'BP_SkyDome_C_OnWeatherPresetChanged__DelegateSignature::TransitionDuration' has a wrong offset!");

// Function BP_SkyDome.BP_SkyDome_C.OnTimeOfDayPresetChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_SkyDome_C_OnTimeOfDayPresetChanged__DelegateSignature final
{
public:
	class UClass*                                 Preset;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TransitionDuraion;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkyDome_C_OnTimeOfDayPresetChanged__DelegateSignature) == 0x000008, "Wrong alignment on BP_SkyDome_C_OnTimeOfDayPresetChanged__DelegateSignature");
static_assert(sizeof(BP_SkyDome_C_OnTimeOfDayPresetChanged__DelegateSignature) == 0x000010, "Wrong size on BP_SkyDome_C_OnTimeOfDayPresetChanged__DelegateSignature");
static_assert(offsetof(BP_SkyDome_C_OnTimeOfDayPresetChanged__DelegateSignature, Preset) == 0x000000, "Member 'BP_SkyDome_C_OnTimeOfDayPresetChanged__DelegateSignature::Preset' has a wrong offset!");
static_assert(offsetof(BP_SkyDome_C_OnTimeOfDayPresetChanged__DelegateSignature, TransitionDuraion) == 0x000008, "Member 'BP_SkyDome_C_OnTimeOfDayPresetChanged__DelegateSignature::TransitionDuraion' has a wrong offset!");

// Function BP_SkyDome.BP_SkyDome_C.OnHourPassedBy__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_SkyDome_C_OnHourPassedBy__DelegateSignature final
{
public:
	int32                                         Hour;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkyDome_C_OnHourPassedBy__DelegateSignature) == 0x000004, "Wrong alignment on BP_SkyDome_C_OnHourPassedBy__DelegateSignature");
static_assert(sizeof(BP_SkyDome_C_OnHourPassedBy__DelegateSignature) == 0x000004, "Wrong size on BP_SkyDome_C_OnHourPassedBy__DelegateSignature");
static_assert(offsetof(BP_SkyDome_C_OnHourPassedBy__DelegateSignature, Hour) == 0x000000, "Member 'BP_SkyDome_C_OnHourPassedBy__DelegateSignature::Hour' has a wrong offset!");

// Function BP_SkyDome.BP_SkyDome_C.OnDayPassedBy__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_SkyDome_C_OnDayPassedBy__DelegateSignature final
{
public:
	int32                                         Day;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkyDome_C_OnDayPassedBy__DelegateSignature) == 0x000004, "Wrong alignment on BP_SkyDome_C_OnDayPassedBy__DelegateSignature");
static_assert(sizeof(BP_SkyDome_C_OnDayPassedBy__DelegateSignature) == 0x000004, "Wrong size on BP_SkyDome_C_OnDayPassedBy__DelegateSignature");
static_assert(offsetof(BP_SkyDome_C_OnDayPassedBy__DelegateSignature, Day) == 0x000000, "Member 'BP_SkyDome_C_OnDayPassedBy__DelegateSignature::Day' has a wrong offset!");

// Function BP_SkyDome.BP_SkyDome_C.ExecuteUbergraph_BP_SkyDome
// 0x0004 (0x0004 - 0x0000)
struct BP_SkyDome_C_ExecuteUbergraph_BP_SkyDome final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkyDome_C_ExecuteUbergraph_BP_SkyDome) == 0x000004, "Wrong alignment on BP_SkyDome_C_ExecuteUbergraph_BP_SkyDome");
static_assert(sizeof(BP_SkyDome_C_ExecuteUbergraph_BP_SkyDome) == 0x000004, "Wrong size on BP_SkyDome_C_ExecuteUbergraph_BP_SkyDome");
static_assert(offsetof(BP_SkyDome_C_ExecuteUbergraph_BP_SkyDome, EntryPoint) == 0x000000, "Member 'BP_SkyDome_C_ExecuteUbergraph_BP_SkyDome::EntryPoint' has a wrong offset!");

}

