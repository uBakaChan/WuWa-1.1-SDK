#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KuroISMGroup

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "KuroRenderingRuntimeBPPlugin_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_KuroISMGroup.BP_KuroISMGroup_C
// 0x0030 (0x02D8 - 0x02A8)
class ABP_KuroISMGroup_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          HideLogicallyOnBeginPlay;                          // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DitherProgress;                                    // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTick;                                            // 0x02C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaSeconds;                                      // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShow;                                            // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_KuroISMGroup(int32 EntryPoint);
	void ReceiveTick(float Param_DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void IsEditor(bool* Param_IsEditor);
	void EditorValidCheck();
	void SeyLogicallyHiddenForAllChildren();
	void SeyLogicallyShowForAllChildren();
	void MaterialParameterGradient(float DeltalTime);
	void Timer(float* ElapsedTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_KuroISMGroup_C">();
	}
	static class ABP_KuroISMGroup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_KuroISMGroup_C>();
	}
};
static_assert(alignof(ABP_KuroISMGroup_C) == 0x000008, "Wrong alignment on ABP_KuroISMGroup_C");
static_assert(sizeof(ABP_KuroISMGroup_C) == 0x0002D8, "Wrong size on ABP_KuroISMGroup_C");
static_assert(offsetof(ABP_KuroISMGroup_C, UberGraphFrame) == 0x0002A8, "Member 'ABP_KuroISMGroup_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_KuroISMGroup_C, DefaultSceneRoot) == 0x0002B0, "Member 'ABP_KuroISMGroup_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_KuroISMGroup_C, HideLogicallyOnBeginPlay) == 0x0002B8, "Member 'ABP_KuroISMGroup_C::HideLogicallyOnBeginPlay' has a wrong offset!");
static_assert(offsetof(ABP_KuroISMGroup_C, DitherProgress) == 0x0002BC, "Member 'ABP_KuroISMGroup_C::DitherProgress' has a wrong offset!");
static_assert(offsetof(ABP_KuroISMGroup_C, Duration) == 0x0002C0, "Member 'ABP_KuroISMGroup_C::Duration' has a wrong offset!");
static_assert(offsetof(ABP_KuroISMGroup_C, IsTick) == 0x0002C4, "Member 'ABP_KuroISMGroup_C::IsTick' has a wrong offset!");
static_assert(offsetof(ABP_KuroISMGroup_C, DeltaSeconds) == 0x0002C8, "Member 'ABP_KuroISMGroup_C::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ABP_KuroISMGroup_C, Time) == 0x0002CC, "Member 'ABP_KuroISMGroup_C::Time' has a wrong offset!");
static_assert(offsetof(ABP_KuroISMGroup_C, IsShow) == 0x0002D0, "Member 'ABP_KuroISMGroup_C::IsShow' has a wrong offset!");

}

