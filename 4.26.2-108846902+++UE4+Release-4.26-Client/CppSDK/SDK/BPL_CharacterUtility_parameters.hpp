#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_CharacterUtility

#include "Basic.hpp"

#include "SCharacterPart_structs.hpp"
#include "Engine_structs.hpp"
#include "SReBulletDataMain_structs.hpp"
#include "SCaughtInfo_structs.hpp"
#include "SVisionData_structs.hpp"
#include "EMovementDirection_structs.hpp"
#include "SSkillInfo_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SEffectData_structs.hpp"
#include "SAttributeModifierData_structs.hpp"
#include "SDamageData_structs.hpp"
#include "SHitEffect_structs.hpp"
#include "SBulletDataMain_structs.hpp"
#include "SMovementSetting_State_structs.hpp"


namespace SDK::Params
{

// Function BPL_CharacterUtility.BPL_CharacterUtility_C.CheckNpcSetupTools
// 0x0028 (0x0028 - 0x0000)
struct BPL_CharacterUtility_C_CheckNpcSetupTools final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         ReturnValues;                                      // 0x0008(0x0010)(Parm, OutParm)
	TArray<class AActor*>                         Result;                                            // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
};
static_assert(alignof(BPL_CharacterUtility_C_CheckNpcSetupTools) == 0x000008, "Wrong alignment on BPL_CharacterUtility_C_CheckNpcSetupTools");
static_assert(sizeof(BPL_CharacterUtility_C_CheckNpcSetupTools) == 0x000028, "Wrong size on BPL_CharacterUtility_C_CheckNpcSetupTools");
static_assert(offsetof(BPL_CharacterUtility_C_CheckNpcSetupTools, __WorldContext) == 0x000000, "Member 'BPL_CharacterUtility_C_CheckNpcSetupTools::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_CheckNpcSetupTools, ReturnValues) == 0x000008, "Member 'BPL_CharacterUtility_C_CheckNpcSetupTools::ReturnValues' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_CheckNpcSetupTools, Result) == 0x000018, "Member 'BPL_CharacterUtility_C_CheckNpcSetupTools::Result' has a wrong offset!");

// Function BPL_CharacterUtility.BPL_CharacterUtility_C.CheckSimpleNpc
// 0x0058 (0x0058 - 0x0000)
struct BPL_CharacterUtility_C_CheckSimpleNpc final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         ReturnValues;                                      // 0x0008(0x0010)(Parm, OutParm)
	TArray<class AActor*>                         Result;                                            // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ATsSimpleNpc_C*>                 CallFunc_GetAllActorsOfClass_OutActors;            // 0x0028(0x0010)(ReferenceParm)
	int32                                         ___int_Array_Index_Variable;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsSimpleNpc_C*                         CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSkeletalMeshComponentAnim_ReturnValue; // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_CharacterUtility_C_CheckSimpleNpc) == 0x000008, "Wrong alignment on BPL_CharacterUtility_C_CheckSimpleNpc");
static_assert(sizeof(BPL_CharacterUtility_C_CheckSimpleNpc) == 0x000058, "Wrong size on BPL_CharacterUtility_C_CheckSimpleNpc");
static_assert(offsetof(BPL_CharacterUtility_C_CheckSimpleNpc, __WorldContext) == 0x000000, "Member 'BPL_CharacterUtility_C_CheckSimpleNpc::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_CheckSimpleNpc, ReturnValues) == 0x000008, "Member 'BPL_CharacterUtility_C_CheckSimpleNpc::ReturnValues' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_CheckSimpleNpc, Result) == 0x000018, "Member 'BPL_CharacterUtility_C_CheckSimpleNpc::Result' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_CheckSimpleNpc, CallFunc_GetAllActorsOfClass_OutActors) == 0x000028, "Member 'BPL_CharacterUtility_C_CheckSimpleNpc::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_CheckSimpleNpc, ___int_Array_Index_Variable) == 0x000038, "Member 'BPL_CharacterUtility_C_CheckSimpleNpc::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_CheckSimpleNpc, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BPL_CharacterUtility_C_CheckSimpleNpc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_CheckSimpleNpc, CallFunc_Array_Get_Item) == 0x000040, "Member 'BPL_CharacterUtility_C_CheckSimpleNpc::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_CheckSimpleNpc, ___int_Loop_Counter_Variable) == 0x000048, "Member 'BPL_CharacterUtility_C_CheckSimpleNpc::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_CheckSimpleNpc, CallFunc_CheckSkeletalMeshComponentAnim_ReturnValue) == 0x00004C, "Member 'BPL_CharacterUtility_C_CheckSimpleNpc::CallFunc_CheckSkeletalMeshComponentAnim_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_CheckSimpleNpc, CallFunc_Less_IntInt_ReturnValue) == 0x00004D, "Member 'BPL_CharacterUtility_C_CheckSimpleNpc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_CheckSimpleNpc, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BPL_CharacterUtility_C_CheckSimpleNpc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_CheckSimpleNpc, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'BPL_CharacterUtility_C_CheckSimpleNpc::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BPL_CharacterUtility.BPL_CharacterUtility_C.UpdateCachePoseEnable
// 0x0038 (0x0038 - 0x0000)
struct BPL_CharacterUtility_C_UpdateCachePoseEnable final
{
public:
	class UAnimInstance*                          Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CachePoseEnable;                                   // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     K2Node_DynamicCast_AsTs_Base_Character;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CharacterUtility_C_UpdateCachePoseEnable) == 0x000008, "Wrong alignment on BPL_CharacterUtility_C_UpdateCachePoseEnable");
static_assert(sizeof(BPL_CharacterUtility_C_UpdateCachePoseEnable) == 0x000038, "Wrong size on BPL_CharacterUtility_C_UpdateCachePoseEnable");
static_assert(offsetof(BPL_CharacterUtility_C_UpdateCachePoseEnable, Target) == 0x000000, "Member 'BPL_CharacterUtility_C_UpdateCachePoseEnable::Target' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_UpdateCachePoseEnable, __WorldContext) == 0x000008, "Member 'BPL_CharacterUtility_C_UpdateCachePoseEnable::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_UpdateCachePoseEnable, CachePoseEnable) == 0x000010, "Member 'BPL_CharacterUtility_C_UpdateCachePoseEnable::CachePoseEnable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_UpdateCachePoseEnable, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000018, "Member 'BPL_CharacterUtility_C_UpdateCachePoseEnable::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_UpdateCachePoseEnable, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BPL_CharacterUtility_C_UpdateCachePoseEnable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_UpdateCachePoseEnable, K2Node_DynamicCast_AsTs_Base_Character) == 0x000028, "Member 'BPL_CharacterUtility_C_UpdateCachePoseEnable::K2Node_DynamicCast_AsTs_Base_Character' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_UpdateCachePoseEnable, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPL_CharacterUtility_C_UpdateCachePoseEnable::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BPL_CharacterUtility.BPL_CharacterUtility_C.GetTypeQuery
// 0x0038 (0x0038 - 0x0000)
struct BPL_CharacterUtility_C_GetTypeQuery final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      NewParam;                                          // 0x0008(0x0010)(Parm, OutParm)
	TArray<EObjectTypeQuery>                      TypeQuerys;                                        // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
};
static_assert(alignof(BPL_CharacterUtility_C_GetTypeQuery) == 0x000008, "Wrong alignment on BPL_CharacterUtility_C_GetTypeQuery");
static_assert(sizeof(BPL_CharacterUtility_C_GetTypeQuery) == 0x000038, "Wrong size on BPL_CharacterUtility_C_GetTypeQuery");
static_assert(offsetof(BPL_CharacterUtility_C_GetTypeQuery, __WorldContext) == 0x000000, "Member 'BPL_CharacterUtility_C_GetTypeQuery::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_GetTypeQuery, NewParam) == 0x000008, "Member 'BPL_CharacterUtility_C_GetTypeQuery::NewParam' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_GetTypeQuery, TypeQuerys) == 0x000018, "Member 'BPL_CharacterUtility_C_GetTypeQuery::TypeQuerys' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_GetTypeQuery, K2Node_MakeArray_Array) == 0x000028, "Member 'BPL_CharacterUtility_C_GetTypeQuery::K2Node_MakeArray_Array' has a wrong offset!");

// Function BPL_CharacterUtility.BPL_CharacterUtility_C.UpdatePhysicsClothSimulateEnable
// 0x0038 (0x0038 - 0x0000)
struct BPL_CharacterUtility_C_UpdatePhysicsClothSimulateEnable final
{
public:
	class UAnimInstance*                          AnimInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SrcSimulateEnable;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DstSimulateEnable;                                 // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     K2Node_DynamicCast_AsTs_Base_Character;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CharacterUtility_C_UpdatePhysicsClothSimulateEnable) == 0x000008, "Wrong alignment on BPL_CharacterUtility_C_UpdatePhysicsClothSimulateEnable");
static_assert(sizeof(BPL_CharacterUtility_C_UpdatePhysicsClothSimulateEnable) == 0x000038, "Wrong size on BPL_CharacterUtility_C_UpdatePhysicsClothSimulateEnable");
static_assert(offsetof(BPL_CharacterUtility_C_UpdatePhysicsClothSimulateEnable, AnimInstance) == 0x000000, "Member 'BPL_CharacterUtility_C_UpdatePhysicsClothSimulateEnable::AnimInstance' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_UpdatePhysicsClothSimulateEnable, SrcSimulateEnable) == 0x000008, "Member 'BPL_CharacterUtility_C_UpdatePhysicsClothSimulateEnable::SrcSimulateEnable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_UpdatePhysicsClothSimulateEnable, __WorldContext) == 0x000010, "Member 'BPL_CharacterUtility_C_UpdatePhysicsClothSimulateEnable::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_UpdatePhysicsClothSimulateEnable, DstSimulateEnable) == 0x000018, "Member 'BPL_CharacterUtility_C_UpdatePhysicsClothSimulateEnable::DstSimulateEnable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_UpdatePhysicsClothSimulateEnable, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000020, "Member 'BPL_CharacterUtility_C_UpdatePhysicsClothSimulateEnable::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_UpdatePhysicsClothSimulateEnable, K2Node_DynamicCast_AsTs_Base_Character) == 0x000028, "Member 'BPL_CharacterUtility_C_UpdatePhysicsClothSimulateEnable::K2Node_DynamicCast_AsTs_Base_Character' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_UpdatePhysicsClothSimulateEnable, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPL_CharacterUtility_C_UpdatePhysicsClothSimulateEnable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_UpdatePhysicsClothSimulateEnable, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BPL_CharacterUtility_C_UpdatePhysicsClothSimulateEnable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPL_CharacterUtility.BPL_CharacterUtility_C.DtGetBlockObjectType
// 0x0038 (0x0038 - 0x0000)
struct BPL_CharacterUtility_C_DtGetBlockObjectType final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      Value;                                             // 0x0008(0x0010)(Parm, OutParm)
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
};
static_assert(alignof(BPL_CharacterUtility_C_DtGetBlockObjectType) == 0x000008, "Wrong alignment on BPL_CharacterUtility_C_DtGetBlockObjectType");
static_assert(sizeof(BPL_CharacterUtility_C_DtGetBlockObjectType) == 0x000038, "Wrong size on BPL_CharacterUtility_C_DtGetBlockObjectType");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetBlockObjectType, __WorldContext) == 0x000000, "Member 'BPL_CharacterUtility_C_DtGetBlockObjectType::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetBlockObjectType, Value) == 0x000008, "Member 'BPL_CharacterUtility_C_DtGetBlockObjectType::Value' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetBlockObjectType, ObjectTypes) == 0x000018, "Member 'BPL_CharacterUtility_C_DtGetBlockObjectType::ObjectTypes' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetBlockObjectType, K2Node_MakeArray_Array) == 0x000028, "Member 'BPL_CharacterUtility_C_DtGetBlockObjectType::K2Node_MakeArray_Array' has a wrong offset!");

// Function BPL_CharacterUtility.BPL_CharacterUtility_C.DtGetAllBulletData
// 0x0768 (0x0768 - 0x0000)
struct BPL_CharacterUtility_C_DtGetAllBulletData final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSReBulletDataMain>             NewParam;                                          // 0x0010(0x0010)(Parm, OutParm)
	TArray<struct FSReBulletDataMain>             bulletDataList;                                    // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0030(0x0010)(ReferenceParm)
	int32                                         ___int_Array_Index_Variable;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSReBulletDataMain                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0058(0x06F8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_751[0x3];                                      // 0x0751(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0754(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_759[0x3];                                      // 0x0759(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x075C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_CharacterUtility_C_DtGetAllBulletData) == 0x000008, "Wrong alignment on BPL_CharacterUtility_C_DtGetAllBulletData");
static_assert(sizeof(BPL_CharacterUtility_C_DtGetAllBulletData) == 0x000768, "Wrong size on BPL_CharacterUtility_C_DtGetAllBulletData");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllBulletData, DataTable) == 0x000000, "Member 'BPL_CharacterUtility_C_DtGetAllBulletData::DataTable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllBulletData, __WorldContext) == 0x000008, "Member 'BPL_CharacterUtility_C_DtGetAllBulletData::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllBulletData, NewParam) == 0x000010, "Member 'BPL_CharacterUtility_C_DtGetAllBulletData::NewParam' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllBulletData, bulletDataList) == 0x000020, "Member 'BPL_CharacterUtility_C_DtGetAllBulletData::bulletDataList' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllBulletData, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000030, "Member 'BPL_CharacterUtility_C_DtGetAllBulletData::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllBulletData, ___int_Array_Index_Variable) == 0x000040, "Member 'BPL_CharacterUtility_C_DtGetAllBulletData::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllBulletData, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BPL_CharacterUtility_C_DtGetAllBulletData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllBulletData, CallFunc_Array_Get_Item) == 0x000048, "Member 'BPL_CharacterUtility_C_DtGetAllBulletData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllBulletData, CallFunc_GetDataTableRowFromName_OutRow) == 0x000058, "Member 'BPL_CharacterUtility_C_DtGetAllBulletData::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllBulletData, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000750, "Member 'BPL_CharacterUtility_C_DtGetAllBulletData::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllBulletData, ___int_Loop_Counter_Variable) == 0x000754, "Member 'BPL_CharacterUtility_C_DtGetAllBulletData::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllBulletData, CallFunc_Less_IntInt_ReturnValue) == 0x000758, "Member 'BPL_CharacterUtility_C_DtGetAllBulletData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllBulletData, CallFunc_Add_IntInt_ReturnValue) == 0x00075C, "Member 'BPL_CharacterUtility_C_DtGetAllBulletData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllBulletData, CallFunc_Array_Add_ReturnValue) == 0x000760, "Member 'BPL_CharacterUtility_C_DtGetAllBulletData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BPL_CharacterUtility.BPL_CharacterUtility_C.DtGetCaughtInfo
// 0x0210 (0x0210 - 0x0000)
struct BPL_CharacterUtility_C_DtGetCaughtInfo final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RowName;                                           // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSCaughtInfo                           Data;                                              // 0x0020(0x00F0)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0110(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCaughtInfo                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0118(0x00F0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CharacterUtility_C_DtGetCaughtInfo) == 0x000008, "Wrong alignment on BPL_CharacterUtility_C_DtGetCaughtInfo");
static_assert(sizeof(BPL_CharacterUtility_C_DtGetCaughtInfo) == 0x000210, "Wrong size on BPL_CharacterUtility_C_DtGetCaughtInfo");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetCaughtInfo, DataTable) == 0x000000, "Member 'BPL_CharacterUtility_C_DtGetCaughtInfo::DataTable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetCaughtInfo, RowName) == 0x000008, "Member 'BPL_CharacterUtility_C_DtGetCaughtInfo::RowName' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetCaughtInfo, __WorldContext) == 0x000018, "Member 'BPL_CharacterUtility_C_DtGetCaughtInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetCaughtInfo, Data) == 0x000020, "Member 'BPL_CharacterUtility_C_DtGetCaughtInfo::Data' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetCaughtInfo, ReturnValue) == 0x000110, "Member 'BPL_CharacterUtility_C_DtGetCaughtInfo::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetCaughtInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000118, "Member 'BPL_CharacterUtility_C_DtGetCaughtInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetCaughtInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000208, "Member 'BPL_CharacterUtility_C_DtGetCaughtInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BPL_CharacterUtility.BPL_CharacterUtility_C.DtGetVisionInfo
// 0x0210 (0x0210 - 0x0000)
struct BPL_CharacterUtility_C_DtGetVisionInfo final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RowName;                                           // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSVisionData                           Data;                                              // 0x0020(0x00F0)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0110(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSVisionData                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0118(0x00F0)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CharacterUtility_C_DtGetVisionInfo) == 0x000008, "Wrong alignment on BPL_CharacterUtility_C_DtGetVisionInfo");
static_assert(sizeof(BPL_CharacterUtility_C_DtGetVisionInfo) == 0x000210, "Wrong size on BPL_CharacterUtility_C_DtGetVisionInfo");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetVisionInfo, DataTable) == 0x000000, "Member 'BPL_CharacterUtility_C_DtGetVisionInfo::DataTable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetVisionInfo, RowName) == 0x000008, "Member 'BPL_CharacterUtility_C_DtGetVisionInfo::RowName' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetVisionInfo, __WorldContext) == 0x000018, "Member 'BPL_CharacterUtility_C_DtGetVisionInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetVisionInfo, Data) == 0x000020, "Member 'BPL_CharacterUtility_C_DtGetVisionInfo::Data' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetVisionInfo, ReturnValue) == 0x000110, "Member 'BPL_CharacterUtility_C_DtGetVisionInfo::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetVisionInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000118, "Member 'BPL_CharacterUtility_C_DtGetVisionInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetVisionInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000208, "Member 'BPL_CharacterUtility_C_DtGetVisionInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BPL_CharacterUtility.BPL_CharacterUtility_C.GetInputMovementDirection
// 0x0028 (0x0028 - 0x0000)
struct BPL_CharacterUtility_C_GetInputMovementDirection final
{
public:
	class ATsBaseCharacter_C*                     BaseChar;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementDirection                            ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Vect;                                              // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementDirection                            CallFunc_GetMonsterMoveDirection_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_CharacterUtility_C_GetInputMovementDirection) == 0x000008, "Wrong alignment on BPL_CharacterUtility_C_GetInputMovementDirection");
static_assert(sizeof(BPL_CharacterUtility_C_GetInputMovementDirection) == 0x000028, "Wrong size on BPL_CharacterUtility_C_GetInputMovementDirection");
static_assert(offsetof(BPL_CharacterUtility_C_GetInputMovementDirection, BaseChar) == 0x000000, "Member 'BPL_CharacterUtility_C_GetInputMovementDirection::BaseChar' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_GetInputMovementDirection, __WorldContext) == 0x000008, "Member 'BPL_CharacterUtility_C_GetInputMovementDirection::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_GetInputMovementDirection, ReturnValue) == 0x000010, "Member 'BPL_CharacterUtility_C_GetInputMovementDirection::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_GetInputMovementDirection, Vect) == 0x000014, "Member 'BPL_CharacterUtility_C_GetInputMovementDirection::Vect' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_GetInputMovementDirection, CallFunc_GetMonsterMoveDirection_ReturnValue) == 0x000020, "Member 'BPL_CharacterUtility_C_GetInputMovementDirection::CallFunc_GetMonsterMoveDirection_ReturnValue' has a wrong offset!");

// Function BPL_CharacterUtility.BPL_CharacterUtility_C.DtGetAllCharacterPartDatas
// 0x0178 (0x0178 - 0x0000)
struct BPL_CharacterUtility_C_DtGetAllCharacterPartDatas final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSCharacterPart>                PartArrayRef;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSCharacterPart>                CharacterPartDatas;                                // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0030(0x0010)(ReferenceParm)
	int32                                         ___int_Array_Index_Variable;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCharacterPart                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0058(0x0108)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_CharacterUtility_C_DtGetAllCharacterPartDatas) == 0x000008, "Wrong alignment on BPL_CharacterUtility_C_DtGetAllCharacterPartDatas");
static_assert(sizeof(BPL_CharacterUtility_C_DtGetAllCharacterPartDatas) == 0x000178, "Wrong size on BPL_CharacterUtility_C_DtGetAllCharacterPartDatas");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllCharacterPartDatas, DataTable) == 0x000000, "Member 'BPL_CharacterUtility_C_DtGetAllCharacterPartDatas::DataTable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllCharacterPartDatas, PartArrayRef) == 0x000008, "Member 'BPL_CharacterUtility_C_DtGetAllCharacterPartDatas::PartArrayRef' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllCharacterPartDatas, __WorldContext) == 0x000018, "Member 'BPL_CharacterUtility_C_DtGetAllCharacterPartDatas::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllCharacterPartDatas, CharacterPartDatas) == 0x000020, "Member 'BPL_CharacterUtility_C_DtGetAllCharacterPartDatas::CharacterPartDatas' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllCharacterPartDatas, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000030, "Member 'BPL_CharacterUtility_C_DtGetAllCharacterPartDatas::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllCharacterPartDatas, ___int_Array_Index_Variable) == 0x000040, "Member 'BPL_CharacterUtility_C_DtGetAllCharacterPartDatas::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllCharacterPartDatas, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BPL_CharacterUtility_C_DtGetAllCharacterPartDatas::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllCharacterPartDatas, CallFunc_Array_Get_Item) == 0x000048, "Member 'BPL_CharacterUtility_C_DtGetAllCharacterPartDatas::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllCharacterPartDatas, CallFunc_GetDataTableRowFromName_OutRow) == 0x000058, "Member 'BPL_CharacterUtility_C_DtGetAllCharacterPartDatas::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllCharacterPartDatas, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000160, "Member 'BPL_CharacterUtility_C_DtGetAllCharacterPartDatas::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllCharacterPartDatas, ___int_Loop_Counter_Variable) == 0x000164, "Member 'BPL_CharacterUtility_C_DtGetAllCharacterPartDatas::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllCharacterPartDatas, CallFunc_Less_IntInt_ReturnValue) == 0x000168, "Member 'BPL_CharacterUtility_C_DtGetAllCharacterPartDatas::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllCharacterPartDatas, CallFunc_Add_IntInt_ReturnValue) == 0x00016C, "Member 'BPL_CharacterUtility_C_DtGetAllCharacterPartDatas::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllCharacterPartDatas, CallFunc_Array_Add_ReturnValue) == 0x000170, "Member 'BPL_CharacterUtility_C_DtGetAllCharacterPartDatas::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BPL_CharacterUtility.BPL_CharacterUtility_C.DtGetAllSkillInfos
// 0x01B8 (0x01B8 - 0x0000)
struct BPL_CharacterUtility_C_DtGetAllSkillInfos final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSSkillInfo>                    NewParam;                                          // 0x0010(0x0010)(Parm, OutParm)
	TArray<struct FSSkillInfo>                    SkillInfos;                                        // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0030(0x0010)(ReferenceParm)
	int32                                         ___int_Array_Index_Variable;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSkillInfo                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0058(0x0148)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Loop_Counter_Variable;                      // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_CharacterUtility_C_DtGetAllSkillInfos) == 0x000008, "Wrong alignment on BPL_CharacterUtility_C_DtGetAllSkillInfos");
static_assert(sizeof(BPL_CharacterUtility_C_DtGetAllSkillInfos) == 0x0001B8, "Wrong size on BPL_CharacterUtility_C_DtGetAllSkillInfos");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllSkillInfos, DataTable) == 0x000000, "Member 'BPL_CharacterUtility_C_DtGetAllSkillInfos::DataTable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllSkillInfos, __WorldContext) == 0x000008, "Member 'BPL_CharacterUtility_C_DtGetAllSkillInfos::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllSkillInfos, NewParam) == 0x000010, "Member 'BPL_CharacterUtility_C_DtGetAllSkillInfos::NewParam' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllSkillInfos, SkillInfos) == 0x000020, "Member 'BPL_CharacterUtility_C_DtGetAllSkillInfos::SkillInfos' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllSkillInfos, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000030, "Member 'BPL_CharacterUtility_C_DtGetAllSkillInfos::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllSkillInfos, ___int_Array_Index_Variable) == 0x000040, "Member 'BPL_CharacterUtility_C_DtGetAllSkillInfos::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllSkillInfos, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BPL_CharacterUtility_C_DtGetAllSkillInfos::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllSkillInfos, CallFunc_Array_Get_Item) == 0x000048, "Member 'BPL_CharacterUtility_C_DtGetAllSkillInfos::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllSkillInfos, CallFunc_GetDataTableRowFromName_OutRow) == 0x000058, "Member 'BPL_CharacterUtility_C_DtGetAllSkillInfos::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllSkillInfos, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001A0, "Member 'BPL_CharacterUtility_C_DtGetAllSkillInfos::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllSkillInfos, ___int_Loop_Counter_Variable) == 0x0001A4, "Member 'BPL_CharacterUtility_C_DtGetAllSkillInfos::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllSkillInfos, CallFunc_Less_IntInt_ReturnValue) == 0x0001A8, "Member 'BPL_CharacterUtility_C_DtGetAllSkillInfos::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllSkillInfos, CallFunc_Add_IntInt_ReturnValue) == 0x0001AC, "Member 'BPL_CharacterUtility_C_DtGetAllSkillInfos::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAllSkillInfos, CallFunc_Array_Add_ReturnValue) == 0x0001B0, "Member 'BPL_CharacterUtility_C_DtGetAllSkillInfos::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BPL_CharacterUtility.BPL_CharacterUtility_C.DtGetNewBulletData
// 0x0E20 (0x0E20 - 0x0000)
struct BPL_CharacterUtility_C_DtGetNewBulletData final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RowName;                                           // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSReBulletDataMain                     Data;                                              // 0x0020(0x06F8)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0718(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_719[0x7];                                      // 0x0719(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSReBulletDataMain                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0720(0x06F8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0E18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CharacterUtility_C_DtGetNewBulletData) == 0x000008, "Wrong alignment on BPL_CharacterUtility_C_DtGetNewBulletData");
static_assert(sizeof(BPL_CharacterUtility_C_DtGetNewBulletData) == 0x000E20, "Wrong size on BPL_CharacterUtility_C_DtGetNewBulletData");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetNewBulletData, DataTable) == 0x000000, "Member 'BPL_CharacterUtility_C_DtGetNewBulletData::DataTable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetNewBulletData, RowName) == 0x000008, "Member 'BPL_CharacterUtility_C_DtGetNewBulletData::RowName' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetNewBulletData, __WorldContext) == 0x000018, "Member 'BPL_CharacterUtility_C_DtGetNewBulletData::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetNewBulletData, Data) == 0x000020, "Member 'BPL_CharacterUtility_C_DtGetNewBulletData::Data' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetNewBulletData, ReturnValue) == 0x000718, "Member 'BPL_CharacterUtility_C_DtGetNewBulletData::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetNewBulletData, CallFunc_GetDataTableRowFromName_OutRow) == 0x000720, "Member 'BPL_CharacterUtility_C_DtGetNewBulletData::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetNewBulletData, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000E18, "Member 'BPL_CharacterUtility_C_DtGetNewBulletData::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BPL_CharacterUtility.BPL_CharacterUtility_C.DtGetEffectData
// 0x0050 (0x0050 - 0x0000)
struct BPL_CharacterUtility_C_DtGetEffectData final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RowName;                                           // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSEffectData                           Data;                                              // 0x0020(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSEffectData                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CharacterUtility_C_DtGetEffectData) == 0x000008, "Wrong alignment on BPL_CharacterUtility_C_DtGetEffectData");
static_assert(sizeof(BPL_CharacterUtility_C_DtGetEffectData) == 0x000050, "Wrong size on BPL_CharacterUtility_C_DtGetEffectData");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetEffectData, DataTable) == 0x000000, "Member 'BPL_CharacterUtility_C_DtGetEffectData::DataTable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetEffectData, RowName) == 0x000008, "Member 'BPL_CharacterUtility_C_DtGetEffectData::RowName' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetEffectData, __WorldContext) == 0x000018, "Member 'BPL_CharacterUtility_C_DtGetEffectData::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetEffectData, Data) == 0x000020, "Member 'BPL_CharacterUtility_C_DtGetEffectData::Data' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetEffectData, ReturnValue) == 0x000030, "Member 'BPL_CharacterUtility_C_DtGetEffectData::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetEffectData, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'BPL_CharacterUtility_C_DtGetEffectData::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetEffectData, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000048, "Member 'BPL_CharacterUtility_C_DtGetEffectData::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BPL_CharacterUtility.BPL_CharacterUtility_C.DtGetAttributeModifierData
// 0x00B0 (0x00B0 - 0x0000)
struct BPL_CharacterUtility_C_DtGetAttributeModifierData final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RowName;                                           // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSAttributeModifierData                Data;                                              // 0x0020(0x0040)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSAttributeModifierData                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0068(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CharacterUtility_C_DtGetAttributeModifierData) == 0x000008, "Wrong alignment on BPL_CharacterUtility_C_DtGetAttributeModifierData");
static_assert(sizeof(BPL_CharacterUtility_C_DtGetAttributeModifierData) == 0x0000B0, "Wrong size on BPL_CharacterUtility_C_DtGetAttributeModifierData");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAttributeModifierData, DataTable) == 0x000000, "Member 'BPL_CharacterUtility_C_DtGetAttributeModifierData::DataTable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAttributeModifierData, RowName) == 0x000008, "Member 'BPL_CharacterUtility_C_DtGetAttributeModifierData::RowName' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAttributeModifierData, __WorldContext) == 0x000018, "Member 'BPL_CharacterUtility_C_DtGetAttributeModifierData::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAttributeModifierData, Data) == 0x000020, "Member 'BPL_CharacterUtility_C_DtGetAttributeModifierData::Data' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAttributeModifierData, ReturnValue) == 0x000060, "Member 'BPL_CharacterUtility_C_DtGetAttributeModifierData::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAttributeModifierData, CallFunc_GetDataTableRowFromName_OutRow) == 0x000068, "Member 'BPL_CharacterUtility_C_DtGetAttributeModifierData::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetAttributeModifierData, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A8, "Member 'BPL_CharacterUtility_C_DtGetAttributeModifierData::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BPL_CharacterUtility.BPL_CharacterUtility_C.DtGetSkillInfo
// 0x02C0 (0x02C0 - 0x0000)
struct BPL_CharacterUtility_C_DtGetSkillInfo final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RowName;                                           // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSSkillInfo                            Data;                                              // 0x0020(0x0148)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0168(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSkillInfo                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0170(0x0148)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CharacterUtility_C_DtGetSkillInfo) == 0x000008, "Wrong alignment on BPL_CharacterUtility_C_DtGetSkillInfo");
static_assert(sizeof(BPL_CharacterUtility_C_DtGetSkillInfo) == 0x0002C0, "Wrong size on BPL_CharacterUtility_C_DtGetSkillInfo");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetSkillInfo, DataTable) == 0x000000, "Member 'BPL_CharacterUtility_C_DtGetSkillInfo::DataTable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetSkillInfo, RowName) == 0x000008, "Member 'BPL_CharacterUtility_C_DtGetSkillInfo::RowName' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetSkillInfo, __WorldContext) == 0x000018, "Member 'BPL_CharacterUtility_C_DtGetSkillInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetSkillInfo, Data) == 0x000020, "Member 'BPL_CharacterUtility_C_DtGetSkillInfo::Data' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetSkillInfo, ReturnValue) == 0x000168, "Member 'BPL_CharacterUtility_C_DtGetSkillInfo::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetSkillInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000170, "Member 'BPL_CharacterUtility_C_DtGetSkillInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetSkillInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002B8, "Member 'BPL_CharacterUtility_C_DtGetSkillInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetSkillInfo, CallFunc_IsValid_ReturnValue) == 0x0002B9, "Member 'BPL_CharacterUtility_C_DtGetSkillInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPL_CharacterUtility.BPL_CharacterUtility_C.DtGetDamageData
// 0x0038 (0x0038 - 0x0000)
struct BPL_CharacterUtility_C_DtGetDamageData final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RowName;                                           // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSDamageData                           Data;                                              // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSDamageData                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CharacterUtility_C_DtGetDamageData) == 0x000008, "Wrong alignment on BPL_CharacterUtility_C_DtGetDamageData");
static_assert(sizeof(BPL_CharacterUtility_C_DtGetDamageData) == 0x000038, "Wrong size on BPL_CharacterUtility_C_DtGetDamageData");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetDamageData, DataTable) == 0x000000, "Member 'BPL_CharacterUtility_C_DtGetDamageData::DataTable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetDamageData, RowName) == 0x000008, "Member 'BPL_CharacterUtility_C_DtGetDamageData::RowName' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetDamageData, __WorldContext) == 0x000018, "Member 'BPL_CharacterUtility_C_DtGetDamageData::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetDamageData, Data) == 0x000020, "Member 'BPL_CharacterUtility_C_DtGetDamageData::Data' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetDamageData, ReturnValue) == 0x000028, "Member 'BPL_CharacterUtility_C_DtGetDamageData::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetDamageData, CallFunc_GetDataTableRowFromName_OutRow) == 0x00002C, "Member 'BPL_CharacterUtility_C_DtGetDamageData::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetDamageData, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000034, "Member 'BPL_CharacterUtility_C_DtGetDamageData::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BPL_CharacterUtility.BPL_CharacterUtility_C.DtGetHitEffect
// 0x0168 (0x0168 - 0x0000)
struct BPL_CharacterUtility_C_DtGetHitEffect final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RowName;                                           // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSHitEffect                            backData;                                          // 0x0014(0x00A0)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSHitEffect                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x00C4(0x00A0)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CharacterUtility_C_DtGetHitEffect) == 0x000008, "Wrong alignment on BPL_CharacterUtility_C_DtGetHitEffect");
static_assert(sizeof(BPL_CharacterUtility_C_DtGetHitEffect) == 0x000168, "Wrong size on BPL_CharacterUtility_C_DtGetHitEffect");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetHitEffect, DataTable) == 0x000000, "Member 'BPL_CharacterUtility_C_DtGetHitEffect::DataTable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetHitEffect, RowName) == 0x000008, "Member 'BPL_CharacterUtility_C_DtGetHitEffect::RowName' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetHitEffect, backData) == 0x000014, "Member 'BPL_CharacterUtility_C_DtGetHitEffect::backData' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetHitEffect, __WorldContext) == 0x0000B8, "Member 'BPL_CharacterUtility_C_DtGetHitEffect::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetHitEffect, ReturnValue) == 0x0000C0, "Member 'BPL_CharacterUtility_C_DtGetHitEffect::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetHitEffect, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000C4, "Member 'BPL_CharacterUtility_C_DtGetHitEffect::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetHitEffect, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000164, "Member 'BPL_CharacterUtility_C_DtGetHitEffect::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BPL_CharacterUtility.BPL_CharacterUtility_C.DtGetBulletData
// 0x05B0 (0x05B0 - 0x0000)
struct BPL_CharacterUtility_C_DtGetBulletData final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RowName;                                           // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSBulletDataMain                       Data;                                              // 0x0020(0x02C0)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x02E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBulletDataMain                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x02E8(0x02C0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CharacterUtility_C_DtGetBulletData) == 0x000008, "Wrong alignment on BPL_CharacterUtility_C_DtGetBulletData");
static_assert(sizeof(BPL_CharacterUtility_C_DtGetBulletData) == 0x0005B0, "Wrong size on BPL_CharacterUtility_C_DtGetBulletData");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetBulletData, DataTable) == 0x000000, "Member 'BPL_CharacterUtility_C_DtGetBulletData::DataTable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetBulletData, RowName) == 0x000008, "Member 'BPL_CharacterUtility_C_DtGetBulletData::RowName' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetBulletData, __WorldContext) == 0x000018, "Member 'BPL_CharacterUtility_C_DtGetBulletData::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetBulletData, Data) == 0x000020, "Member 'BPL_CharacterUtility_C_DtGetBulletData::Data' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetBulletData, ReturnValue) == 0x0002E0, "Member 'BPL_CharacterUtility_C_DtGetBulletData::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetBulletData, CallFunc_GetDataTableRowFromName_OutRow) == 0x0002E8, "Member 'BPL_CharacterUtility_C_DtGetBulletData::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetBulletData, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0005A8, "Member 'BPL_CharacterUtility_C_DtGetBulletData::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BPL_CharacterUtility.BPL_CharacterUtility_C.DtGetMovementSettings
// 0x0CA0 (0x0CA0 - 0x0000)
struct BPL_CharacterUtility_C_DtGetMovementSettings final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RowName;                                           // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSMovementSetting_State                Data;                                              // 0x0020(0x0638)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0658(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_659[0x7];                                      // 0x0659(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSMovementSetting_State                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0660(0x0638)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0C98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CharacterUtility_C_DtGetMovementSettings) == 0x000008, "Wrong alignment on BPL_CharacterUtility_C_DtGetMovementSettings");
static_assert(sizeof(BPL_CharacterUtility_C_DtGetMovementSettings) == 0x000CA0, "Wrong size on BPL_CharacterUtility_C_DtGetMovementSettings");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetMovementSettings, DataTable) == 0x000000, "Member 'BPL_CharacterUtility_C_DtGetMovementSettings::DataTable' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetMovementSettings, RowName) == 0x000008, "Member 'BPL_CharacterUtility_C_DtGetMovementSettings::RowName' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetMovementSettings, __WorldContext) == 0x000018, "Member 'BPL_CharacterUtility_C_DtGetMovementSettings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetMovementSettings, Data) == 0x000020, "Member 'BPL_CharacterUtility_C_DtGetMovementSettings::Data' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetMovementSettings, ReturnValue) == 0x000658, "Member 'BPL_CharacterUtility_C_DtGetMovementSettings::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetMovementSettings, CallFunc_GetDataTableRowFromName_OutRow) == 0x000660, "Member 'BPL_CharacterUtility_C_DtGetMovementSettings::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_DtGetMovementSettings, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000C98, "Member 'BPL_CharacterUtility_C_DtGetMovementSettings::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BPL_CharacterUtility.BPL_CharacterUtility_C.GetLocalWind
// 0x0070 (0x0070 - 0x0000)
struct BPL_CharacterUtility_C_GetLocalWind final
{
public:
	class UAnimInstance*                          AnimInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalWind;                                         // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_CharacterUtility_C_GetLocalWind) == 0x000010, "Wrong alignment on BPL_CharacterUtility_C_GetLocalWind");
static_assert(sizeof(BPL_CharacterUtility_C_GetLocalWind) == 0x000070, "Wrong size on BPL_CharacterUtility_C_GetLocalWind");
static_assert(offsetof(BPL_CharacterUtility_C_GetLocalWind, AnimInstance) == 0x000000, "Member 'BPL_CharacterUtility_C_GetLocalWind::AnimInstance' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_GetLocalWind, __WorldContext) == 0x000008, "Member 'BPL_CharacterUtility_C_GetLocalWind::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_GetLocalWind, LocalWind) == 0x000010, "Member 'BPL_CharacterUtility_C_GetLocalWind::LocalWind' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_GetLocalWind, CallFunc_GetOwningComponent_ReturnValue) == 0x000020, "Member 'BPL_CharacterUtility_C_GetLocalWind::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_GetLocalWind, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'BPL_CharacterUtility_C_GetLocalWind::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharacterUtility_C_GetLocalWind, CallFunc_InverseTransformDirection_ReturnValue) == 0x000060, "Member 'BPL_CharacterUtility_C_GetLocalWind::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");

}

