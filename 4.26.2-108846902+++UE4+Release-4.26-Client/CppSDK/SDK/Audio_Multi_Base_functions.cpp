#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Audio_Multi_Base

#include "Basic.hpp"

#include "Audio_Multi_Base_classes.hpp"
#include "Audio_Multi_Base_parameters.hpp"


namespace SDK
{

// Function Audio_Multi_Base.Audio_Multi_Base_C.ExecuteUbergraph_Audio_Multi_Base
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAudio_Multi_Base_C::ExecuteUbergraph_Audio_Multi_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Audio_Multi_Base_C", "ExecuteUbergraph_Audio_Multi_Base");

	Params::Audio_Multi_Base_C_ExecuteUbergraph_Audio_Multi_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Audio_Multi_Base.Audio_Multi_Base_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAudio_Multi_Base_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Audio_Multi_Base_C", "ReceiveEndPlay");

	Params::Audio_Multi_Base_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Audio_Multi_Base.Audio_Multi_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AAudio_Multi_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Audio_Multi_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Audio_Multi_Base.Audio_Multi_Base_C.ïÆ
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AAudio_Multi_Base_C::___()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Audio_Multi_Base_C", "ïÆ");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Audio_Multi_Base.Audio_Multi_Base_C.9n…„)>pÏàP
// (Public, BlueprintCallable, BlueprintEvent)

void AAudio_Multi_Base_C::Ninen____p__P()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Audio_Multi_Base_C", "9n…„)>pÏàP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Audio_Multi_Base.Audio_Multi_Base_C.AÝ»¡—
// (Public, BlueprintCallable, BlueprintEvent)

void AAudio_Multi_Base_C::A_____()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Audio_Multi_Base_C", "AÝ»¡—");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Audio_Multi_Base.Audio_Multi_Base_C.dïÆ
// (Public, BlueprintCallable, BlueprintEvent)

void AAudio_Multi_Base_C::_d___()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Audio_Multi_Base_C", "dïÆ");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Audio_Multi_Base.Audio_Multi_Base_C.Play
// (Public, BlueprintCallable, BlueprintEvent)

void AAudio_Multi_Base_C::Play()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Audio_Multi_Base_C", "Play");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Audio_Multi_Base.Audio_Multi_Base_C.Stop
// (Public, BlueprintCallable, BlueprintEvent)

void AAudio_Multi_Base_C::Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Audio_Multi_Base_C", "Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Audio_Multi_Base.Audio_Multi_Base_C.pÏJ„)>àP¡—
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   P_J_                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAudio_Multi_Base_C::P_J____P__(float* P_J_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Audio_Multi_Base_C", "pÏJ„)>àP¡—");

	Params::Audio_Multi_Base_C_P_J____P__ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (P_J_ != nullptr)
		*P_J_ = Parms.P_J_;
}


// Function Audio_Multi_Base.Audio_Multi_Base_C.Sp
// (Public, BlueprintCallable, BlueprintEvent)

void AAudio_Multi_Base_C::Sp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Audio_Multi_Base_C", "Sp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Audio_Multi_Base.Audio_Multi_Base_C.·Ö-Ã¹
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Minus__                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAudio_Multi_Base_C::__Minus___0(struct FVector* Minus__)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Audio_Multi_Base_C", "·Ö-Ã¹");

	Params::Audio_Multi_Base_C___Minus__ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Minus__ != nullptr)
		*Minus__ = std::move(Parms.Minus__);
}


// Function Audio_Multi_Base.Audio_Multi_Base_C.>:AÝ»
// (Public, BlueprintCallable, BlueprintEvent)

void AAudio_Multi_Base_C::__A___()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Audio_Multi_Base_C", ">:AÝ»");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Audio_Multi_Base.Audio_Multi_Base_C.Í¾-Ã¹
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AAudio_Multi_Base_C::__Minus__()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Audio_Multi_Base_C", "Í¾-Ã¹");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Audio_Multi_Base.Audio_Multi_Base_C.GamePlay
// (Public, BlueprintCallable, BlueprintEvent)

void AAudio_Multi_Base_C::GamePlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Audio_Multi_Base_C", "GamePlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Audio_Multi_Base.Audio_Multi_Base_C.Show
// (Public, BlueprintCallable, BlueprintEvent)

void AAudio_Multi_Base_C::Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Audio_Multi_Base_C", "Show");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Audio_Multi_Base.Audio_Multi_Base_C.Hide
// (Public, BlueprintCallable, BlueprintEvent)

void AAudio_Multi_Base_C::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Audio_Multi_Base_C", "Hide");

	UObject::ProcessEvent(Func, nullptr);
}

}

