#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsMeshAnimBlueprintFunctionLibrary

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// TypeScriptGeneratedClass TsMeshAnimBlueprintFunctionLibrary.TsMeshAnimBlueprintFunctionLibrary_C
// 0x0000 (0x0030 - 0x0030)
class UTsMeshAnimBlueprintFunctionLibrary_C final : public UBlueprintFunctionLibrary
{
public:
	static struct FVector GetSightDirect(int32 EntityId, class UObject* __WorldContext);
	static class UMeshComponent* GetHulu(int32 EntityId, class UObject* __WorldContext);
	static float GetBattleIdleTime(int32 EntityId, class UObject* __WorldContext);
	static void EnterBattleIdle(int32 EntityId, class UObject* __WorldContext);
	static void HideWeaponsWhenHideBones(int32 EntityId, bool Hide, class FName SocketName, class UObject* __WorldContext);
	static int32 GetCurrentWeaponHangState(int32 EntityId, class UObject* __WorldContext);
	static void ChangeWeapon(int32 EntityId, const struct FSWeaponSocketItem& WeaponSocket, class UObject* __WorldContext);
	static float GetRandomStandActionIndex(int32 EntityId, class UObject* __WorldContext);
	static void HideWeapon(int32 EntityId, bool Hide, int32 Param_Index, bool HideEffect, bool UseHighPriority, class UObject* __WorldContext);
	static void HideHulu(int32 EntityId, bool bHidden, class UObject* __WorldContext);
	static void ChangeMeshAnim(int32 EntityId, class USkeletalMesh* MeshClass, class UClass* AnimBlueprintClass, class UObject* __WorldContext);
	static float GetDegMovementSlope(int32 EntityId, class UObject* __WorldContext);
	static class FString GetRoleFootStepState(int32 EntityId, class UObject* __WorldContext);
	static void SetIkMeshOffset(int32 EntityId, float Offset, class UObject* __WorldContext);
	static float GetWeaponBreachLevel(int32 EntityId, class UObject* __WorldContext);
	static void SetTransformWithModelBuffer(int32 EntityId, const struct FTransform& Transform, float TimeLength, class UObject* __WorldContext);
	static void SetSightDirectEnable(int32 EntityId, bool V, class UObject* __WorldContext);
	static class UAnimInstance* MainAnimInstance(int32 EntityId, class UObject* __WorldContext);
	static void UpdateAnimInfoMeshAnim(int32 EntityId, class UBP_ABPLogicParams_C* AnimLogicParams, class UObject* __WorldContext);
	static void UpdateAnimInfoMeshAnimRoleNpc(int32 EntityId, class UBP_ABPLogicParams_C* AnimLogicParams, class UObject* __WorldContext);
	static void ChangeWeaponHangState(int32 EntityId, int32 WeaponState, float LerpTime, TArray<class FName>& Sockets, TArray<struct FTransform>& Transforms, class UObject* __WorldContext);
	static void ChangeTickOverlap(int32 EntityId, bool Overlap, class UObject* __WorldContext);
	static bool GetIsCurrentWeaponHideEffectPlaying(int32 EntityId, class UObject* __WorldContext);
	static void UpdateFootstepAudioEvent(int32 EntityId, int32 _r__EntityId, const struct FSFootstepAudioEventParam& Params_0, class UObject* __WorldContext);
	static void AnimTurnLog(int32 EntityId, class UObject* __WorldContext);
	static bool IsNpcTurning(int32 EntityId, class UObject* __WorldContext);
	static void EnableTickUro(int32 EntityId, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TsMeshAnimBlueprintFunctionLibrary_C">();
	}
	static class UTsMeshAnimBlueprintFunctionLibrary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTsMeshAnimBlueprintFunctionLibrary_C>();
	}
};
static_assert(alignof(UTsMeshAnimBlueprintFunctionLibrary_C) == 0x000008, "Wrong alignment on UTsMeshAnimBlueprintFunctionLibrary_C");
static_assert(sizeof(UTsMeshAnimBlueprintFunctionLibrary_C) == 0x000030, "Wrong size on UTsMeshAnimBlueprintFunctionLibrary_C");

}

