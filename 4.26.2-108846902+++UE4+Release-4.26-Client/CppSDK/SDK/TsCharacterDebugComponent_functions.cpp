#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsCharacterDebugComponent

#include "Basic.hpp"

#include "TsCharacterDebugComponent_classes.hpp"
#include "TsCharacterDebugComponent_parameters.hpp"


namespace SDK
{

// Function TsCharacterDebugComponent.TsCharacterDebugComponent_C.ExecuteUbergraph_TsCharacterDebugComponent
// (Final, Native, UbergraphFunction, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsCharacterDebugComponent_C::ExecuteUbergraph_TsCharacterDebugComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsCharacterDebugComponent_C", "ExecuteUbergraph_TsCharacterDebugComponent");

	Params::TsCharacterDebugComponent_C_ExecuteUbergraph_TsCharacterDebugComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TsCharacterDebugComponent.TsCharacterDebugComponent_C.ReceiveTick
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsCharacterDebugComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsCharacterDebugComponent_C", "ReceiveTick");

	Params::TsCharacterDebugComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TsCharacterDebugComponent.TsCharacterDebugComponent_C.ReceiveBeginPlay
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UTsCharacterDebugComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsCharacterDebugComponent_C", "ReceiveBeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TsCharacterDebugComponent.TsCharacterDebugComponent_C.ActivateDebugSpeed
// (Native, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Activate                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UTsCharacterDebugComponent_C::ActivateDebugSpeed(bool Param_Activate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsCharacterDebugComponent_C", "ActivateDebugSpeed");

	Params::TsCharacterDebugComponent_C_ActivateDebugSpeed Parms{};

	Parms.Param_Activate = Param_Activate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TsCharacterDebugComponent.TsCharacterDebugComponent_C.DebugDrawActivateArea
// (Native, Public, BlueprintCallable, BlueprintEvent)

void UTsCharacterDebugComponent_C::DebugDrawActivateArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsCharacterDebugComponent_C", "DebugDrawActivateArea");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TsCharacterDebugComponent.TsCharacterDebugComponent_C.ChangeNoTop
// (Native, Public, BlueprintCallable, BlueprintEvent)

void UTsCharacterDebugComponent_C::ChangeNoTop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsCharacterDebugComponent_C", "ChangeNoTop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TsCharacterDebugComponent.TsCharacterDebugComponent_C.ChangeEnterClimbTrace
// (Native, Public, BlueprintCallable, BlueprintEvent)

void UTsCharacterDebugComponent_C::ChangeEnterClimbTrace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsCharacterDebugComponent_C", "ChangeEnterClimbTrace");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TsCharacterDebugComponent.TsCharacterDebugComponent_C.ChangeVaultClimbTrace
// (Native, Public, BlueprintCallable, BlueprintEvent)

void UTsCharacterDebugComponent_C::ChangeVaultClimbTrace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsCharacterDebugComponent_C", "ChangeVaultClimbTrace");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TsCharacterDebugComponent.TsCharacterDebugComponent_C.ChangeUpArriveClimbTrace
// (Native, Public, BlueprintCallable, BlueprintEvent)

void UTsCharacterDebugComponent_C::ChangeUpArriveClimbTrace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsCharacterDebugComponent_C", "ChangeUpArriveClimbTrace");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TsCharacterDebugComponent.TsCharacterDebugComponent_C.ChangeClimbingTrace
// (Native, Public, BlueprintCallable, BlueprintEvent)

void UTsCharacterDebugComponent_C::ChangeClimbingTrace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsCharacterDebugComponent_C", "ChangeClimbingTrace");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TsCharacterDebugComponent.TsCharacterDebugComponent_C.SetDebugRiseEnable
// (Native, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)

void UTsCharacterDebugComponent_C::SetDebugRiseEnable(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsCharacterDebugComponent_C", "SetDebugRiseEnable");

	Params::TsCharacterDebugComponent_C_SetDebugRiseEnable Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TsCharacterDebugComponent.TsCharacterDebugComponent_C.DrawDebugPatrolPoints
// (Native, Public, BlueprintCallable, BlueprintEvent)

void UTsCharacterDebugComponent_C::DrawDebugPatrolPoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsCharacterDebugComponent_C", "DrawDebugPatrolPoints");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TsCharacterDebugComponent.TsCharacterDebugComponent_C.DrawErrorNavigationPaths
// (Native, Public, BlueprintCallable, BlueprintEvent)

void UTsCharacterDebugComponent_C::DrawErrorNavigationPaths()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsCharacterDebugComponent_C", "DrawErrorNavigationPaths");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TsCharacterDebugComponent.TsCharacterDebugComponent_C.SetMovementDebug
// (Native, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewDebug                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UTsCharacterDebugComponent_C::SetMovementDebug(bool NewDebug)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsCharacterDebugComponent_C", "SetMovementDebug");

	Params::TsCharacterDebugComponent_C_SetMovementDebug Parms{};

	Parms.NewDebug = NewDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TsCharacterDebugComponent.TsCharacterDebugComponent_C.AiDebugDraw
// (Native, Public, BlueprintCallable, BlueprintEvent)

void UTsCharacterDebugComponent_C::AiDebugDraw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsCharacterDebugComponent_C", "AiDebugDraw");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

