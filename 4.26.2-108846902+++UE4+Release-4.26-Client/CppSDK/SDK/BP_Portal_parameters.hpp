#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Portal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Portal.BP_Portal_C.ExecuteUbergraph_BP_Portal
// 0x0048 (0x0048 - 0x0000)
struct BP_Portal_C_ExecuteUbergraph_BP_Portal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdatePortalAnimation_OutputCounter;      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdatePortalAnimation_Factor;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_UpdatePortalAnimation_OutputCounter_1;    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdatePortalAnimation_Factor_1;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_1;         // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_ExecuteUbergraph_BP_Portal) == 0x000004, "Wrong alignment on BP_Portal_C_ExecuteUbergraph_BP_Portal");
static_assert(sizeof(BP_Portal_C_ExecuteUbergraph_BP_Portal) == 0x000048, "Wrong size on BP_Portal_C_ExecuteUbergraph_BP_Portal");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, EntryPoint) == 0x000000, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, CallFunc_UpdatePortalAnimation_OutputCounter) == 0x000004, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::CallFunc_UpdatePortalAnimation_OutputCounter' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, CallFunc_UpdatePortalAnimation_Factor) == 0x000008, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::CallFunc_UpdatePortalAnimation_Factor' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000014, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, CallFunc_IsValid_ReturnValue_1) == 0x000022, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, CallFunc_UpdatePortalAnimation_OutputCounter_1) == 0x000024, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::CallFunc_UpdatePortalAnimation_OutputCounter_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, CallFunc_UpdatePortalAnimation_Factor_1) == 0x000028, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::CallFunc_UpdatePortalAnimation_Factor_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000030, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000034, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, CallFunc_Conv_FloatToVector_ReturnValue_1) == 0x000038, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::CallFunc_Conv_FloatToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, K2Node_Event_DeltaSeconds) == 0x000044, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Portal_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Portal_C_ReceiveTick");
static_assert(sizeof(BP_Portal_C_ReceiveTick) == 0x000004, "Wrong size on BP_Portal_C_ReceiveTick");
static_assert(offsetof(BP_Portal_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Portal_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.1
// 0x0030 (0x0030 - 0x0000)
struct BP_Portal_C_One final
{
public:
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_One) == 0x000010, "Wrong alignment on BP_Portal_C_One");
static_assert(sizeof(BP_Portal_C_One) == 0x000030, "Wrong size on BP_Portal_C_One");
static_assert(offsetof(BP_Portal_C_One, CallFunc_GetTransform_ReturnValue) == 0x000000, "Member 'BP_Portal_C_One::CallFunc_GetTransform_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.SetPortal1Transform
// 0x0180 (0x0180 - 0x0000)
struct BP_Portal_C_SetPortal1Transform final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             CaptureTransform;                                  // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x00E0(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Portal_C_SetPortal1Transform) == 0x000010, "Wrong alignment on BP_Portal_C_SetPortal1Transform");
static_assert(sizeof(BP_Portal_C_SetPortal1Transform) == 0x000180, "Wrong size on BP_Portal_C_SetPortal1Transform");
static_assert(offsetof(BP_Portal_C_SetPortal1Transform, Transform) == 0x000000, "Member 'BP_Portal_C_SetPortal1Transform::Transform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal1Transform, CaptureTransform) == 0x000030, "Member 'BP_Portal_C_SetPortal1Transform::CaptureTransform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal1Transform, CallFunc_BreakTransform_Location) == 0x000060, "Member 'BP_Portal_C_SetPortal1Transform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal1Transform, CallFunc_BreakTransform_Rotation) == 0x00006C, "Member 'BP_Portal_C_SetPortal1Transform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal1Transform, CallFunc_BreakTransform_Scale) == 0x000078, "Member 'BP_Portal_C_SetPortal1Transform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal1Transform, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000084, "Member 'BP_Portal_C_SetPortal1Transform::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal1Transform, CallFunc_BreakRotator_Roll) == 0x000090, "Member 'BP_Portal_C_SetPortal1Transform::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal1Transform, CallFunc_BreakRotator_Pitch) == 0x000094, "Member 'BP_Portal_C_SetPortal1Transform::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal1Transform, CallFunc_BreakRotator_Yaw) == 0x000098, "Member 'BP_Portal_C_SetPortal1Transform::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal1Transform, CallFunc_MakeRotator_ReturnValue) == 0x00009C, "Member 'BP_Portal_C_SetPortal1Transform::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal1Transform, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'BP_Portal_C_SetPortal1Transform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal1Transform, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0000E0, "Member 'BP_Portal_C_SetPortal1Transform::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.SetPortal2Transform
// 0x0180 (0x0180 - 0x0000)
struct BP_Portal_C_SetPortal2Transform final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             CaptureTransform;                                  // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x00E0(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Portal_C_SetPortal2Transform) == 0x000010, "Wrong alignment on BP_Portal_C_SetPortal2Transform");
static_assert(sizeof(BP_Portal_C_SetPortal2Transform) == 0x000180, "Wrong size on BP_Portal_C_SetPortal2Transform");
static_assert(offsetof(BP_Portal_C_SetPortal2Transform, Transform) == 0x000000, "Member 'BP_Portal_C_SetPortal2Transform::Transform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal2Transform, CaptureTransform) == 0x000030, "Member 'BP_Portal_C_SetPortal2Transform::CaptureTransform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal2Transform, CallFunc_BreakTransform_Location) == 0x000060, "Member 'BP_Portal_C_SetPortal2Transform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal2Transform, CallFunc_BreakTransform_Rotation) == 0x00006C, "Member 'BP_Portal_C_SetPortal2Transform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal2Transform, CallFunc_BreakTransform_Scale) == 0x000078, "Member 'BP_Portal_C_SetPortal2Transform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal2Transform, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000084, "Member 'BP_Portal_C_SetPortal2Transform::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal2Transform, CallFunc_BreakRotator_Roll) == 0x000090, "Member 'BP_Portal_C_SetPortal2Transform::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal2Transform, CallFunc_BreakRotator_Pitch) == 0x000094, "Member 'BP_Portal_C_SetPortal2Transform::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal2Transform, CallFunc_BreakRotator_Yaw) == 0x000098, "Member 'BP_Portal_C_SetPortal2Transform::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal2Transform, CallFunc_MakeRotator_ReturnValue) == 0x00009C, "Member 'BP_Portal_C_SetPortal2Transform::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal2Transform, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'BP_Portal_C_SetPortal2Transform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal2Transform, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0000E0, "Member 'BP_Portal_C_SetPortal2Transform::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.EnablePortal2Rendering
// 0x0010 (0x0010 - 0x0000)
struct BP_Portal_C_EnablePortal2Rendering final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_EnablePortal2Rendering) == 0x000008, "Wrong alignment on BP_Portal_C_EnablePortal2Rendering");
static_assert(sizeof(BP_Portal_C_EnablePortal2Rendering) == 0x000010, "Wrong size on BP_Portal_C_EnablePortal2Rendering");
static_assert(offsetof(BP_Portal_C_EnablePortal2Rendering, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_Portal_C_EnablePortal2Rendering::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_EnablePortal2Rendering, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_Portal_C_EnablePortal2Rendering::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.DisablePortal2Rendering
// 0x0001 (0x0001 - 0x0000)
struct BP_Portal_C_DisablePortal2Rendering final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_DisablePortal2Rendering) == 0x000001, "Wrong alignment on BP_Portal_C_DisablePortal2Rendering");
static_assert(sizeof(BP_Portal_C_DisablePortal2Rendering) == 0x000001, "Wrong size on BP_Portal_C_DisablePortal2Rendering");
static_assert(offsetof(BP_Portal_C_DisablePortal2Rendering, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_Portal_C_DisablePortal2Rendering::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.EnablePortal1Rendering
// 0x0010 (0x0010 - 0x0000)
struct BP_Portal_C_EnablePortal1Rendering final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_EnablePortal1Rendering) == 0x000008, "Wrong alignment on BP_Portal_C_EnablePortal1Rendering");
static_assert(sizeof(BP_Portal_C_EnablePortal1Rendering) == 0x000010, "Wrong size on BP_Portal_C_EnablePortal1Rendering");
static_assert(offsetof(BP_Portal_C_EnablePortal1Rendering, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_Portal_C_EnablePortal1Rendering::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_EnablePortal1Rendering, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'BP_Portal_C_EnablePortal1Rendering::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.2
// 0x0030 (0x0030 - 0x0000)
struct BP_Portal_C_Two final
{
public:
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_Two) == 0x000010, "Wrong alignment on BP_Portal_C_Two");
static_assert(sizeof(BP_Portal_C_Two) == 0x000030, "Wrong size on BP_Portal_C_Two");
static_assert(offsetof(BP_Portal_C_Two, CallFunc_GetTransform_ReturnValue) == 0x000000, "Member 'BP_Portal_C_Two::CallFunc_GetTransform_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.UpdatePortalAnimation
// 0x0060 (0x0060 - 0x0000)
struct BP_Portal_C_UpdatePortalAnimation final
{
public:
	float                                         ShowLen;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeLen;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShown;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            ShowCurve;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            FadeCurve;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Counter;                                           // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   SM;                                                // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DMI;                                               // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutputCounter;                                     // 0x0038(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Factor;                                            // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_UpdatePortalAnimation) == 0x000008, "Wrong alignment on BP_Portal_C_UpdatePortalAnimation");
static_assert(sizeof(BP_Portal_C_UpdatePortalAnimation) == 0x000060, "Wrong size on BP_Portal_C_UpdatePortalAnimation");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, ShowLen) == 0x000000, "Member 'BP_Portal_C_UpdatePortalAnimation::ShowLen' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, FadeLen) == 0x000004, "Member 'BP_Portal_C_UpdatePortalAnimation::FadeLen' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, IsShown) == 0x000008, "Member 'BP_Portal_C_UpdatePortalAnimation::IsShown' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, ShowCurve) == 0x000010, "Member 'BP_Portal_C_UpdatePortalAnimation::ShowCurve' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, FadeCurve) == 0x000018, "Member 'BP_Portal_C_UpdatePortalAnimation::FadeCurve' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, Counter) == 0x000020, "Member 'BP_Portal_C_UpdatePortalAnimation::Counter' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, SM) == 0x000028, "Member 'BP_Portal_C_UpdatePortalAnimation::SM' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, DMI) == 0x000030, "Member 'BP_Portal_C_UpdatePortalAnimation::DMI' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, OutputCounter) == 0x000038, "Member 'BP_Portal_C_UpdatePortalAnimation::OutputCounter' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, Factor) == 0x00003C, "Member 'BP_Portal_C_UpdatePortalAnimation::Factor' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000040, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_FClamp_ReturnValue) == 0x000044, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_GetFloatValue_ReturnValue) == 0x000050, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_FClamp_ReturnValue_1) == 0x000054, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000058, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_GetFloatValue_ReturnValue_1) == 0x00005C, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.UpdatePortalsCameraPosition
// 0x05F0 (0x05F0 - 0x0000)
struct BP_Portal_C_UpdatePortalsCameraPosition final
{
public:
	struct FTransform                             TempTrans2;                                        // 0x0000(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             TempTrans1;                                        // 0x0030(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_InvertTransform_ReturnValue_1;            // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0170(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_1;          // 0x01A0(0x0030)(IsPlainOldData, NoDestructor)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D8[0x8];                                      // 0x01D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_2;          // 0x01E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue_1;          // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue_1;          // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_258[0x8];                                      // 0x0258(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0260(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_3;          // 0x02A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_4;          // 0x02D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_5;          // 0x0300(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x033C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0348(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0355(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0356(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0357(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0364(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x037C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0388(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x0394(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x03AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x03B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x03C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x03D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x03DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x03E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x03F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x0400(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x040C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x0418(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0xC];                                      // 0x0424(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x0430(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_5;                // 0x0460(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_5;                // 0x046C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_5;                   // 0x0478(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484[0xC];                                      // 0x0484(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_5;              // 0x0490(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x04C0(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult_1;    // 0x0554(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Portal_C_UpdatePortalsCameraPosition) == 0x000010, "Wrong alignment on BP_Portal_C_UpdatePortalsCameraPosition");
static_assert(sizeof(BP_Portal_C_UpdatePortalsCameraPosition) == 0x0005F0, "Wrong size on BP_Portal_C_UpdatePortalsCameraPosition");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, TempTrans2) == 0x000000, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::TempTrans2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, TempTrans1) == 0x000030, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::TempTrans1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_InvertTransform_ReturnValue) == 0x000090, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0000C0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetCameraRotation_ReturnValue) == 0x0000C8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetCameraLocation_ReturnValue) == 0x0000D4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransform_ReturnValue_1) == 0x0000E0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_InvertTransform_ReturnValue_1) == 0x000110, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_InvertTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_ComposeTransforms_ReturnValue) == 0x000140, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransform_ReturnValue_2) == 0x000170, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_ComposeTransforms_ReturnValue_1) == 0x0001A0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_ComposeTransforms_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x0001D0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_ComposeTransforms_ReturnValue_2) == 0x0001E0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_ComposeTransforms_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetCameraRotation_ReturnValue_1) == 0x000210, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetCameraRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Location) == 0x00021C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Rotation) == 0x000228, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Scale) == 0x000234, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetCameraLocation_ReturnValue_1) == 0x000240, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetCameraLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakRotator_Roll) == 0x00024C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakRotator_Pitch) == 0x000250, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakRotator_Yaw) == 0x000254, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransform_ReturnValue_3) == 0x000260, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeRotator_ReturnValue) == 0x000290, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_ComposeTransforms_ReturnValue_3) == 0x0002A0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_ComposeTransforms_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_ComposeTransforms_ReturnValue_4) == 0x0002D0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_ComposeTransforms_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_ComposeTransforms_ReturnValue_5) == 0x000300, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_ComposeTransforms_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Location_1) == 0x000330, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Rotation_1) == 0x00033C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Scale_1) == 0x000348, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_IsValid_ReturnValue) == 0x000354, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_IsValid_ReturnValue_1) == 0x000355, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_IsValid_ReturnValue_2) == 0x000356, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_IsValid_ReturnValue_3) == 0x000357, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Location_2) == 0x000358, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Rotation_2) == 0x000364, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Scale_2) == 0x000370, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetForwardVector_ReturnValue) == 0x00037C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Normal_ReturnValue) == 0x000388, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Location_3) == 0x000394, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Rotation_3) == 0x0003A0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Scale_3) == 0x0003AC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0003B8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetForwardVector_ReturnValue_1) == 0x0003C4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Add_VectorVector_ReturnValue) == 0x0003D0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Normal_ReturnValue_1) == 0x0003DC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0003E8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0003F4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Location_4) == 0x000400, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Rotation_4) == 0x00040C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Scale_4) == 0x000418, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransform_ReturnValue_4) == 0x000430, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Location_5) == 0x000460, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Location_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Rotation_5) == 0x00046C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Rotation_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Scale_5) == 0x000478, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Scale_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransform_ReturnValue_5) == 0x000490, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0004C0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_K2_SetWorldTransform_SweepHitResult_1) == 0x000554, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_K2_SetWorldTransform_SweepHitResult_1' has a wrong offset!");

}

