#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SMovementSetting

#include "Basic.hpp"

#include "SMovementRotationSetting_structs.hpp"


namespace SDK
{

// UserDefinedStruct SMovementSetting.SMovementSetting
// 0x0058 (0x0058 - 0x0000)
struct FSMovementSetting final
{
public:
	float                                         WalkSpeed_2_DA690DDE48698DCE23ACB9B7B6DC336B;      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RunSpeed_4_9808D9B3425262A5A733268AC1DCE8A4;       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SprintSpeed_6_B1E0DFD1469B04EDFB56A5A6C45ED5C0;    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SwingSpeed_33_8B661DC74950E8EE552485A6A7D2079E;    // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Acceleration_23_F4BEBFA944C355D912F6A0B541BEBC2F;  // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SwingAcceleration_37_5CFFCCAE4D7DE44C9076CBB1A3DBAB1A; // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GroundFriction_24_E8BE047248810FD17D14658342499CC5; // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           MovementCurve_10_A968BF814DA38118D120B1AC090F43F2; // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            RotationRateCurve_13_D6280A964B6624D84EA7B1A295BDCDDF; // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NormalSwimSpeed_16_5594DF0C45045A38F17AFDA3DBD9D6B2; // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FastSwimSpeed_18_0553DCF8405A234767699F9349DACAFE; // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ControllerRotationSpeed_44_FA4FC2A24AAEFA020A423DB3E453A8C2; // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSMovementRotationSetting              ControllerRotationSpeedSetting_45_C5A27A7C43483ED4E23B18AB1C67F1FB; // 0x003C(0x0018)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSMovementSetting) == 0x000008, "Wrong alignment on FSMovementSetting");
static_assert(sizeof(FSMovementSetting) == 0x000058, "Wrong size on FSMovementSetting");
static_assert(offsetof(FSMovementSetting, WalkSpeed_2_DA690DDE48698DCE23ACB9B7B6DC336B) == 0x000000, "Member 'FSMovementSetting::WalkSpeed_2_DA690DDE48698DCE23ACB9B7B6DC336B' has a wrong offset!");
static_assert(offsetof(FSMovementSetting, RunSpeed_4_9808D9B3425262A5A733268AC1DCE8A4) == 0x000004, "Member 'FSMovementSetting::RunSpeed_4_9808D9B3425262A5A733268AC1DCE8A4' has a wrong offset!");
static_assert(offsetof(FSMovementSetting, SprintSpeed_6_B1E0DFD1469B04EDFB56A5A6C45ED5C0) == 0x000008, "Member 'FSMovementSetting::SprintSpeed_6_B1E0DFD1469B04EDFB56A5A6C45ED5C0' has a wrong offset!");
static_assert(offsetof(FSMovementSetting, SwingSpeed_33_8B661DC74950E8EE552485A6A7D2079E) == 0x00000C, "Member 'FSMovementSetting::SwingSpeed_33_8B661DC74950E8EE552485A6A7D2079E' has a wrong offset!");
static_assert(offsetof(FSMovementSetting, Acceleration_23_F4BEBFA944C355D912F6A0B541BEBC2F) == 0x000010, "Member 'FSMovementSetting::Acceleration_23_F4BEBFA944C355D912F6A0B541BEBC2F' has a wrong offset!");
static_assert(offsetof(FSMovementSetting, SwingAcceleration_37_5CFFCCAE4D7DE44C9076CBB1A3DBAB1A) == 0x000014, "Member 'FSMovementSetting::SwingAcceleration_37_5CFFCCAE4D7DE44C9076CBB1A3DBAB1A' has a wrong offset!");
static_assert(offsetof(FSMovementSetting, GroundFriction_24_E8BE047248810FD17D14658342499CC5) == 0x000018, "Member 'FSMovementSetting::GroundFriction_24_E8BE047248810FD17D14658342499CC5' has a wrong offset!");
static_assert(offsetof(FSMovementSetting, MovementCurve_10_A968BF814DA38118D120B1AC090F43F2) == 0x000020, "Member 'FSMovementSetting::MovementCurve_10_A968BF814DA38118D120B1AC090F43F2' has a wrong offset!");
static_assert(offsetof(FSMovementSetting, RotationRateCurve_13_D6280A964B6624D84EA7B1A295BDCDDF) == 0x000028, "Member 'FSMovementSetting::RotationRateCurve_13_D6280A964B6624D84EA7B1A295BDCDDF' has a wrong offset!");
static_assert(offsetof(FSMovementSetting, NormalSwimSpeed_16_5594DF0C45045A38F17AFDA3DBD9D6B2) == 0x000030, "Member 'FSMovementSetting::NormalSwimSpeed_16_5594DF0C45045A38F17AFDA3DBD9D6B2' has a wrong offset!");
static_assert(offsetof(FSMovementSetting, FastSwimSpeed_18_0553DCF8405A234767699F9349DACAFE) == 0x000034, "Member 'FSMovementSetting::FastSwimSpeed_18_0553DCF8405A234767699F9349DACAFE' has a wrong offset!");
static_assert(offsetof(FSMovementSetting, ControllerRotationSpeed_44_FA4FC2A24AAEFA020A423DB3E453A8C2) == 0x000038, "Member 'FSMovementSetting::ControllerRotationSpeed_44_FA4FC2A24AAEFA020A423DB3E453A8C2' has a wrong offset!");
static_assert(offsetof(FSMovementSetting, ControllerRotationSpeedSetting_45_C5A27A7C43483ED4E23B18AB1C67F1FB) == 0x00003C, "Member 'FSMovementSetting::ControllerRotationSpeedSetting_45_C5A27A7C43483ED4E23B18AB1C67F1FB' has a wrong offset!");

}

