#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JsEnv

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "UMG_classes.hpp"
#include "Engine_classes.hpp"
#include "JsEnv_structs.hpp"


namespace SDK
{

// Class JsEnv.JSAnimGeneratedClass
// 0x0020 (0x05F0 - 0x05D0)
class UJSAnimGeneratedClass final : public UAnimBlueprintGeneratedClass
{
public:
	uint8                                         Pad_5D0[0x20];                                     // 0x05D0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JSAnimGeneratedClass">();
	}
	static class UJSAnimGeneratedClass* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJSAnimGeneratedClass>();
	}
};
static_assert(alignof(UJSAnimGeneratedClass) == 0x000008, "Wrong alignment on UJSAnimGeneratedClass");
static_assert(sizeof(UJSAnimGeneratedClass) == 0x0005F0, "Wrong size on UJSAnimGeneratedClass");

// Class JsEnv.DynamicDelegateProxy
// 0x0078 (0x00A8 - 0x0030)
class UDynamicDelegateProxy final : public UObject
{
public:
	uint8                                         Pad_30[0x78];                                      // 0x0030(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Fire1();
	void Fire10();
	void Fire100();
	void Fire11();
	void Fire12();
	void Fire13();
	void Fire14();
	void Fire15();
	void Fire16();
	void Fire17();
	void Fire18();
	void Fire19();
	void Fire2();
	void Fire20();
	void Fire21();
	void Fire22();
	void Fire23();
	void Fire24();
	void Fire25();
	void Fire26();
	void Fire27();
	void Fire28();
	void Fire29();
	void Fire3();
	void Fire30();
	void Fire31();
	void Fire32();
	void Fire33();
	void Fire34();
	void Fire35();
	void Fire36();
	void Fire37();
	void Fire38();
	void Fire39();
	void Fire4();
	void Fire40();
	void Fire41();
	void Fire42();
	void Fire43();
	void Fire44();
	void Fire45();
	void Fire46();
	void Fire47();
	void Fire48();
	void Fire49();
	void Fire5();
	void Fire50();
	void Fire51();
	void Fire52();
	void Fire53();
	void Fire54();
	void Fire55();
	void Fire56();
	void Fire57();
	void Fire58();
	void Fire59();
	void Fire6();
	void Fire60();
	void Fire61();
	void Fire62();
	void Fire63();
	void Fire64();
	void Fire65();
	void Fire66();
	void Fire67();
	void Fire68();
	void Fire69();
	void Fire7();
	void Fire70();
	void Fire71();
	void Fire72();
	void Fire73();
	void Fire74();
	void Fire75();
	void Fire76();
	void Fire77();
	void Fire78();
	void Fire79();
	void Fire8();
	void Fire80();
	void Fire81();
	void Fire82();
	void Fire83();
	void Fire84();
	void Fire85();
	void Fire86();
	void Fire87();
	void Fire88();
	void Fire89();
	void Fire9();
	void Fire90();
	void Fire91();
	void Fire92();
	void Fire93();
	void Fire94();
	void Fire95();
	void Fire96();
	void Fire97();
	void Fire98();
	void Fire99();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DynamicDelegateProxy">();
	}
	static class UDynamicDelegateProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDynamicDelegateProxy>();
	}
};
static_assert(alignof(UDynamicDelegateProxy) == 0x000008, "Wrong alignment on UDynamicDelegateProxy");
static_assert(sizeof(UDynamicDelegateProxy) == 0x0000A8, "Wrong size on UDynamicDelegateProxy");

// Class JsEnv.JsEnvSetting
// 0x0060 (0x0090 - 0x0030)
class UJsEnvSetting final : public UObject
{
public:
	class FString                                 JsRootPath;                                        // 0x0030(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RawJsRootPath;                                     // 0x0040(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 V8Flags;                                           // 0x0050(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EV8GCType                                     MemoryWaringBehavior;                              // 0x0060(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        MaxYoungGenerationSizeInMB;                        // 0x0064(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        EditorMaxOldGenerationSizeInMB;                    // 0x0068(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        MinorGCIdleBudgetInMicroSec;                       // 0x006C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        V8IdleMinTimeInMicroSec;                           // 0x0070(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        V8EditorTickIdleMinTimeInMicroSec;                 // 0x0074(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        MinorGCIdleIntervalInMilliSec;                     // 0x0078(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxPumpMessageLoopCountPerFrame;                   // 0x007C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        StackTraceOption;                                  // 0x0080(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableMinorGCInTick;                               // 0x0084(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnablePreloadJS;                                   // 0x0085(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableCheckLauncherJs;                             // 0x0086(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableV8Print;                                     // 0x0087(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableGCHeapLayoutTrace;                           // 0x0088(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableGCHeapStatsTrace;                            // 0x0089(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseRelativeScriptOrigin;                           // 0x008A(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          JsAbsPathSupportPak;                               // 0x008B(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JsEnvSetting">();
	}
	static class UJsEnvSetting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJsEnvSetting>();
	}
};
static_assert(alignof(UJsEnvSetting) == 0x000008, "Wrong alignment on UJsEnvSetting");
static_assert(sizeof(UJsEnvSetting) == 0x000090, "Wrong size on UJsEnvSetting");
static_assert(offsetof(UJsEnvSetting, JsRootPath) == 0x000030, "Member 'UJsEnvSetting::JsRootPath' has a wrong offset!");
static_assert(offsetof(UJsEnvSetting, RawJsRootPath) == 0x000040, "Member 'UJsEnvSetting::RawJsRootPath' has a wrong offset!");
static_assert(offsetof(UJsEnvSetting, V8Flags) == 0x000050, "Member 'UJsEnvSetting::V8Flags' has a wrong offset!");
static_assert(offsetof(UJsEnvSetting, MemoryWaringBehavior) == 0x000060, "Member 'UJsEnvSetting::MemoryWaringBehavior' has a wrong offset!");
static_assert(offsetof(UJsEnvSetting, MaxYoungGenerationSizeInMB) == 0x000064, "Member 'UJsEnvSetting::MaxYoungGenerationSizeInMB' has a wrong offset!");
static_assert(offsetof(UJsEnvSetting, EditorMaxOldGenerationSizeInMB) == 0x000068, "Member 'UJsEnvSetting::EditorMaxOldGenerationSizeInMB' has a wrong offset!");
static_assert(offsetof(UJsEnvSetting, MinorGCIdleBudgetInMicroSec) == 0x00006C, "Member 'UJsEnvSetting::MinorGCIdleBudgetInMicroSec' has a wrong offset!");
static_assert(offsetof(UJsEnvSetting, V8IdleMinTimeInMicroSec) == 0x000070, "Member 'UJsEnvSetting::V8IdleMinTimeInMicroSec' has a wrong offset!");
static_assert(offsetof(UJsEnvSetting, V8EditorTickIdleMinTimeInMicroSec) == 0x000074, "Member 'UJsEnvSetting::V8EditorTickIdleMinTimeInMicroSec' has a wrong offset!");
static_assert(offsetof(UJsEnvSetting, MinorGCIdleIntervalInMilliSec) == 0x000078, "Member 'UJsEnvSetting::MinorGCIdleIntervalInMilliSec' has a wrong offset!");
static_assert(offsetof(UJsEnvSetting, MaxPumpMessageLoopCountPerFrame) == 0x00007C, "Member 'UJsEnvSetting::MaxPumpMessageLoopCountPerFrame' has a wrong offset!");
static_assert(offsetof(UJsEnvSetting, StackTraceOption) == 0x000080, "Member 'UJsEnvSetting::StackTraceOption' has a wrong offset!");
static_assert(offsetof(UJsEnvSetting, EnableMinorGCInTick) == 0x000084, "Member 'UJsEnvSetting::EnableMinorGCInTick' has a wrong offset!");
static_assert(offsetof(UJsEnvSetting, EnablePreloadJS) == 0x000085, "Member 'UJsEnvSetting::EnablePreloadJS' has a wrong offset!");
static_assert(offsetof(UJsEnvSetting, EnableCheckLauncherJs) == 0x000086, "Member 'UJsEnvSetting::EnableCheckLauncherJs' has a wrong offset!");
static_assert(offsetof(UJsEnvSetting, EnableV8Print) == 0x000087, "Member 'UJsEnvSetting::EnableV8Print' has a wrong offset!");
static_assert(offsetof(UJsEnvSetting, EnableGCHeapLayoutTrace) == 0x000088, "Member 'UJsEnvSetting::EnableGCHeapLayoutTrace' has a wrong offset!");
static_assert(offsetof(UJsEnvSetting, EnableGCHeapStatsTrace) == 0x000089, "Member 'UJsEnvSetting::EnableGCHeapStatsTrace' has a wrong offset!");
static_assert(offsetof(UJsEnvSetting, UseRelativeScriptOrigin) == 0x00008A, "Member 'UJsEnvSetting::UseRelativeScriptOrigin' has a wrong offset!");
static_assert(offsetof(UJsEnvSetting, JsAbsPathSupportPak) == 0x00008B, "Member 'UJsEnvSetting::JsAbsPathSupportPak' has a wrong offset!");

// Class JsEnv.ExtensionMethods
// 0x0000 (0x0030 - 0x0030)
class UExtensionMethods final : public UBlueprintFunctionLibrary
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ExtensionMethods">();
	}
	static class UExtensionMethods* GetDefaultObj()
	{
		return GetDefaultObjImpl<UExtensionMethods>();
	}
};
static_assert(alignof(UExtensionMethods) == 0x000008, "Wrong alignment on UExtensionMethods");
static_assert(sizeof(UExtensionMethods) == 0x000030, "Wrong size on UExtensionMethods");

// Class JsEnv.JSGeneratedClass
// 0x0020 (0x0358 - 0x0338)
class UJSGeneratedClass final : public UBlueprintGeneratedClass
{
public:
	uint8                                         Pad_338[0x20];                                     // 0x0338(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JSGeneratedClass">();
	}
	static class UJSGeneratedClass* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJSGeneratedClass>();
	}
};
static_assert(alignof(UJSGeneratedClass) == 0x000008, "Wrong alignment on UJSGeneratedClass");
static_assert(sizeof(UJSGeneratedClass) == 0x000358, "Wrong size on UJSGeneratedClass");

// Class JsEnv.JSGeneratedFunction
// 0x0020 (0x0108 - 0x00E8)
class UJSGeneratedFunction final : public UFunction
{
public:
	uint8                                         Pad_E8[0x20];                                      // 0x00E8(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JSGeneratedFunction">();
	}
	static class UJSGeneratedFunction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJSGeneratedFunction>();
	}
};
static_assert(alignof(UJSGeneratedFunction) == 0x000008, "Wrong alignment on UJSGeneratedFunction");
static_assert(sizeof(UJSGeneratedFunction) == 0x000108, "Wrong size on UJSGeneratedFunction");

// Class JsEnv.JSWidgetGeneratedClass
// 0x0020 (0x0398 - 0x0378)
class UJSWidgetGeneratedClass final : public UWidgetBlueprintGeneratedClass
{
public:
	uint8                                         Pad_378[0x20];                                     // 0x0378(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JSWidgetGeneratedClass">();
	}
	static class UJSWidgetGeneratedClass* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJSWidgetGeneratedClass>();
	}
};
static_assert(alignof(UJSWidgetGeneratedClass) == 0x000008, "Wrong alignment on UJSWidgetGeneratedClass");
static_assert(sizeof(UJSWidgetGeneratedClass) == 0x000398, "Wrong size on UJSWidgetGeneratedClass");

// Class JsEnv.KuroPreloadJSCallback
// 0x0028 (0x0058 - 0x0030)
class UKuroPreloadJSCallback final : public UObject
{
public:
	TDelegate<void()>                             CompletedDelegate;                                 // 0x0030(0x0028)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KuroPreloadJSCallback">();
	}
	static class UKuroPreloadJSCallback* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKuroPreloadJSCallback>();
	}
};
static_assert(alignof(UKuroPreloadJSCallback) == 0x000008, "Wrong alignment on UKuroPreloadJSCallback");
static_assert(sizeof(UKuroPreloadJSCallback) == 0x000058, "Wrong size on UKuroPreloadJSCallback");
static_assert(offsetof(UKuroPreloadJSCallback, CompletedDelegate) == 0x000030, "Member 'UKuroPreloadJSCallback::CompletedDelegate' has a wrong offset!");

// Class JsEnv.TypeScriptBlueprint
// 0x0000 (0x00A8 - 0x00A8)
class UTypeScriptBlueprint final : public UBlueprint
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TypeScriptBlueprint">();
	}
	static class UTypeScriptBlueprint* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTypeScriptBlueprint>();
	}
};
static_assert(alignof(UTypeScriptBlueprint) == 0x000008, "Wrong alignment on UTypeScriptBlueprint");
static_assert(sizeof(UTypeScriptBlueprint) == 0x0000A8, "Wrong size on UTypeScriptBlueprint");

// Class JsEnv.TypeScriptGeneratedClass
// 0x0070 (0x03A8 - 0x0338)
class UTypeScriptGeneratedClass final : public UBlueprintGeneratedClass
{
public:
	uint8                                         Pad_338[0x69];                                     // 0x0338(0x0069)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          HasConstructor;                                    // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A2[0x6];                                      // 0x03A2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TypeScriptGeneratedClass">();
	}
	static class UTypeScriptGeneratedClass* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTypeScriptGeneratedClass>();
	}
};
static_assert(alignof(UTypeScriptGeneratedClass) == 0x000008, "Wrong alignment on UTypeScriptGeneratedClass");
static_assert(sizeof(UTypeScriptGeneratedClass) == 0x0003A8, "Wrong size on UTypeScriptGeneratedClass");
static_assert(offsetof(UTypeScriptGeneratedClass, HasConstructor) == 0x0003A1, "Member 'UTypeScriptGeneratedClass::HasConstructor' has a wrong offset!");

// Class JsEnv.TypeScriptObject
// 0x0000 (0x0030 - 0x0030)
class ITypeScriptObject final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TypeScriptObject">();
	}
	static class ITypeScriptObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<ITypeScriptObject>();
	}
};
static_assert(alignof(ITypeScriptObject) == 0x000008, "Wrong alignment on ITypeScriptObject");
static_assert(sizeof(ITypeScriptObject) == 0x000030, "Wrong size on ITypeScriptObject");

}

