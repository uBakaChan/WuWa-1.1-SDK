#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsHotFixActionHandle

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass TsHotFixActionHandle.TsHotFixActionHandle_C
// 0x0070 (0x00A0 - 0x0030)
class UTsHotFixActionHandle_C final : public UObject
{
public:
	class FName                                   FuncName;                                          // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __;                                                // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ActionName;                                        // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bPress;                                            // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnPressActionCallback;                             // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	ETouchIndex                                   TouchIndex;                                        // 0x0070(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TouchPosition;                                     // 0x0074(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnTouchActionCallback;                             // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnTouchMovedActionCallback;                        // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnPressActionCallback__DelegateSignature();
	void OnTouchActionCallback__DelegateSignature();
	void OnTouchMovedActionCallback__DelegateSignature();
	void OnPressAction();
	void OnReleaseAction();
	void AddPressBinding(const class FString& Param_ActionName, class ABasePlayerController* Controller);
	void AddReleaseBinding(const class FString& Param_ActionName, class ABasePlayerController* Controller);
	void AddTouchPressBinding(class ABasePlayerController* Controller);
	void AddTouchReleaseBinding(class ABasePlayerController* Controller);
	void OnTouchPressAction(ETouchIndex Param_TouchIndex, const struct FVector& Position);
	void OnTouchReleaseAction(ETouchIndex Param_TouchIndex, const struct FVector& Position);
	void ClearActionBinding(class ABasePlayerController* Controller);
	void OnTouchMoveAction(ETouchIndex Touchindex, const struct FVector& Position);
	void AddTouchMoveBinding(class ABasePlayerController* Controller);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TsHotFixActionHandle_C">();
	}
	static class UTsHotFixActionHandle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTsHotFixActionHandle_C>();
	}
};
static_assert(alignof(UTsHotFixActionHandle_C) == 0x000008, "Wrong alignment on UTsHotFixActionHandle_C");
static_assert(sizeof(UTsHotFixActionHandle_C) == 0x0000A0, "Wrong size on UTsHotFixActionHandle_C");
static_assert(offsetof(UTsHotFixActionHandle_C, FuncName) == 0x000030, "Member 'UTsHotFixActionHandle_C::FuncName' has a wrong offset!");
static_assert(offsetof(UTsHotFixActionHandle_C, __) == 0x000040, "Member 'UTsHotFixActionHandle_C::__' has a wrong offset!");
static_assert(offsetof(UTsHotFixActionHandle_C, ActionName) == 0x000048, "Member 'UTsHotFixActionHandle_C::ActionName' has a wrong offset!");
static_assert(offsetof(UTsHotFixActionHandle_C, bPress) == 0x000058, "Member 'UTsHotFixActionHandle_C::bPress' has a wrong offset!");
static_assert(offsetof(UTsHotFixActionHandle_C, OnPressActionCallback) == 0x000060, "Member 'UTsHotFixActionHandle_C::OnPressActionCallback' has a wrong offset!");
static_assert(offsetof(UTsHotFixActionHandle_C, TouchIndex) == 0x000070, "Member 'UTsHotFixActionHandle_C::TouchIndex' has a wrong offset!");
static_assert(offsetof(UTsHotFixActionHandle_C, TouchPosition) == 0x000074, "Member 'UTsHotFixActionHandle_C::TouchPosition' has a wrong offset!");
static_assert(offsetof(UTsHotFixActionHandle_C, OnTouchActionCallback) == 0x000080, "Member 'UTsHotFixActionHandle_C::OnTouchActionCallback' has a wrong offset!");
static_assert(offsetof(UTsHotFixActionHandle_C, OnTouchMovedActionCallback) == 0x000090, "Member 'UTsHotFixActionHandle_C::OnTouchMovedActionCallback' has a wrong offset!");

}

