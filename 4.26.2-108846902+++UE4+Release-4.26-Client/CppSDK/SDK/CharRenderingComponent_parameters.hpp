#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharRenderingComponent

#include "Basic.hpp"

#include "ECharacterControllerCaseType_structs.hpp"
#include "ECharacterDitherType_structs.hpp"
#include "ECharacterBodySpecifiedType_structs.hpp"
#include "ECharacterRenderingType_structs.hpp"
#include "ECharacterSlotSpecifiedType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function CharRenderingComponent.CharRenderingComponent_C.ExecuteUbergraph_CharRenderingComponent
// 0x000C (0x000C - 0x0000)
struct CharRenderingComponent_C_ExecuteUbergraph_CharRenderingComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_ExecuteUbergraph_CharRenderingComponent) == 0x000004, "Wrong alignment on CharRenderingComponent_C_ExecuteUbergraph_CharRenderingComponent");
static_assert(sizeof(CharRenderingComponent_C_ExecuteUbergraph_CharRenderingComponent) == 0x00000C, "Wrong size on CharRenderingComponent_C_ExecuteUbergraph_CharRenderingComponent");
static_assert(offsetof(CharRenderingComponent_C_ExecuteUbergraph_CharRenderingComponent, EntryPoint) == 0x000000, "Member 'CharRenderingComponent_C_ExecuteUbergraph_CharRenderingComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_ExecuteUbergraph_CharRenderingComponent, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'CharRenderingComponent_C_ExecuteUbergraph_CharRenderingComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_ExecuteUbergraph_CharRenderingComponent, K2Node_Event_EndPlayReason) == 0x000008, "Member 'CharRenderingComponent_C_ExecuteUbergraph_CharRenderingComponent::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct CharRenderingComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on CharRenderingComponent_C_ReceiveTick");
static_assert(sizeof(CharRenderingComponent_C_ReceiveTick) == 0x000004, "Wrong size on CharRenderingComponent_C_ReceiveTick");
static_assert(offsetof(CharRenderingComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'CharRenderingComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct CharRenderingComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on CharRenderingComponent_C_ReceiveEndPlay");
static_assert(sizeof(CharRenderingComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on CharRenderingComponent_C_ReceiveEndPlay");
static_assert(offsetof(CharRenderingComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'CharRenderingComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.Init
// 0x0001 (0x0001 - 0x0000)
struct CharRenderingComponent_C_Init final
{
public:
	ECharacterRenderingType                       RenderType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_Init) == 0x000001, "Wrong alignment on CharRenderingComponent_C_Init");
static_assert(sizeof(CharRenderingComponent_C_Init) == 0x000001, "Wrong size on CharRenderingComponent_C_Init");
static_assert(offsetof(CharRenderingComponent_C_Init, RenderType) == 0x000000, "Member 'CharRenderingComponent_C_Init::RenderType' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.RemoveMaterialControllerData
// 0x0004 (0x0004 - 0x0000)
struct CharRenderingComponent_C_RemoveMaterialControllerData final
{
public:
	int32                                         Handle1;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_RemoveMaterialControllerData) == 0x000004, "Wrong alignment on CharRenderingComponent_C_RemoveMaterialControllerData");
static_assert(sizeof(CharRenderingComponent_C_RemoveMaterialControllerData) == 0x000004, "Wrong size on CharRenderingComponent_C_RemoveMaterialControllerData");
static_assert(offsetof(CharRenderingComponent_C_RemoveMaterialControllerData, Handle1) == 0x000000, "Member 'CharRenderingComponent_C_RemoveMaterialControllerData::Handle1' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.AddMaterialControllerData
// 0x0010 (0x0010 - 0x0000)
struct CharRenderingComponent_C_AddMaterialControllerData final
{
public:
	class UObject*                                Data;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_AddMaterialControllerData) == 0x000008, "Wrong alignment on CharRenderingComponent_C_AddMaterialControllerData");
static_assert(sizeof(CharRenderingComponent_C_AddMaterialControllerData) == 0x000010, "Wrong size on CharRenderingComponent_C_AddMaterialControllerData");
static_assert(offsetof(CharRenderingComponent_C_AddMaterialControllerData, Data) == 0x000000, "Member 'CharRenderingComponent_C_AddMaterialControllerData::Data' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_AddMaterialControllerData, ReturnValue) == 0x000008, "Member 'CharRenderingComponent_C_AddMaterialControllerData::ReturnValue' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.RemoveMaterialControllerDataWithEnding
// 0x0004 (0x0004 - 0x0000)
struct CharRenderingComponent_C_RemoveMaterialControllerDataWithEnding final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_RemoveMaterialControllerDataWithEnding) == 0x000004, "Wrong alignment on CharRenderingComponent_C_RemoveMaterialControllerDataWithEnding");
static_assert(sizeof(CharRenderingComponent_C_RemoveMaterialControllerDataWithEnding) == 0x000004, "Wrong size on CharRenderingComponent_C_RemoveMaterialControllerDataWithEnding");
static_assert(offsetof(CharRenderingComponent_C_RemoveMaterialControllerDataWithEnding, Handle) == 0x000000, "Member 'CharRenderingComponent_C_RemoveMaterialControllerDataWithEnding::Handle' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.AddMaterialControllerDataGroup
// 0x0010 (0x0010 - 0x0000)
struct CharRenderingComponent_C_AddMaterialControllerDataGroup final
{
public:
	class UObject*                                Data;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_AddMaterialControllerDataGroup) == 0x000008, "Wrong alignment on CharRenderingComponent_C_AddMaterialControllerDataGroup");
static_assert(sizeof(CharRenderingComponent_C_AddMaterialControllerDataGroup) == 0x000010, "Wrong size on CharRenderingComponent_C_AddMaterialControllerDataGroup");
static_assert(offsetof(CharRenderingComponent_C_AddMaterialControllerDataGroup, Data) == 0x000000, "Member 'CharRenderingComponent_C_AddMaterialControllerDataGroup::Data' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_AddMaterialControllerDataGroup, ReturnValue) == 0x000008, "Member 'CharRenderingComponent_C_AddMaterialControllerDataGroup::ReturnValue' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.RemoveMaterialControllerDataGroup
// 0x0004 (0x0004 - 0x0000)
struct CharRenderingComponent_C_RemoveMaterialControllerDataGroup final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_RemoveMaterialControllerDataGroup) == 0x000004, "Wrong alignment on CharRenderingComponent_C_RemoveMaterialControllerDataGroup");
static_assert(sizeof(CharRenderingComponent_C_RemoveMaterialControllerDataGroup) == 0x000004, "Wrong size on CharRenderingComponent_C_RemoveMaterialControllerDataGroup");
static_assert(offsetof(CharRenderingComponent_C_RemoveMaterialControllerDataGroup, Handle) == 0x000000, "Member 'CharRenderingComponent_C_RemoveMaterialControllerDataGroup::Handle' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.CheckInit
// 0x0001 (0x0001 - 0x0000)
struct CharRenderingComponent_C_CheckInit final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharRenderingComponent_C_CheckInit) == 0x000001, "Wrong alignment on CharRenderingComponent_C_CheckInit");
static_assert(sizeof(CharRenderingComponent_C_CheckInit) == 0x000001, "Wrong size on CharRenderingComponent_C_CheckInit");
static_assert(offsetof(CharRenderingComponent_C_CheckInit, ReturnValue) == 0x000000, "Member 'CharRenderingComponent_C_CheckInit::ReturnValue' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.SetDebug
// 0x0001 (0x0001 - 0x0000)
struct CharRenderingComponent_C_SetDebug final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharRenderingComponent_C_SetDebug) == 0x000001, "Wrong alignment on CharRenderingComponent_C_SetDebug");
static_assert(sizeof(CharRenderingComponent_C_SetDebug) == 0x000001, "Wrong size on CharRenderingComponent_C_SetDebug");
static_assert(offsetof(CharRenderingComponent_C_SetDebug, Value) == 0x000000, "Member 'CharRenderingComponent_C_SetDebug::Value' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.GetDebugInfo
// 0x0008 (0x0008 - 0x0000)
struct CharRenderingComponent_C_GetDebugInfo final
{
public:
	class UPD_MaterialDebug_C*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_GetDebugInfo) == 0x000008, "Wrong alignment on CharRenderingComponent_C_GetDebugInfo");
static_assert(sizeof(CharRenderingComponent_C_GetDebugInfo) == 0x000008, "Wrong size on CharRenderingComponent_C_GetDebugInfo");
static_assert(offsetof(CharRenderingComponent_C_GetDebugInfo, ReturnValue) == 0x000000, "Member 'CharRenderingComponent_C_GetDebugInfo::ReturnValue' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.AddComponent
// 0x0018 (0x0018 - 0x0000)
struct CharRenderingComponent_C_AddComponent final
{
public:
	class FString                                 SkelName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UMeshComponent*                         SkeletalComp;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_AddComponent) == 0x000008, "Wrong alignment on CharRenderingComponent_C_AddComponent");
static_assert(sizeof(CharRenderingComponent_C_AddComponent) == 0x000018, "Wrong size on CharRenderingComponent_C_AddComponent");
static_assert(offsetof(CharRenderingComponent_C_AddComponent, SkelName) == 0x000000, "Member 'CharRenderingComponent_C_AddComponent::SkelName' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_AddComponent, SkeletalComp) == 0x000010, "Member 'CharRenderingComponent_C_AddComponent::SkeletalComp' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.RemoveComponent
// 0x0010 (0x0010 - 0x0000)
struct CharRenderingComponent_C_RemoveComponent final
{
public:
	class FString                                 SkelName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_RemoveComponent) == 0x000008, "Wrong alignment on CharRenderingComponent_C_RemoveComponent");
static_assert(sizeof(CharRenderingComponent_C_RemoveComponent) == 0x000010, "Wrong size on CharRenderingComponent_C_RemoveComponent");
static_assert(offsetof(CharRenderingComponent_C_RemoveComponent, SkelName) == 0x000000, "Member 'CharRenderingComponent_C_RemoveComponent::SkelName' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.QuickInitAndAddData
// 0x0018 (0x0018 - 0x0000)
struct CharRenderingComponent_C_QuickInitAndAddData final
{
public:
	class UObject*                                Data;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ASkeletalMeshActor*                     MeshActor;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_QuickInitAndAddData) == 0x000008, "Wrong alignment on CharRenderingComponent_C_QuickInitAndAddData");
static_assert(sizeof(CharRenderingComponent_C_QuickInitAndAddData) == 0x000018, "Wrong size on CharRenderingComponent_C_QuickInitAndAddData");
static_assert(offsetof(CharRenderingComponent_C_QuickInitAndAddData, Data) == 0x000000, "Member 'CharRenderingComponent_C_QuickInitAndAddData::Data' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_QuickInitAndAddData, MeshActor) == 0x000008, "Member 'CharRenderingComponent_C_QuickInitAndAddData::MeshActor' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_QuickInitAndAddData, ReturnValue) == 0x000010, "Member 'CharRenderingComponent_C_QuickInitAndAddData::ReturnValue' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.SetMaterialPropertyFloat
// 0x0028 (0x0028 - 0x0000)
struct CharRenderingComponent_C_SetMaterialPropertyFloat final
{
public:
	ECharacterBodySpecifiedType                   bodyType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SectionIndex;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ECharacterSlotSpecifiedType                   SlotType;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PropertyName;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_SetMaterialPropertyFloat) == 0x000008, "Wrong alignment on CharRenderingComponent_C_SetMaterialPropertyFloat");
static_assert(sizeof(CharRenderingComponent_C_SetMaterialPropertyFloat) == 0x000028, "Wrong size on CharRenderingComponent_C_SetMaterialPropertyFloat");
static_assert(offsetof(CharRenderingComponent_C_SetMaterialPropertyFloat, bodyType) == 0x000000, "Member 'CharRenderingComponent_C_SetMaterialPropertyFloat::bodyType' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_SetMaterialPropertyFloat, SectionIndex) == 0x000004, "Member 'CharRenderingComponent_C_SetMaterialPropertyFloat::SectionIndex' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_SetMaterialPropertyFloat, SlotType) == 0x000008, "Member 'CharRenderingComponent_C_SetMaterialPropertyFloat::SlotType' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_SetMaterialPropertyFloat, PropertyName) == 0x000010, "Member 'CharRenderingComponent_C_SetMaterialPropertyFloat::PropertyName' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_SetMaterialPropertyFloat, Value) == 0x000020, "Member 'CharRenderingComponent_C_SetMaterialPropertyFloat::Value' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.SetMaterialPropertyColor
// 0x0030 (0x0030 - 0x0000)
struct CharRenderingComponent_C_SetMaterialPropertyColor final
{
public:
	ECharacterBodySpecifiedType                   bodyType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SectionIndex;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ECharacterSlotSpecifiedType                   SlotType;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PropertyName;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash)
	struct FLinearColor                           Value;                                             // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_SetMaterialPropertyColor) == 0x000008, "Wrong alignment on CharRenderingComponent_C_SetMaterialPropertyColor");
static_assert(sizeof(CharRenderingComponent_C_SetMaterialPropertyColor) == 0x000030, "Wrong size on CharRenderingComponent_C_SetMaterialPropertyColor");
static_assert(offsetof(CharRenderingComponent_C_SetMaterialPropertyColor, bodyType) == 0x000000, "Member 'CharRenderingComponent_C_SetMaterialPropertyColor::bodyType' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_SetMaterialPropertyColor, SectionIndex) == 0x000004, "Member 'CharRenderingComponent_C_SetMaterialPropertyColor::SectionIndex' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_SetMaterialPropertyColor, SlotType) == 0x000008, "Member 'CharRenderingComponent_C_SetMaterialPropertyColor::SlotType' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_SetMaterialPropertyColor, PropertyName) == 0x000010, "Member 'CharRenderingComponent_C_SetMaterialPropertyColor::PropertyName' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_SetMaterialPropertyColor, Value) == 0x000020, "Member 'CharRenderingComponent_C_SetMaterialPropertyColor::Value' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.SetCapsuleDither
// 0x0004 (0x0004 - 0x0000)
struct CharRenderingComponent_C_SetCapsuleDither final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_SetCapsuleDither) == 0x000004, "Wrong alignment on CharRenderingComponent_C_SetCapsuleDither");
static_assert(sizeof(CharRenderingComponent_C_SetCapsuleDither) == 0x000004, "Wrong size on CharRenderingComponent_C_SetCapsuleDither");
static_assert(offsetof(CharRenderingComponent_C_SetCapsuleDither, Value) == 0x000000, "Member 'CharRenderingComponent_C_SetCapsuleDither::Value' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.SetDitherEffect
// 0x0008 (0x0008 - 0x0000)
struct CharRenderingComponent_C_SetDitherEffect final
{
public:
	float                                         DitherRate;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ECharacterDitherType                          DitherType;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_SetDitherEffect) == 0x000004, "Wrong alignment on CharRenderingComponent_C_SetDitherEffect");
static_assert(sizeof(CharRenderingComponent_C_SetDitherEffect) == 0x000008, "Wrong size on CharRenderingComponent_C_SetDitherEffect");
static_assert(offsetof(CharRenderingComponent_C_SetDitherEffect, DitherRate) == 0x000000, "Member 'CharRenderingComponent_C_SetDitherEffect::DitherRate' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_SetDitherEffect, DitherType) == 0x000004, "Member 'CharRenderingComponent_C_SetDitherEffect::DitherType' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.RemoveMaterialControllerDataGroupWithEnding
// 0x0004 (0x0004 - 0x0000)
struct CharRenderingComponent_C_RemoveMaterialControllerDataGroupWithEnding final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_RemoveMaterialControllerDataGroupWithEnding) == 0x000004, "Wrong alignment on CharRenderingComponent_C_RemoveMaterialControllerDataGroupWithEnding");
static_assert(sizeof(CharRenderingComponent_C_RemoveMaterialControllerDataGroupWithEnding) == 0x000004, "Wrong size on CharRenderingComponent_C_RemoveMaterialControllerDataGroupWithEnding");
static_assert(offsetof(CharRenderingComponent_C_RemoveMaterialControllerDataGroupWithEnding, Handle) == 0x000000, "Member 'CharRenderingComponent_C_RemoveMaterialControllerDataGroupWithEnding::Handle' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.QuickInitAndAddDataGroup
// 0x0018 (0x0018 - 0x0000)
struct CharRenderingComponent_C_QuickInitAndAddDataGroup final
{
public:
	class UObject*                                Data;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ASkeletalMeshActor*                     MeshActor;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_QuickInitAndAddDataGroup) == 0x000008, "Wrong alignment on CharRenderingComponent_C_QuickInitAndAddDataGroup");
static_assert(sizeof(CharRenderingComponent_C_QuickInitAndAddDataGroup) == 0x000018, "Wrong size on CharRenderingComponent_C_QuickInitAndAddDataGroup");
static_assert(offsetof(CharRenderingComponent_C_QuickInitAndAddDataGroup, Data) == 0x000000, "Member 'CharRenderingComponent_C_QuickInitAndAddDataGroup::Data' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_QuickInitAndAddDataGroup, MeshActor) == 0x000008, "Member 'CharRenderingComponent_C_QuickInitAndAddDataGroup::MeshActor' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_QuickInitAndAddDataGroup, ReturnValue) == 0x000010, "Member 'CharRenderingComponent_C_QuickInitAndAddDataGroup::ReturnValue' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.AddComponentByCase
// 0x0010 (0x0010 - 0x0000)
struct CharRenderingComponent_C_AddComponentByCase final
{
public:
	ECharacterControllerCaseType                  CaseType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         SkeletalComp;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_AddComponentByCase) == 0x000008, "Wrong alignment on CharRenderingComponent_C_AddComponentByCase");
static_assert(sizeof(CharRenderingComponent_C_AddComponentByCase) == 0x000010, "Wrong size on CharRenderingComponent_C_AddComponentByCase");
static_assert(offsetof(CharRenderingComponent_C_AddComponentByCase, CaseType) == 0x000000, "Member 'CharRenderingComponent_C_AddComponentByCase::CaseType' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_AddComponentByCase, SkeletalComp) == 0x000008, "Member 'CharRenderingComponent_C_AddComponentByCase::SkeletalComp' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.QuickInitAndAddDataWithMeshComponent
// 0x0018 (0x0018 - 0x0000)
struct CharRenderingComponent_C_QuickInitAndAddDataWithMeshComponent final
{
public:
	class UObject*                                Data;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UMeshComponent*                         MeshComponent;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_QuickInitAndAddDataWithMeshComponent) == 0x000008, "Wrong alignment on CharRenderingComponent_C_QuickInitAndAddDataWithMeshComponent");
static_assert(sizeof(CharRenderingComponent_C_QuickInitAndAddDataWithMeshComponent) == 0x000018, "Wrong size on CharRenderingComponent_C_QuickInitAndAddDataWithMeshComponent");
static_assert(offsetof(CharRenderingComponent_C_QuickInitAndAddDataWithMeshComponent, Data) == 0x000000, "Member 'CharRenderingComponent_C_QuickInitAndAddDataWithMeshComponent::Data' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_QuickInitAndAddDataWithMeshComponent, MeshComponent) == 0x000008, "Member 'CharRenderingComponent_C_QuickInitAndAddDataWithMeshComponent::MeshComponent' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_QuickInitAndAddDataWithMeshComponent, ReturnValue) == 0x000010, "Member 'CharRenderingComponent_C_QuickInitAndAddDataWithMeshComponent::ReturnValue' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.GetInWater
// 0x0001 (0x0001 - 0x0000)
struct CharRenderingComponent_C_GetInWater final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper)
};
static_assert(alignof(CharRenderingComponent_C_GetInWater) == 0x000001, "Wrong alignment on CharRenderingComponent_C_GetInWater");
static_assert(sizeof(CharRenderingComponent_C_GetInWater) == 0x000001, "Wrong size on CharRenderingComponent_C_GetInWater");
static_assert(offsetof(CharRenderingComponent_C_GetInWater, ReturnValue) == 0x000000, "Member 'CharRenderingComponent_C_GetInWater::ReturnValue' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.SetEffectProgress
// 0x0008 (0x0008 - 0x0000)
struct CharRenderingComponent_C_SetEffectProgress final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HandleId;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_SetEffectProgress) == 0x000004, "Wrong alignment on CharRenderingComponent_C_SetEffectProgress");
static_assert(sizeof(CharRenderingComponent_C_SetEffectProgress) == 0x000008, "Wrong size on CharRenderingComponent_C_SetEffectProgress");
static_assert(offsetof(CharRenderingComponent_C_SetEffectProgress, Progress) == 0x000000, "Member 'CharRenderingComponent_C_SetEffectProgress::Progress' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_SetEffectProgress, HandleId) == 0x000004, "Member 'CharRenderingComponent_C_SetEffectProgress::HandleId' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.RemoveComponentByCase
// 0x0001 (0x0001 - 0x0000)
struct CharRenderingComponent_C_RemoveComponentByCase final
{
public:
	ECharacterControllerCaseType                  CaseType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_RemoveComponentByCase) == 0x000001, "Wrong alignment on CharRenderingComponent_C_RemoveComponentByCase");
static_assert(sizeof(CharRenderingComponent_C_RemoveComponentByCase) == 0x000001, "Wrong size on CharRenderingComponent_C_RemoveComponentByCase");
static_assert(offsetof(CharRenderingComponent_C_RemoveComponentByCase, CaseType) == 0x000000, "Member 'CharRenderingComponent_C_RemoveComponentByCase::CaseType' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.SetBodyEffectOpacity
// 0x0004 (0x0004 - 0x0000)
struct CharRenderingComponent_C_SetBodyEffectOpacity final
{
public:
	float                                         Opacity;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_SetBodyEffectOpacity) == 0x000004, "Wrong alignment on CharRenderingComponent_C_SetBodyEffectOpacity");
static_assert(sizeof(CharRenderingComponent_C_SetBodyEffectOpacity) == 0x000004, "Wrong size on CharRenderingComponent_C_SetBodyEffectOpacity");
static_assert(offsetof(CharRenderingComponent_C_SetBodyEffectOpacity, Opacity) == 0x000000, "Member 'CharRenderingComponent_C_SetBodyEffectOpacity::Opacity' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.QuickInitAndAddDataGroupWithMeshComponent
// 0x0018 (0x0018 - 0x0000)
struct CharRenderingComponent_C_QuickInitAndAddDataGroupWithMeshComponent final
{
public:
	class UObject*                                Data;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         MeshComponent;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_QuickInitAndAddDataGroupWithMeshComponent) == 0x000008, "Wrong alignment on CharRenderingComponent_C_QuickInitAndAddDataGroupWithMeshComponent");
static_assert(sizeof(CharRenderingComponent_C_QuickInitAndAddDataGroupWithMeshComponent) == 0x000018, "Wrong size on CharRenderingComponent_C_QuickInitAndAddDataGroupWithMeshComponent");
static_assert(offsetof(CharRenderingComponent_C_QuickInitAndAddDataGroupWithMeshComponent, Data) == 0x000000, "Member 'CharRenderingComponent_C_QuickInitAndAddDataGroupWithMeshComponent::Data' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_QuickInitAndAddDataGroupWithMeshComponent, MeshComponent) == 0x000008, "Member 'CharRenderingComponent_C_QuickInitAndAddDataGroupWithMeshComponent::MeshComponent' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_QuickInitAndAddDataGroupWithMeshComponent, ReturnValue) == 0x000010, "Member 'CharRenderingComponent_C_QuickInitAndAddDataGroupWithMeshComponent::ReturnValue' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.SetDecalShadowEnabled
// 0x0001 (0x0001 - 0x0000)
struct CharRenderingComponent_C_SetDecalShadowEnabled final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharRenderingComponent_C_SetDecalShadowEnabled) == 0x000001, "Wrong alignment on CharRenderingComponent_C_SetDecalShadowEnabled");
static_assert(sizeof(CharRenderingComponent_C_SetDecalShadowEnabled) == 0x000001, "Wrong size on CharRenderingComponent_C_SetDecalShadowEnabled");
static_assert(offsetof(CharRenderingComponent_C_SetDecalShadowEnabled, Enable) == 0x000000, "Member 'CharRenderingComponent_C_SetDecalShadowEnabled::Enable' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.AddComponentForDecalShadow
// 0x0018 (0x0018 - 0x0000)
struct CharRenderingComponent_C_AddComponentForDecalShadow final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Comp;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_AddComponentForDecalShadow) == 0x000008, "Wrong alignment on CharRenderingComponent_C_AddComponentForDecalShadow");
static_assert(sizeof(CharRenderingComponent_C_AddComponentForDecalShadow) == 0x000018, "Wrong size on CharRenderingComponent_C_AddComponentForDecalShadow");
static_assert(offsetof(CharRenderingComponent_C_AddComponentForDecalShadow, Param_Name) == 0x000000, "Member 'CharRenderingComponent_C_AddComponentForDecalShadow::Param_Name' has a wrong offset!");
static_assert(offsetof(CharRenderingComponent_C_AddComponentForDecalShadow, Comp) == 0x000010, "Member 'CharRenderingComponent_C_AddComponentForDecalShadow::Comp' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.RemoveComponentFromDecalShadow
// 0x0010 (0x0010 - 0x0000)
struct CharRenderingComponent_C_RemoveComponentFromDecalShadow final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_RemoveComponentFromDecalShadow) == 0x000008, "Wrong alignment on CharRenderingComponent_C_RemoveComponentFromDecalShadow");
static_assert(sizeof(CharRenderingComponent_C_RemoveComponentFromDecalShadow) == 0x000010, "Wrong size on CharRenderingComponent_C_RemoveComponentFromDecalShadow");
static_assert(offsetof(CharRenderingComponent_C_RemoveComponentFromDecalShadow, Param_Name) == 0x000000, "Member 'CharRenderingComponent_C_RemoveComponentFromDecalShadow::Param_Name' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.ReceiveSeqTick
// 0x0004 (0x0004 - 0x0000)
struct CharRenderingComponent_C_ReceiveSeqTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_ReceiveSeqTick) == 0x000004, "Wrong alignment on CharRenderingComponent_C_ReceiveSeqTick");
static_assert(sizeof(CharRenderingComponent_C_ReceiveSeqTick) == 0x000004, "Wrong size on CharRenderingComponent_C_ReceiveSeqTick");
static_assert(offsetof(CharRenderingComponent_C_ReceiveSeqTick, DeltaSeconds) == 0x000000, "Member 'CharRenderingComponent_C_ReceiveSeqTick::DeltaSeconds' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.SetLogicOwner
// 0x0008 (0x0008 - 0x0000)
struct CharRenderingComponent_C_SetLogicOwner final
{
public:
	class AActor*                                 Owner;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_SetLogicOwner) == 0x000008, "Wrong alignment on CharRenderingComponent_C_SetLogicOwner");
static_assert(sizeof(CharRenderingComponent_C_SetLogicOwner) == 0x000008, "Wrong size on CharRenderingComponent_C_SetLogicOwner");
static_assert(offsetof(CharRenderingComponent_C_SetLogicOwner, Owner) == 0x000000, "Member 'CharRenderingComponent_C_SetLogicOwner::Owner' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.GetTimeDilation
// 0x0004 (0x0004 - 0x0000)
struct CharRenderingComponent_C_GetTimeDilation final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_GetTimeDilation) == 0x000004, "Wrong alignment on CharRenderingComponent_C_GetTimeDilation");
static_assert(sizeof(CharRenderingComponent_C_GetTimeDilation) == 0x000004, "Wrong size on CharRenderingComponent_C_GetTimeDilation");
static_assert(offsetof(CharRenderingComponent_C_GetTimeDilation, ReturnValue) == 0x000000, "Member 'CharRenderingComponent_C_GetTimeDilation::ReturnValue' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.SetRealtimeShadowEnabled
// 0x0001 (0x0001 - 0x0000)
struct CharRenderingComponent_C_SetRealtimeShadowEnabled final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharRenderingComponent_C_SetRealtimeShadowEnabled) == 0x000001, "Wrong alignment on CharRenderingComponent_C_SetRealtimeShadowEnabled");
static_assert(sizeof(CharRenderingComponent_C_SetRealtimeShadowEnabled) == 0x000001, "Wrong size on CharRenderingComponent_C_SetRealtimeShadowEnabled");
static_assert(offsetof(CharRenderingComponent_C_SetRealtimeShadowEnabled, Enable) == 0x000000, "Member 'CharRenderingComponent_C_SetRealtimeShadowEnabled::Enable' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.SetDecalShadowOpacity
// 0x0004 (0x0004 - 0x0000)
struct CharRenderingComponent_C_SetDecalShadowOpacity final
{
public:
	float                                         Opacity;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_SetDecalShadowOpacity) == 0x000004, "Wrong alignment on CharRenderingComponent_C_SetDecalShadowOpacity");
static_assert(sizeof(CharRenderingComponent_C_SetDecalShadowOpacity) == 0x000004, "Wrong size on CharRenderingComponent_C_SetDecalShadowOpacity");
static_assert(offsetof(CharRenderingComponent_C_SetDecalShadowOpacity, Opacity) == 0x000000, "Member 'CharRenderingComponent_C_SetDecalShadowOpacity::Opacity' has a wrong offset!");

// Function CharRenderingComponent.CharRenderingComponent_C.SetRealtimeShadowOpacity
// 0x0004 (0x0004 - 0x0000)
struct CharRenderingComponent_C_SetRealtimeShadowOpacity final
{
public:
	float                                         Opacity;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharRenderingComponent_C_SetRealtimeShadowOpacity) == 0x000004, "Wrong alignment on CharRenderingComponent_C_SetRealtimeShadowOpacity");
static_assert(sizeof(CharRenderingComponent_C_SetRealtimeShadowOpacity) == 0x000004, "Wrong size on CharRenderingComponent_C_SetRealtimeShadowOpacity");
static_assert(offsetof(CharRenderingComponent_C_SetRealtimeShadowOpacity, Opacity) == 0x000000, "Member 'CharRenderingComponent_C_SetRealtimeShadowOpacity::Opacity' has a wrong offset!");

}

