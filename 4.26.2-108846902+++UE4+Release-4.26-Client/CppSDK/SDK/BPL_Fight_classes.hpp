#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_Fight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPL_Fight.BPL_Fight_C
// 0x0000 (0x0030 - 0x0030)
class UBPL_Fight_C final : public UBlueprintFunctionLibrary
{
public:
	static void _dP_H_(class ATsBaseCharacter_C* _n_a_, int32 Handle_, class UObject* __WorldContext);
	static void _nP_H_(class ATsBaseCharacter_C* _n_a, class UPD_CharacterControllerData_C* P_Mn, class UObject* __WorldContext, int32* Handle);
	static void ____h_P__(const struct FRotator& ___l, const struct FVector& __P_, float _l, float __, float ___0, class UObject* __WorldContext, struct FVector* P__);
	static void _______(float ______, float ___, class UCurveVector* ____, class UObject* __WorldContext, struct FVector* ____0);
	static void _____(float Param______, float ___, class UCurveFloat* __, class UObject* __WorldContext, float* ____0);
	static void __l_(float Input, class UObject* __WorldContext, float* Output);
	static bool ___K(class UObject* Context, const struct FVector& Start, const struct FVector& End, ETraceTypeQuery TraceChannel, bool bTraceComplex, EDrawDebugTrace DrawDebugType, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, class UObject* __WorldContext, struct FHitResult* OutHit);
	static void __Actorh_P__(class AActor* Actor, float _l, float __, float ___0, class UObject* __WorldContext, struct FVector* P__);
	static void __8___(class UObject* __WorldContext, class UBP_MainGameInstance_C** AsBP_Main_Game_Instance);
	static bool ____(class ATsBaseCharacter_C* _r, const struct FGameplayTag& __, class UObject* __WorldContext);
	static void _d__(class ATsBaseCharacter_C* _r, const struct FGameplayTag& __, class UObject* __WorldContext);
	static void _____0(class ATsBaseCharacter_C* _r, const struct FGameplayTag& __, class UObject* __WorldContext);

	static void ________(float _r1____, float _r2____, class UObject* __WorldContext, float* Result);

	void __GE(class ATsBaseCharacter_C* ___, class ATsBaseCharacter_C* __, int32 GE_I_, const struct FGameplayTagContainer& __AssetTags, const struct FGameplayTagContainer& __GrantedTags, int32 Bp, float Duration, class UClass* GE___, const struct FKuroGameplayParameterContainer& GE__p, class UObject* __WorldContext, struct FActiveGameplayEffectHandle* ActiveHandle) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPL_Fight_C">();
	}
	static class UBPL_Fight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPL_Fight_C>();
	}
};
static_assert(alignof(UBPL_Fight_C) == 0x000008, "Wrong alignment on UBPL_Fight_C");
static_assert(sizeof(UBPL_Fight_C) == 0x000030, "Wrong size on UBPL_Fight_C");

}

