#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_NPC

#include "Basic.hpp"

#include "SInteractionConfig_structs.hpp"
#include "SEntityConfig_structs.hpp"


namespace SDK::Params
{

// Function BPI_NPC.BPI_NPC_C.GetNPCName
// 0x0010 (0x0010 - 0x0000)
struct BPI_NPC_C_GetNPCName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BPI_NPC_C_GetNPCName) == 0x000008, "Wrong alignment on BPI_NPC_C_GetNPCName");
static_assert(sizeof(BPI_NPC_C_GetNPCName) == 0x000010, "Wrong size on BPI_NPC_C_GetNPCName");
static_assert(offsetof(BPI_NPC_C_GetNPCName, ReturnValue) == 0x000000, "Member 'BPI_NPC_C_GetNPCName::ReturnValue' has a wrong offset!");

// Function BPI_NPC.BPI_NPC_C.GetCurrInteractionConfig
// 0x00D0 (0x00D0 - 0x0000)
struct BPI_NPC_C_GetCurrInteractionConfig final
{
public:
	struct FSInteractionConfig                    ReturnValue;                                       // 0x0000(0x00D0)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BPI_NPC_C_GetCurrInteractionConfig) == 0x000008, "Wrong alignment on BPI_NPC_C_GetCurrInteractionConfig");
static_assert(sizeof(BPI_NPC_C_GetCurrInteractionConfig) == 0x0000D0, "Wrong size on BPI_NPC_C_GetCurrInteractionConfig");
static_assert(offsetof(BPI_NPC_C_GetCurrInteractionConfig, ReturnValue) == 0x000000, "Member 'BPI_NPC_C_GetCurrInteractionConfig::ReturnValue' has a wrong offset!");

// Function BPI_NPC.BPI_NPC_C.TriggerNPCInteraction
// 0x0001 (0x0001 - 0x0000)
struct BPI_NPC_C_TriggerNPCInteraction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_NPC_C_TriggerNPCInteraction) == 0x000001, "Wrong alignment on BPI_NPC_C_TriggerNPCInteraction");
static_assert(sizeof(BPI_NPC_C_TriggerNPCInteraction) == 0x000001, "Wrong size on BPI_NPC_C_TriggerNPCInteraction");
static_assert(offsetof(BPI_NPC_C_TriggerNPCInteraction, ReturnValue) == 0x000000, "Member 'BPI_NPC_C_TriggerNPCInteraction::ReturnValue' has a wrong offset!");

// Function BPI_NPC.BPI_NPC_C.IsNPCInteractable
// 0x0001 (0x0001 - 0x0000)
struct BPI_NPC_C_IsNPCInteractable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_NPC_C_IsNPCInteractable) == 0x000001, "Wrong alignment on BPI_NPC_C_IsNPCInteractable");
static_assert(sizeof(BPI_NPC_C_IsNPCInteractable) == 0x000001, "Wrong size on BPI_NPC_C_IsNPCInteractable");
static_assert(offsetof(BPI_NPC_C_IsNPCInteractable, ReturnValue) == 0x000000, "Member 'BPI_NPC_C_IsNPCInteractable::ReturnValue' has a wrong offset!");

// Function BPI_NPC.BPI_NPC_C.ApplyEntityConfig
// 0x02A8 (0x02A8 - 0x0000)
struct BPI_NPC_C_ApplyEntityConfig final
{
public:
	struct FSEntityConfig                         InConfig;                                          // 0x0000(0x02A0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x02A0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_NPC_C_ApplyEntityConfig) == 0x000008, "Wrong alignment on BPI_NPC_C_ApplyEntityConfig");
static_assert(sizeof(BPI_NPC_C_ApplyEntityConfig) == 0x0002A8, "Wrong size on BPI_NPC_C_ApplyEntityConfig");
static_assert(offsetof(BPI_NPC_C_ApplyEntityConfig, InConfig) == 0x000000, "Member 'BPI_NPC_C_ApplyEntityConfig::InConfig' has a wrong offset!");
static_assert(offsetof(BPI_NPC_C_ApplyEntityConfig, ReturnValue) == 0x0002A0, "Member 'BPI_NPC_C_ApplyEntityConfig::ReturnValue' has a wrong offset!");

// Function BPI_NPC.BPI_NPC_C.NPC(Þ‹ö
// 0x000C (0x000C - 0x0000)
struct BPI_NPC_C_NPC______ final
{
public:
	class FName                                   EventID;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_NPC_C_NPC______) == 0x000004, "Wrong alignment on BPI_NPC_C_NPC______");
static_assert(sizeof(BPI_NPC_C_NPC______) == 0x00000C, "Wrong size on BPI_NPC_C_NPC______");
static_assert(offsetof(BPI_NPC_C_NPC______, EventID) == 0x000000, "Member 'BPI_NPC_C_NPC______::EventID' has a wrong offset!");

}

