#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SceneEffectStatePostVolume

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SceneEffectStatePostVolume.SceneEffectStatePostVolume_C
// 0x0018 (0x02C0 - 0x02A8)
class ASceneEffectStatePostVolume_C final : public AActor
{
public:
	class UKuroPostProcessComponent*              KuroPostProcess;                                   // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Enabled;                                           // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetAirWall(float Param_Value);
	void SetToxicFog(float Param_Value);
	void EnableVolume();
	void DisableVolume();
	void SetEffect(float Param_Value);
	void SetWall_Debug();
	void SetToxicFog_Debug();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SceneEffectStatePostVolume_C">();
	}
	static class ASceneEffectStatePostVolume_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASceneEffectStatePostVolume_C>();
	}
};
static_assert(alignof(ASceneEffectStatePostVolume_C) == 0x000008, "Wrong alignment on ASceneEffectStatePostVolume_C");
static_assert(sizeof(ASceneEffectStatePostVolume_C) == 0x0002C0, "Wrong size on ASceneEffectStatePostVolume_C");
static_assert(offsetof(ASceneEffectStatePostVolume_C, KuroPostProcess) == 0x0002A8, "Member 'ASceneEffectStatePostVolume_C::KuroPostProcess' has a wrong offset!");
static_assert(offsetof(ASceneEffectStatePostVolume_C, DefaultSceneRoot) == 0x0002B0, "Member 'ASceneEffectStatePostVolume_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ASceneEffectStatePostVolume_C, Enabled) == 0x0002B8, "Member 'ASceneEffectStatePostVolume_C::Enabled' has a wrong offset!");
static_assert(offsetof(ASceneEffectStatePostVolume_C, Value) == 0x0002BC, "Member 'ASceneEffectStatePostVolume_C::Value' has a wrong offset!");

}

