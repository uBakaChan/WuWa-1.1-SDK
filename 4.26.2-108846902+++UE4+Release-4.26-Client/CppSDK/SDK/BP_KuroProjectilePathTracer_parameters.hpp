#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KuroProjectilePathTracer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_KuroProjectilePathTracer.BP_KuroProjectilePathTracer_C.UpdateDataAsset
// 0x0001 (0x0001 - 0x0000)
struct BP_KuroProjectilePathTracer_C_UpdateDataAsset final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_KuroProjectilePathTracer_C_UpdateDataAsset) == 0x000001, "Wrong alignment on BP_KuroProjectilePathTracer_C_UpdateDataAsset");
static_assert(sizeof(BP_KuroProjectilePathTracer_C_UpdateDataAsset) == 0x000001, "Wrong size on BP_KuroProjectilePathTracer_C_UpdateDataAsset");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDataAsset, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_KuroProjectilePathTracer_C_UpdateDataAsset::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_KuroProjectilePathTracer.BP_KuroProjectilePathTracer_C.SetPredictProjectileInfo
// 0x0148 (0x0148 - 0x0000)
struct BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        OutPathPosition;                                   // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                OutLastTraceDestination;                           // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             OutHit;                                            // 0x0024(0x0094)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo) == 0x000008, "Wrong alignment on BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo");
static_assert(sizeof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo) == 0x000148, "Wrong size on BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo, ReturnValue) == 0x000000, "Member 'BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo, OutPathPosition) == 0x000008, "Member 'BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo::OutPathPosition' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo, OutLastTraceDestination) == 0x000018, "Member 'BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo::OutLastTraceDestination' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo, OutHit) == 0x000024, "Member 'BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo::OutHit' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo, CallFunc_BreakHitResult_bBlockingHit) == 0x0000B8, "Member 'BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000B9, "Member 'BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo, CallFunc_BreakHitResult_Time) == 0x0000BC, "Member 'BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo, CallFunc_BreakHitResult_Distance) == 0x0000C0, "Member 'BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo, CallFunc_BreakHitResult_Location) == 0x0000C4, "Member 'BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo, CallFunc_BreakHitResult_ImpactPoint) == 0x0000D0, "Member 'BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo, CallFunc_BreakHitResult_Normal) == 0x0000DC, "Member 'BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo, CallFunc_BreakHitResult_ImpactNormal) == 0x0000E8, "Member 'BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo, CallFunc_BreakHitResult_PhysMat) == 0x0000F8, "Member 'BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo, CallFunc_BreakHitResult_HitActor) == 0x000100, "Member 'BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo, CallFunc_BreakHitResult_HitComponent) == 0x000108, "Member 'BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo, CallFunc_BreakHitResult_HitBoneName) == 0x000110, "Member 'BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo, CallFunc_BreakHitResult_HitItem) == 0x00011C, "Member 'BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo, CallFunc_BreakHitResult_FaceIndex) == 0x000120, "Member 'BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo, CallFunc_BreakHitResult_TraceStart) == 0x000124, "Member 'BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo, CallFunc_BreakHitResult_TraceEnd) == 0x000130, "Member 'BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo, CallFunc_Array_Length_ReturnValue) == 0x00013C, "Member 'BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000140, "Member 'BP_KuroProjectilePathTracer_C_SetPredictProjectileInfo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_KuroProjectilePathTracer.BP_KuroProjectilePathTracer_C.UpdateDisplay
// 0x0380 (0x0380 - 0x0000)
struct BP_KuroProjectilePathTracer_C_UpdateDisplay final
{
public:
	TArray<struct FTransform>                     TempInstanceArray;                                 // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         TempCount;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempDistance;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakRotIntoAxes_X;                       // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakRotIntoAxes_Y;                       // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakRotIntoAxes_Z;                       // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_1;                // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0100(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x01A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult_1;    // 0x01D0(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ___bool_Variable;                                  // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_266[0x2];                                      // 0x0266(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable;                                   // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x027D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27E[0x2];                                      // 0x027E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_AddInstances_ReturnValue;                 // 0x0290(0x0010)(ReferenceParm)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x02A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A6[0xA];                                      // 0x02A6(0x000A)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue; // 0x02B0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x3];                                      // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x02E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0308(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_2;                // 0x0314(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x0320(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue_1;              // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0340(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KuroProjectilePathTracer_C_UpdateDisplay) == 0x000010, "Wrong alignment on BP_KuroProjectilePathTracer_C_UpdateDisplay");
static_assert(sizeof(BP_KuroProjectilePathTracer_C_UpdateDisplay) == 0x000380, "Wrong size on BP_KuroProjectilePathTracer_C_UpdateDisplay");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, TempInstanceArray) == 0x000000, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::TempInstanceArray' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, TempCount) == 0x000010, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::TempCount' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, TempDistance) == 0x000014, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::TempDistance' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_MakeVector_ReturnValue_1) == 0x000024, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_MakeRotFromZ_ReturnValue) == 0x000030, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_GetUpVector_ReturnValue) == 0x00003C, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_GetForwardVector_ReturnValue) == 0x000048, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_RotateAngleAxis_ReturnValue) == 0x000054, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_MakeRotFromXZ_ReturnValue) == 0x000060, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_BreakRotIntoAxes_X) == 0x00006C, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_BreakRotIntoAxes_X' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_BreakRotIntoAxes_Y) == 0x000078, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_BreakRotIntoAxes_Y' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_BreakRotIntoAxes_Z) == 0x000084, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_BreakRotIntoAxes_Z' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_GetUpVector_ReturnValue_1) == 0x000090, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_GetUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x00009C, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000A8, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000B4, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B8, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C4, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000100, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_Add_FloatFloat_ReturnValue) == 0x000194, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000198, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00019C, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_MakeTransform_ReturnValue_1) == 0x0001A0, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_K2_SetWorldTransform_SweepHitResult_1) == 0x0001D0, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_K2_SetWorldTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, ___bool_Variable) == 0x000264, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::___bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_Not_PreBool_ReturnValue) == 0x000265, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_Array_Length_ReturnValue) == 0x000268, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, ___int_Variable) == 0x00026C, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::___int_Variable' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_Greater_IntInt_ReturnValue) == 0x000270, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000274, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_Add_IntInt_ReturnValue) == 0x000278, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00027C, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_BooleanAND_ReturnValue) == 0x00027D, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000280, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_GetSplineLength_ReturnValue) == 0x000284, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000288, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00028C, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_AddInstances_ReturnValue) == 0x000290, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_AddInstances_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_Abs_ReturnValue) == 0x0002A0, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_Less_FloatFloat_ReturnValue) == 0x0002A4, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0002A5, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue) == 0x0002B0, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_BooleanAND_ReturnValue_1) == 0x0002E0, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_BreakTransform_Location) == 0x0002E4, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_BreakTransform_Rotation) == 0x0002F0, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_BreakTransform_Scale) == 0x0002FC, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_GetForwardVector_ReturnValue_1) == 0x000308, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_GetUpVector_ReturnValue_2) == 0x000314, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_GetUpVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x000320, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_MakeRotFromXZ_ReturnValue_1) == 0x00032C, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_MakeRotFromXZ_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_MakeTransform_ReturnValue_2) == 0x000340, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_SetStaticMesh_ReturnValue) == 0x000370, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_UpdateDisplay, CallFunc_Array_Add_ReturnValue) == 0x000374, "Member 'BP_KuroProjectilePathTracer_C_UpdateDisplay::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_KuroProjectilePathTracer.BP_KuroProjectilePathTracer_C.SetVisible
// 0x0001 (0x0001 - 0x0000)
struct BP_KuroProjectilePathTracer_C_SetVisible final
{
public:
	bool                                          IsVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_KuroProjectilePathTracer_C_SetVisible) == 0x000001, "Wrong alignment on BP_KuroProjectilePathTracer_C_SetVisible");
static_assert(sizeof(BP_KuroProjectilePathTracer_C_SetVisible) == 0x000001, "Wrong size on BP_KuroProjectilePathTracer_C_SetVisible");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_SetVisible, IsVisible) == 0x000000, "Member 'BP_KuroProjectilePathTracer_C_SetVisible::IsVisible' has a wrong offset!");

// Function BP_KuroProjectilePathTracer.BP_KuroProjectilePathTracer_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_KuroProjectilePathTracer_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KuroProjectilePathTracer_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_KuroProjectilePathTracer_C_ReceiveTick");
static_assert(sizeof(BP_KuroProjectilePathTracer_C_ReceiveTick) == 0x000004, "Wrong size on BP_KuroProjectilePathTracer_C_ReceiveTick");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_KuroProjectilePathTracer_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_KuroProjectilePathTracer.BP_KuroProjectilePathTracer_C.ExecuteUbergraph_BP_KuroProjectilePathTracer
// 0x0008 (0x0008 - 0x0000)
struct BP_KuroProjectilePathTracer_C_ExecuteUbergraph_BP_KuroProjectilePathTracer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KuroProjectilePathTracer_C_ExecuteUbergraph_BP_KuroProjectilePathTracer) == 0x000004, "Wrong alignment on BP_KuroProjectilePathTracer_C_ExecuteUbergraph_BP_KuroProjectilePathTracer");
static_assert(sizeof(BP_KuroProjectilePathTracer_C_ExecuteUbergraph_BP_KuroProjectilePathTracer) == 0x000008, "Wrong size on BP_KuroProjectilePathTracer_C_ExecuteUbergraph_BP_KuroProjectilePathTracer");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_ExecuteUbergraph_BP_KuroProjectilePathTracer, EntryPoint) == 0x000000, "Member 'BP_KuroProjectilePathTracer_C_ExecuteUbergraph_BP_KuroProjectilePathTracer::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_KuroProjectilePathTracer_C_ExecuteUbergraph_BP_KuroProjectilePathTracer, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_KuroProjectilePathTracer_C_ExecuteUbergraph_BP_KuroProjectilePathTracer::K2Node_Event_DeltaSeconds' has a wrong offset!");

}

