#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MO1DujiaoshouMd00001

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "TsBaseCharacter_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MO1DujiaoshouMd00001.BP_MO1DujiaoshouMd00001_C
// 0x0040 (0x07C0 - 0x0780)
class ABP_MO1DujiaoshouMd00001_C final : public ATsBaseCharacter_C
{
public:
	uint8                                         Pad_771[0x7];                                      // 0x0771(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCapsuleComponent*                      Bone_L_Yachi;                                      // 0x0778(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Bone_R_Yachi;                                      // 0x0780(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Bip001Spine2;                                      // 0x0788(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Bip001Spine;                                       // 0x0790(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         SocketNames;                                       // 0x0798(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector>                        Size;                                              // 0x07A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MO1DujiaoshouMd00001_C">();
	}
	static class ABP_MO1DujiaoshouMd00001_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MO1DujiaoshouMd00001_C>();
	}
};
static_assert(alignof(ABP_MO1DujiaoshouMd00001_C) == 0x000010, "Wrong alignment on ABP_MO1DujiaoshouMd00001_C");
static_assert(sizeof(ABP_MO1DujiaoshouMd00001_C) == 0x0007C0, "Wrong size on ABP_MO1DujiaoshouMd00001_C");
static_assert(offsetof(ABP_MO1DujiaoshouMd00001_C, Bone_L_Yachi) == 0x000778, "Member 'ABP_MO1DujiaoshouMd00001_C::Bone_L_Yachi' has a wrong offset!");
static_assert(offsetof(ABP_MO1DujiaoshouMd00001_C, Bone_R_Yachi) == 0x000780, "Member 'ABP_MO1DujiaoshouMd00001_C::Bone_R_Yachi' has a wrong offset!");
static_assert(offsetof(ABP_MO1DujiaoshouMd00001_C, Bip001Spine2) == 0x000788, "Member 'ABP_MO1DujiaoshouMd00001_C::Bip001Spine2' has a wrong offset!");
static_assert(offsetof(ABP_MO1DujiaoshouMd00001_C, Bip001Spine) == 0x000790, "Member 'ABP_MO1DujiaoshouMd00001_C::Bip001Spine' has a wrong offset!");
static_assert(offsetof(ABP_MO1DujiaoshouMd00001_C, SocketNames) == 0x000798, "Member 'ABP_MO1DujiaoshouMd00001_C::SocketNames' has a wrong offset!");
static_assert(offsetof(ABP_MO1DujiaoshouMd00001_C, Size) == 0x0007A8, "Member 'ABP_MO1DujiaoshouMd00001_C::Size' has a wrong offset!");

}

