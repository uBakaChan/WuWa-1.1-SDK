#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KFC_AICommon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ECamp_structs.hpp"
#include "ERelation_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass KFC_AICommon.KFC_AICommon_C
// 0x0000 (0x0030 - 0x0030)
class UKFC_AICommon_C final : public UBlueprintFunctionLibrary
{
public:
	static void ___________0(class AActor* ___r, class AActor* ___r_0, class UObject* __WorldContext, float* Param_____);
	static void ______(class AActor* AI_a, class AActor* ___a, class UObject* __WorldContext, float* Zero_____, bool* Param______);
	static void _____________P_LK____(class ACharacter* As_Base_Character, class UObject* __WorldContext, struct FVector* Param_____, struct FVector* ___, struct FVector* ___e__, bool* _c___, bool* _____e, float* __, float* ___l__, EMovementMode* Param______0);
	static void __y__4__(class FName G_ID, class UDataTable* G_D_h, TArray<class AActor*>& _XActorp_, TArray<class FName>& _X__p_, class UObject* __WorldContext);
	static void Eighta_6l____0(class ATsBaseCharacter_C* BaseCharacter, class UObject* __WorldContext, bool* ______);
	static void _Star_6l____0(class ATsBaseCharacter_C* __base_a, float _l__, const struct FVector& _StarP_, class UObject* __WorldContext, bool* _Star_6l_Minus);
	static void _b__(class ATsBaseCharacter_C* Character, class UObject* __WorldContext);
	static void Eighta_6l___(class ATsBaseCharacter_C* __Character, float _l__, class ATsBaseCharacter_C* _h_a, class UObject* __WorldContext, bool* ______);
	static void _n__Int(class ATsBaseCharacter_C* _r, const class FString& Key, int32 _, class UObject* __WorldContext);
	static void _____Int(class ATsBaseCharacter_C* _r, const class FString& Key, class UObject* __WorldContext, int32* _);
	static void ______P___(const struct FVector& __P_, class AActor* ___r, class UObject* __WorldContext, float* Param_____);
	static void ____sa__(bool _____e_0, class ATsBaseCharacter_C* __Character, class FName ______, class AActor* Param_____, class UObject* __WorldContext);
	static void __________2D(class AActor* ___r, class AActor* ___r_0, class UObject* __WorldContext, float* Param_____);
	static void _e_Z(const struct FVector& InVec, class UObject* __WorldContext, struct FVector* OutVec);
	static void Five___(ECamp __5_, ECamp __5__0, class UDataTable* Five_s_pn, class UObject* __WorldContext, ERelation* S_, int32* S_tp);
	static void GetPathToTarget(const struct FVector& InEndPos, const struct FVector& InStartPos, class UObject* __WorldContext, TArray<struct FVector>* OutPathpoint);
	static void ______0(const struct FVector& __, const struct FVector& ___, const struct FVector& Param_____, class UObject* __WorldContext, bool* Param______);
	static void Get_Pos_in_Path(TArray<struct FSPointsRow>& InRow, bool bXDir, bool bYDir, class UObject* __WorldContext, TArray<struct FVector>* OutPoints);
	static void _e__S__(class ATsBaseCharacter_C* ___a1, class ATsBaseCharacter_C* ___a2, class UObject* __WorldContext, float* __);
	static void Stari__(class UObject* __WorldContext);
	static void _____(class ATsBaseCharacter_C* Param_____, class ATsBaseCharacter_C* Param______0, class UObject* __WorldContext, float* ___);
	static void _Star_6l___(class UObject* __WorldContext, bool* _Star_6l_Minus);
	static void __Minus_(float Param_____, float Param______0, class UObject* __WorldContext, float* Param___Minus_);
	static void __Ol_______P_(float __, float _l, float ___0, const struct FVector& ___1, const struct FVector& ___, bool ThreeD_l, class UObject* __WorldContext, struct FVector* P__);
	static void __P______(const struct FVector& W_P_, const struct FVector& ___P_, class ATsBaseCharacter_C* __, class UObject* __WorldContext, bool* P____, struct FVector* __P_, float* __P_______);
	static void _n__Long(class ATsBaseCharacter_C* _r, const class FString& Key, int64 _, class UObject* __WorldContext);
	static void ____Long(class ATsBaseCharacter_C* _r, const class FString& Key, class UObject* __WorldContext, int64* _);
	static void ____EntityId(class ATsBaseCharacter_C* _r, const class FString& Key, class UObject* __WorldContext, int32* _);
	static void _n__EntityId(class ATsBaseCharacter_C* _r, const class FString& Key, int32 _, class UObject* __WorldContext);
	static void ____(int32 ____ID, class UObject* __WorldContext);
	static void ___CD__h__(class AAIC_AICommon_C* AIC___a, int32 Cd_Id, const TDelegate<void(bool bContent)> __, class UObject* __WorldContext);
	static void _i_M__p(float ____, float _____0, float _____1, class UObject* __WorldContext, float* _____2, float* __Mn, float* _____3, float* _____4);
	static void __________(class ACharacter* ___a, class ACharacter* ___a_0, bool _e__S, class UObject* __WorldContext, float* ____);
	static void ___Base___(class ATsBaseCharacter_C* __, int32 __id, class UObject* __WorldContext, float* ___);
	static void __Current___(class ATsBaseCharacter_C* __, int32 __id, class UObject* __WorldContext, float* ___);

	void Stari__l_(const struct FRotator& ___lS, float TargetInterpSpeed_Const_, float ActorInterpSpeed_Smooth_, class ATsBaseCharacter_C* _l_a, class UObject* __WorldContext);
	bool ______1(class ATsBaseCharacter_C* BaseCharacter, bool _c___, bool _____e, class UObject* __WorldContext);
	class UKuroBooleanEventBinder* __AIC__(class UObject* AIC___a, const TDelegate<void(bool bContent)>& Event, class UObject* __WorldContext);
	class UKuroPerceptionEventBinder* ___h____(class UObject* AIC___a, const TDelegate<void(TArray<class AActor*>& AddActor, TArray<class AActor*>& RemoveActor, TArray<int32>& RemoveActorIds, int32 Num)>& Event1, class UObject* __WorldContext);
	class UKuroActorEventBinder* __i_4O__(class UObject* AIC___a, const TDelegate<void(class AActor* Actor, bool bContent)>& Event, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"KFC_AICommon_C">();
	}
	static class UKFC_AICommon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKFC_AICommon_C>();
	}
};
static_assert(alignof(UKFC_AICommon_C) == 0x000008, "Wrong alignment on UKFC_AICommon_C");
static_assert(sizeof(UKFC_AICommon_C) == 0x000030, "Wrong size on UKFC_AICommon_C");

}

