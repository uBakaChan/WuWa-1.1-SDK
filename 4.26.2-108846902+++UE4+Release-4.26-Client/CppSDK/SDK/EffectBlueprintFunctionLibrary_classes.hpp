#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EffectBlueprintFunctionLibrary

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "AkAudio_structs.hpp"
#include "EEffectStatisticsSortType_structs.hpp"


namespace SDK
{

// TypeScriptGeneratedClass EffectBlueprintFunctionLibrary.EffectBlueprintFunctionLibrary_C
// 0x0000 (0x0030 - 0x0030)
class UEffectBlueprintFunctionLibrary_C final : public UBlueprintFunctionLibrary
{
public:
	static void RecycleEffect(class UEffectViewComponent_C* View, class UObject* __WorldContext);
	static float GetEffectStatisticsCurrentCount(class UObject* __WorldContext);
	static float GetEffectStatisticsTickCount(class UObject* __WorldContext);
	static float GetEffectStatisticsRegisteredInterval(class UObject* __WorldContext);
	static float GetEffectStatisticsReleasedInterval(class UObject* __WorldContext);
	static void RefreshEffectStatisticsData(EEffectStatisticsSortType SortType, class UObject* __WorldContext);
	static float GetEffectStatisticsEntryCount(class UObject* __WorldContext);
	static class UUEffectStatisticsEntryData_C* GetEffectStatisticsEntry(int32 Index1, class UObject* __WorldContext);
	static float AddDebugLineFromPlayer(const struct FVector& Location, const struct FLinearColor& Color, float Width, class UObject* __WorldContext);
	static void ClearDebugDraw(class UObject* __WorldContext);
	static void SetClusteredStuffDensities(class UWorld* World, int32 Index1, class UEffectClusteredStuffSettings_C* OverrideData1, float Density1, class UObject* __WorldContext);
	static void SetMaterialControllerDataSync(int32 EntityId, const class FString& MaterialDataPath, bool IsGroup, class UObject* __WorldContext);
	static void DisableGlobalInteractionEffect(class UObject* __WorldContext);
	static void EnableGlobalInteractionEffect(class UItemMaterialControllerGlobalData_C* GlobalMaterialData, class UObject* __WorldContext);
	static bool ValidateKuroAnimNotify(class UKuroAnimNotify* Asset, class UObject* __WorldContext);
	static bool ValidateKuroAnimNotifyState(class UKuroAnimNotifyState* Asset, class UObject* __WorldContext);
	static void SetEffectSpawnLogEnabled(bool Enabled, class UObject* __WorldContext);
	static void BeginDebugDrawFoliageDetect(const struct FLinearColor& Color, float Width, class UObject* __WorldContext);
	static void EndDebugDrawFoliageDetect(class UObject* __WorldContext);
	static void RefreshFoliageDetectConfig(class UObject* __WorldContext);
	static void SetVisualizeCharacterWaterEffectTrace(bool Enable, class UObject* __WorldContext);
	static void SetEffectInPoolEnabled(bool Enable, class UObject* __WorldContext);
	static void SetEffectOutPoolEnabled(bool Enable, class UObject* __WorldContext);
	static float GetNumEffectUpdateNonRearrange(class UObject* __WorldContext);
	static float GetNumEffectUpdateArbitrary(class UObject* __WorldContext);
	static float GetNumEffectUpdateHigh(class UObject* __WorldContext);
	static float GetNumEffectUpdateLow(class UObject* __WorldContext);
	static float GetNumEffectUpdateNearlyPaused(class UObject* __WorldContext);
	static float GetNumEffectAll(class UObject* __WorldContext);
	static float GetNumEffectTickThisFrame(class UObject* __WorldContext);
	static void EnableSceneObjectWaterEffectShowDebugTrace(bool Enable, class UObject* __WorldContext);
	static void SetTsWriteTimeToCollectionEnabled(bool Enable, class UObject* __WorldContext);
	static void AudioVisualizationInstanceStart(class AAudioVisualizationInstanceBase_C* Actor, class UObject* __WorldContext);
	static void AudioVisualizationInstanceEnd(class AAudioVisualizationInstanceBase_C* Actor, class UObject* __WorldContext);
	static void AudioVisualizationInstanceCallback(class AAudioVisualizationInstanceBase_C* Actor, class UAkCallbackInfo* CallbackInfo, EAkCallbackType CallbackType, const class FString& State, class UObject* __WorldContext);
	static void EffectCgMode(bool Enable, class UObject* __WorldContext);
	static class ABP_ScreenEffectSystem_C* GetScreenEffectSystem(class UObject* __WorldContext);
	static void GiTickLensFlare(class UObject* WorldContextObject, float DeltaSeconds, class UPDA_ModelLensFlareConfig_C* Config, const struct FLinearColor& Color, float RampIndex, class UObject* __WorldContext);
	static void TickClusteredStuff(class UWorld* World, float Delta1, class UObject* __WorldContext);
	static void EditorManualTickClusteredStuffEffects(class UWorld* World, float Delta1, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EffectBlueprintFunctionLibrary_C">();
	}
	static class UEffectBlueprintFunctionLibrary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEffectBlueprintFunctionLibrary_C>();
	}
};
static_assert(alignof(UEffectBlueprintFunctionLibrary_C) == 0x000008, "Wrong alignment on UEffectBlueprintFunctionLibrary_C");
static_assert(sizeof(UEffectBlueprintFunctionLibrary_C) == 0x000030, "Wrong size on UEffectBlueprintFunctionLibrary_C");

}

