#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SAimPart

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// UserDefinedStruct SAimPart.SAimPart
// 0x0040 (0x0040 - 0x0000)
struct FSAimPart final
{
public:
	class FString                                 BoneName_3_B32CA64F4FF22CB1150F49B45EE2062E;       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                Offset_8_17BDBF8548DAF3771A75FE901798FB03;         // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusIn_12_F71D60C742E3FB5038F20898BE8CA7B0;      // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusOut_18_A7AA7BAD49036AEA3B3A659CA231F81F;     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusOutOnStart_15_B977CFC944BED18496667782EDF56BA9; // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MobileCorrect_20_ED2D52904EF9E12A926033AE49117260; // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GamePadCorrect_21_2A96B05646C1B1109647979F423C9943; // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 _e______27_009D4EC542EC81F1E9E721A83D0D3E85;       // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(FSAimPart) == 0x000008, "Wrong alignment on FSAimPart");
static_assert(sizeof(FSAimPart) == 0x000040, "Wrong size on FSAimPart");
static_assert(offsetof(FSAimPart, BoneName_3_B32CA64F4FF22CB1150F49B45EE2062E) == 0x000000, "Member 'FSAimPart::BoneName_3_B32CA64F4FF22CB1150F49B45EE2062E' has a wrong offset!");
static_assert(offsetof(FSAimPart, Offset_8_17BDBF8548DAF3771A75FE901798FB03) == 0x000010, "Member 'FSAimPart::Offset_8_17BDBF8548DAF3771A75FE901798FB03' has a wrong offset!");
static_assert(offsetof(FSAimPart, RadiusIn_12_F71D60C742E3FB5038F20898BE8CA7B0) == 0x00001C, "Member 'FSAimPart::RadiusIn_12_F71D60C742E3FB5038F20898BE8CA7B0' has a wrong offset!");
static_assert(offsetof(FSAimPart, RadiusOut_18_A7AA7BAD49036AEA3B3A659CA231F81F) == 0x000020, "Member 'FSAimPart::RadiusOut_18_A7AA7BAD49036AEA3B3A659CA231F81F' has a wrong offset!");
static_assert(offsetof(FSAimPart, RadiusOutOnStart_15_B977CFC944BED18496667782EDF56BA9) == 0x000024, "Member 'FSAimPart::RadiusOutOnStart_15_B977CFC944BED18496667782EDF56BA9' has a wrong offset!");
static_assert(offsetof(FSAimPart, MobileCorrect_20_ED2D52904EF9E12A926033AE49117260) == 0x000028, "Member 'FSAimPart::MobileCorrect_20_ED2D52904EF9E12A926033AE49117260' has a wrong offset!");
static_assert(offsetof(FSAimPart, GamePadCorrect_21_2A96B05646C1B1109647979F423C9943) == 0x00002C, "Member 'FSAimPart::GamePadCorrect_21_2A96B05646C1B1109647979F423C9943' has a wrong offset!");
static_assert(offsetof(FSAimPart, _e______27_009D4EC542EC81F1E9E721A83D0D3E85) == 0x000030, "Member 'FSAimPart::_e______27_009D4EC542EC81F1E9E721A83D0D3E85' has a wrong offset!");

}

