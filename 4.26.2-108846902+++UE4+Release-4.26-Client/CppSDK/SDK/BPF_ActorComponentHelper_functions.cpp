#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPF_ActorComponentHelper

#include "Basic.hpp"

#include "BPF_ActorComponentHelper_classes.hpp"
#include "BPF_ActorComponentHelper_parameters.hpp"


namespace SDK
{

// Function BPF_ActorComponentHelper.BPF_ActorComponentHelper_C.GetOwnerTransform
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UActorComponent*                  ActorComponent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FTransform                       Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor)

void UBPF_ActorComponentHelper_C::GetOwnerTransform(class UActorComponent* ActorComponent, class UObject* __WorldContext, bool* Success, struct FTransform* Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_ActorComponentHelper_C", "GetOwnerTransform");

	Params::BPF_ActorComponentHelper_C_GetOwnerTransform Parms{};

	Parms.ActorComponent = ActorComponent;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);
}


// Function BPF_ActorComponentHelper.BPF_ActorComponentHelper_C.GetOwnerLocation
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UActorComponent*                  ActorComponent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_ActorComponentHelper_C::GetOwnerLocation(class UActorComponent* ActorComponent, class UObject* __WorldContext, bool* Success, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_ActorComponentHelper_C", "GetOwnerLocation");

	Params::BPF_ActorComponentHelper_C_GetOwnerLocation Parms{};

	Parms.ActorComponent = ActorComponent;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BPF_ActorComponentHelper.BPF_ActorComponentHelper_C.GetOwnerRotator
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UActorComponent*                  ActorComponent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         Rotator                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPF_ActorComponentHelper_C::GetOwnerRotator(class UActorComponent* ActorComponent, class UObject* __WorldContext, bool* Success, struct FRotator* Rotator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_ActorComponentHelper_C", "GetOwnerRotator");

	Params::BPF_ActorComponentHelper_C_GetOwnerRotator Parms{};

	Parms.ActorComponent = ActorComponent;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (Rotator != nullptr)
		*Rotator = std::move(Parms.Rotator);
}


// Function BPF_ActorComponentHelper.BPF_ActorComponentHelper_C.GetOwnerScale
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UActorComponent*                  ActorComponent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Scale                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_ActorComponentHelper_C::GetOwnerScale(class UActorComponent* ActorComponent, class UObject* __WorldContext, bool* Success, struct FVector* Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_ActorComponentHelper_C", "GetOwnerScale");

	Params::BPF_ActorComponentHelper_C_GetOwnerScale Parms{};

	Parms.ActorComponent = ActorComponent;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (Scale != nullptr)
		*Scale = std::move(Parms.Scale);
}

}

