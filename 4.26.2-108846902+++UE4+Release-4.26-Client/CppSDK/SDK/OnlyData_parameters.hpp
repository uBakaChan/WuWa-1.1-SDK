#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OnlyData

#include "Basic.hpp"

#include "SReBulletDataMain_structs.hpp"
#include "SHitEffect_structs.hpp"
#include "SBulletDataMain_structs.hpp"


namespace SDK::Params
{

// Function OnlyData.OnlyData_C.GetCommonNewBulletData
// 0x0E28 (0x0E28 - 0x0000)
struct OnlyData_C_GetCommonNewBulletData final
{
public:
	class FString                                 DataName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFind;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSReBulletDataMain                     BulletData;                                        // 0x0020(0x06F8)(Parm, OutParm, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0718(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_724[0x4];                                      // 0x0724(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSReBulletDataMain                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0728(0x06F8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0E20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OnlyData_C_GetCommonNewBulletData) == 0x000008, "Wrong alignment on OnlyData_C_GetCommonNewBulletData");
static_assert(sizeof(OnlyData_C_GetCommonNewBulletData) == 0x000E28, "Wrong size on OnlyData_C_GetCommonNewBulletData");
static_assert(offsetof(OnlyData_C_GetCommonNewBulletData, DataName) == 0x000000, "Member 'OnlyData_C_GetCommonNewBulletData::DataName' has a wrong offset!");
static_assert(offsetof(OnlyData_C_GetCommonNewBulletData, __WorldContext) == 0x000010, "Member 'OnlyData_C_GetCommonNewBulletData::__WorldContext' has a wrong offset!");
static_assert(offsetof(OnlyData_C_GetCommonNewBulletData, IsFind) == 0x000018, "Member 'OnlyData_C_GetCommonNewBulletData::IsFind' has a wrong offset!");
static_assert(offsetof(OnlyData_C_GetCommonNewBulletData, BulletData) == 0x000020, "Member 'OnlyData_C_GetCommonNewBulletData::BulletData' has a wrong offset!");
static_assert(offsetof(OnlyData_C_GetCommonNewBulletData, CallFunc_Conv_StringToName_ReturnValue) == 0x000718, "Member 'OnlyData_C_GetCommonNewBulletData::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(OnlyData_C_GetCommonNewBulletData, CallFunc_GetDataTableRowFromName_OutRow) == 0x000728, "Member 'OnlyData_C_GetCommonNewBulletData::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(OnlyData_C_GetCommonNewBulletData, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000E20, "Member 'OnlyData_C_GetCommonNewBulletData::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function OnlyData.OnlyData_C.GetCommonHitData
// 0x0170 (0x0170 - 0x0000)
struct OnlyData_C_GetCommonHitData final
{
public:
	class FString                                 DataName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFind;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSHitEffect                            HitData;                                           // 0x001C(0x00A0)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSHitEffect                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x00C8(0x00A0)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OnlyData_C_GetCommonHitData) == 0x000008, "Wrong alignment on OnlyData_C_GetCommonHitData");
static_assert(sizeof(OnlyData_C_GetCommonHitData) == 0x000170, "Wrong size on OnlyData_C_GetCommonHitData");
static_assert(offsetof(OnlyData_C_GetCommonHitData, DataName) == 0x000000, "Member 'OnlyData_C_GetCommonHitData::DataName' has a wrong offset!");
static_assert(offsetof(OnlyData_C_GetCommonHitData, __WorldContext) == 0x000010, "Member 'OnlyData_C_GetCommonHitData::__WorldContext' has a wrong offset!");
static_assert(offsetof(OnlyData_C_GetCommonHitData, IsFind) == 0x000018, "Member 'OnlyData_C_GetCommonHitData::IsFind' has a wrong offset!");
static_assert(offsetof(OnlyData_C_GetCommonHitData, HitData) == 0x00001C, "Member 'OnlyData_C_GetCommonHitData::HitData' has a wrong offset!");
static_assert(offsetof(OnlyData_C_GetCommonHitData, CallFunc_Conv_StringToName_ReturnValue) == 0x0000BC, "Member 'OnlyData_C_GetCommonHitData::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(OnlyData_C_GetCommonHitData, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000C8, "Member 'OnlyData_C_GetCommonHitData::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(OnlyData_C_GetCommonHitData, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000168, "Member 'OnlyData_C_GetCommonHitData::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function OnlyData.OnlyData_C.GetCommonBulletData
// 0x02E0 (0x02E0 - 0x0000)
struct OnlyData_C_GetCommonBulletData final
{
public:
	class FString                                 DataName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFind;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBulletDataMain                       BulletData;                                        // 0x0020(0x02C0)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(OnlyData_C_GetCommonBulletData) == 0x000008, "Wrong alignment on OnlyData_C_GetCommonBulletData");
static_assert(sizeof(OnlyData_C_GetCommonBulletData) == 0x0002E0, "Wrong size on OnlyData_C_GetCommonBulletData");
static_assert(offsetof(OnlyData_C_GetCommonBulletData, DataName) == 0x000000, "Member 'OnlyData_C_GetCommonBulletData::DataName' has a wrong offset!");
static_assert(offsetof(OnlyData_C_GetCommonBulletData, __WorldContext) == 0x000010, "Member 'OnlyData_C_GetCommonBulletData::__WorldContext' has a wrong offset!");
static_assert(offsetof(OnlyData_C_GetCommonBulletData, IsFind) == 0x000018, "Member 'OnlyData_C_GetCommonBulletData::IsFind' has a wrong offset!");
static_assert(offsetof(OnlyData_C_GetCommonBulletData, BulletData) == 0x000020, "Member 'OnlyData_C_GetCommonBulletData::BulletData' has a wrong offset!");

}

