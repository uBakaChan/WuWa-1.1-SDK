#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsControlBlueprintFunctionLibrary

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function TsControlBlueprintFunctionLibrary.TsControlBlueprintFunctionLibrary_C.GetMoveVectorCache
// 0x0018 (0x0018 - 0x0000)
struct TsControlBlueprintFunctionLibrary_C_GetMoveVectorCache final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsControlBlueprintFunctionLibrary_C_GetMoveVectorCache) == 0x000008, "Wrong alignment on TsControlBlueprintFunctionLibrary_C_GetMoveVectorCache");
static_assert(sizeof(TsControlBlueprintFunctionLibrary_C_GetMoveVectorCache) == 0x000018, "Wrong size on TsControlBlueprintFunctionLibrary_C_GetMoveVectorCache");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_GetMoveVectorCache, EntityId) == 0x000000, "Member 'TsControlBlueprintFunctionLibrary_C_GetMoveVectorCache::EntityId' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_GetMoveVectorCache, __WorldContext) == 0x000008, "Member 'TsControlBlueprintFunctionLibrary_C_GetMoveVectorCache::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_GetMoveVectorCache, ReturnValue) == 0x000010, "Member 'TsControlBlueprintFunctionLibrary_C_GetMoveVectorCache::ReturnValue' has a wrong offset!");

// Function TsControlBlueprintFunctionLibrary.TsControlBlueprintFunctionLibrary_C.GetMoveDirectionCache
// 0x0018 (0x0018 - 0x0000)
struct TsControlBlueprintFunctionLibrary_C_GetMoveDirectionCache final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsControlBlueprintFunctionLibrary_C_GetMoveDirectionCache) == 0x000008, "Wrong alignment on TsControlBlueprintFunctionLibrary_C_GetMoveDirectionCache");
static_assert(sizeof(TsControlBlueprintFunctionLibrary_C_GetMoveDirectionCache) == 0x000018, "Wrong size on TsControlBlueprintFunctionLibrary_C_GetMoveDirectionCache");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_GetMoveDirectionCache, EntityId) == 0x000000, "Member 'TsControlBlueprintFunctionLibrary_C_GetMoveDirectionCache::EntityId' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_GetMoveDirectionCache, __WorldContext) == 0x000008, "Member 'TsControlBlueprintFunctionLibrary_C_GetMoveDirectionCache::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_GetMoveDirectionCache, ReturnValue) == 0x000010, "Member 'TsControlBlueprintFunctionLibrary_C_GetMoveDirectionCache::ReturnValue' has a wrong offset!");

// Function TsControlBlueprintFunctionLibrary.TsControlBlueprintFunctionLibrary_C.GetWorldMoveDirectionCache
// 0x0018 (0x0018 - 0x0000)
struct TsControlBlueprintFunctionLibrary_C_GetWorldMoveDirectionCache final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsControlBlueprintFunctionLibrary_C_GetWorldMoveDirectionCache) == 0x000008, "Wrong alignment on TsControlBlueprintFunctionLibrary_C_GetWorldMoveDirectionCache");
static_assert(sizeof(TsControlBlueprintFunctionLibrary_C_GetWorldMoveDirectionCache) == 0x000018, "Wrong size on TsControlBlueprintFunctionLibrary_C_GetWorldMoveDirectionCache");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_GetWorldMoveDirectionCache, EntityId) == 0x000000, "Member 'TsControlBlueprintFunctionLibrary_C_GetWorldMoveDirectionCache::EntityId' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_GetWorldMoveDirectionCache, __WorldContext) == 0x000008, "Member 'TsControlBlueprintFunctionLibrary_C_GetWorldMoveDirectionCache::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_GetWorldMoveDirectionCache, ReturnValue) == 0x000010, "Member 'TsControlBlueprintFunctionLibrary_C_GetWorldMoveDirectionCache::ReturnValue' has a wrong offset!");

// Function TsControlBlueprintFunctionLibrary.TsControlBlueprintFunctionLibrary_C.GetMoveVector
// 0x0018 (0x0018 - 0x0000)
struct TsControlBlueprintFunctionLibrary_C_GetMoveVector final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsControlBlueprintFunctionLibrary_C_GetMoveVector) == 0x000008, "Wrong alignment on TsControlBlueprintFunctionLibrary_C_GetMoveVector");
static_assert(sizeof(TsControlBlueprintFunctionLibrary_C_GetMoveVector) == 0x000018, "Wrong size on TsControlBlueprintFunctionLibrary_C_GetMoveVector");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_GetMoveVector, EntityId) == 0x000000, "Member 'TsControlBlueprintFunctionLibrary_C_GetMoveVector::EntityId' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_GetMoveVector, __WorldContext) == 0x000008, "Member 'TsControlBlueprintFunctionLibrary_C_GetMoveVector::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_GetMoveVector, ReturnValue) == 0x000010, "Member 'TsControlBlueprintFunctionLibrary_C_GetMoveVector::ReturnValue' has a wrong offset!");

// Function TsControlBlueprintFunctionLibrary.TsControlBlueprintFunctionLibrary_C.GetMoveDirection
// 0x0018 (0x0018 - 0x0000)
struct TsControlBlueprintFunctionLibrary_C_GetMoveDirection final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsControlBlueprintFunctionLibrary_C_GetMoveDirection) == 0x000008, "Wrong alignment on TsControlBlueprintFunctionLibrary_C_GetMoveDirection");
static_assert(sizeof(TsControlBlueprintFunctionLibrary_C_GetMoveDirection) == 0x000018, "Wrong size on TsControlBlueprintFunctionLibrary_C_GetMoveDirection");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_GetMoveDirection, EntityId) == 0x000000, "Member 'TsControlBlueprintFunctionLibrary_C_GetMoveDirection::EntityId' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_GetMoveDirection, __WorldContext) == 0x000008, "Member 'TsControlBlueprintFunctionLibrary_C_GetMoveDirection::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_GetMoveDirection, ReturnValue) == 0x000010, "Member 'TsControlBlueprintFunctionLibrary_C_GetMoveDirection::ReturnValue' has a wrong offset!");

// Function TsControlBlueprintFunctionLibrary.TsControlBlueprintFunctionLibrary_C.PlayKuroForceFeedback
// 0x0020 (0x0020 - 0x0000)
struct TsControlBlueprintFunctionLibrary_C_PlayKuroForceFeedback final
{
public:
	class UKuroForceFeedbackEffect*               ForceFeedbackEffect;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Tag;                                               // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLooping;                                          // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIgnoreTimeDilation;                               // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPlayWhilePaused;                                  // 0x0016(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsControlBlueprintFunctionLibrary_C_PlayKuroForceFeedback) == 0x000008, "Wrong alignment on TsControlBlueprintFunctionLibrary_C_PlayKuroForceFeedback");
static_assert(sizeof(TsControlBlueprintFunctionLibrary_C_PlayKuroForceFeedback) == 0x000020, "Wrong size on TsControlBlueprintFunctionLibrary_C_PlayKuroForceFeedback");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_PlayKuroForceFeedback, ForceFeedbackEffect) == 0x000000, "Member 'TsControlBlueprintFunctionLibrary_C_PlayKuroForceFeedback::ForceFeedbackEffect' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_PlayKuroForceFeedback, Tag) == 0x000008, "Member 'TsControlBlueprintFunctionLibrary_C_PlayKuroForceFeedback::Tag' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_PlayKuroForceFeedback, bLooping) == 0x000014, "Member 'TsControlBlueprintFunctionLibrary_C_PlayKuroForceFeedback::bLooping' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_PlayKuroForceFeedback, bIgnoreTimeDilation) == 0x000015, "Member 'TsControlBlueprintFunctionLibrary_C_PlayKuroForceFeedback::bIgnoreTimeDilation' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_PlayKuroForceFeedback, bPlayWhilePaused) == 0x000016, "Member 'TsControlBlueprintFunctionLibrary_C_PlayKuroForceFeedback::bPlayWhilePaused' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_PlayKuroForceFeedback, __WorldContext) == 0x000018, "Member 'TsControlBlueprintFunctionLibrary_C_PlayKuroForceFeedback::__WorldContext' has a wrong offset!");

// Function TsControlBlueprintFunctionLibrary.TsControlBlueprintFunctionLibrary_C.StopKuroForceFeedback
// 0x0020 (0x0020 - 0x0000)
struct TsControlBlueprintFunctionLibrary_C_StopKuroForceFeedback final
{
public:
	class UKuroForceFeedbackEffect*               ForceFeedbackEffect1;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Tag1;                                              // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsControlBlueprintFunctionLibrary_C_StopKuroForceFeedback) == 0x000008, "Wrong alignment on TsControlBlueprintFunctionLibrary_C_StopKuroForceFeedback");
static_assert(sizeof(TsControlBlueprintFunctionLibrary_C_StopKuroForceFeedback) == 0x000020, "Wrong size on TsControlBlueprintFunctionLibrary_C_StopKuroForceFeedback");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_StopKuroForceFeedback, ForceFeedbackEffect1) == 0x000000, "Member 'TsControlBlueprintFunctionLibrary_C_StopKuroForceFeedback::ForceFeedbackEffect1' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_StopKuroForceFeedback, Tag1) == 0x000008, "Member 'TsControlBlueprintFunctionLibrary_C_StopKuroForceFeedback::Tag1' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_StopKuroForceFeedback, __WorldContext) == 0x000018, "Member 'TsControlBlueprintFunctionLibrary_C_StopKuroForceFeedback::__WorldContext' has a wrong offset!");

// Function TsControlBlueprintFunctionLibrary.TsControlBlueprintFunctionLibrary_C.BpInputReceiveEndPlay
// 0x0010 (0x0010 - 0x0000)
struct TsControlBlueprintFunctionLibrary_C_BpInputReceiveEndPlay final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsControlBlueprintFunctionLibrary_C_BpInputReceiveEndPlay) == 0x000008, "Wrong alignment on TsControlBlueprintFunctionLibrary_C_BpInputReceiveEndPlay");
static_assert(sizeof(TsControlBlueprintFunctionLibrary_C_BpInputReceiveEndPlay) == 0x000010, "Wrong size on TsControlBlueprintFunctionLibrary_C_BpInputReceiveEndPlay");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_BpInputReceiveEndPlay, EntityId) == 0x000000, "Member 'TsControlBlueprintFunctionLibrary_C_BpInputReceiveEndPlay::EntityId' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_BpInputReceiveEndPlay, __WorldContext) == 0x000008, "Member 'TsControlBlueprintFunctionLibrary_C_BpInputReceiveEndPlay::__WorldContext' has a wrong offset!");

// Function TsControlBlueprintFunctionLibrary.TsControlBlueprintFunctionLibrary_C.SetUseControllerRotationPitch
// 0x0010 (0x0010 - 0x0000)
struct TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationPitch final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationPitch) == 0x000008, "Wrong alignment on TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationPitch");
static_assert(sizeof(TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationPitch) == 0x000010, "Wrong size on TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationPitch");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationPitch, EntityId) == 0x000000, "Member 'TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationPitch::EntityId' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationPitch, Value) == 0x000004, "Member 'TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationPitch::Value' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationPitch, __WorldContext) == 0x000008, "Member 'TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationPitch::__WorldContext' has a wrong offset!");

// Function TsControlBlueprintFunctionLibrary.TsControlBlueprintFunctionLibrary_C.SetUseControllerRotationYaw
// 0x0010 (0x0010 - 0x0000)
struct TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationYaw final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationYaw) == 0x000008, "Wrong alignment on TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationYaw");
static_assert(sizeof(TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationYaw) == 0x000010, "Wrong size on TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationYaw");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationYaw, EntityId) == 0x000000, "Member 'TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationYaw::EntityId' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationYaw, Value) == 0x000004, "Member 'TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationYaw::Value' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationYaw, __WorldContext) == 0x000008, "Member 'TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationYaw::__WorldContext' has a wrong offset!");

// Function TsControlBlueprintFunctionLibrary.TsControlBlueprintFunctionLibrary_C.SetUseControllerRotationRoll
// 0x0010 (0x0010 - 0x0000)
struct TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationRoll final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationRoll) == 0x000008, "Wrong alignment on TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationRoll");
static_assert(sizeof(TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationRoll) == 0x000010, "Wrong size on TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationRoll");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationRoll, EntityId) == 0x000000, "Member 'TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationRoll::EntityId' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationRoll, Value) == 0x000004, "Member 'TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationRoll::Value' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationRoll, __WorldContext) == 0x000008, "Member 'TsControlBlueprintFunctionLibrary_C_SetUseControllerRotationRoll::__WorldContext' has a wrong offset!");

// Function TsControlBlueprintFunctionLibrary.TsControlBlueprintFunctionLibrary_C.SetBpInputComponent
// 0x0018 (0x0018 - 0x0000)
struct TsControlBlueprintFunctionLibrary_C_SetBpInputComponent final
{
public:
	int32                                         EntityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InputBase_C*                        bpInputComp;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsControlBlueprintFunctionLibrary_C_SetBpInputComponent) == 0x000008, "Wrong alignment on TsControlBlueprintFunctionLibrary_C_SetBpInputComponent");
static_assert(sizeof(TsControlBlueprintFunctionLibrary_C_SetBpInputComponent) == 0x000018, "Wrong size on TsControlBlueprintFunctionLibrary_C_SetBpInputComponent");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_SetBpInputComponent, EntityId) == 0x000000, "Member 'TsControlBlueprintFunctionLibrary_C_SetBpInputComponent::EntityId' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_SetBpInputComponent, bpInputComp) == 0x000008, "Member 'TsControlBlueprintFunctionLibrary_C_SetBpInputComponent::bpInputComp' has a wrong offset!");
static_assert(offsetof(TsControlBlueprintFunctionLibrary_C_SetBpInputComponent, __WorldContext) == 0x000010, "Member 'TsControlBlueprintFunctionLibrary_C_SetBpInputComponent::__WorldContext' has a wrong offset!");

}

