#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsAnimNotifyStateHideMesh

#include "Basic.hpp"

#include "KuroRenderingRuntimeBPPlugin_classes.hpp"


namespace SDK
{

// TypeScriptGeneratedClass TsAnimNotifyStateHideMesh.TsAnimNotifyStateHideMesh_C
// 0x0028 (0x0070 - 0x0048)
class UTsAnimNotifyStateHideMesh_C final : public UKuroAnimNotifyState
{
public:
	class FString                                 ChildMeshName;                                     // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          HideChildren;                                      // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          HideChildrenActors;                                // 0x0059(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPD_CharacterControllerData_C*          EndEffect;                                         // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Hide;                                              // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)

public:
	bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);
	bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);

	class FString GetNotifyName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TsAnimNotifyStateHideMesh_C">();
	}
	static class UTsAnimNotifyStateHideMesh_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTsAnimNotifyStateHideMesh_C>();
	}
};
static_assert(alignof(UTsAnimNotifyStateHideMesh_C) == 0x000008, "Wrong alignment on UTsAnimNotifyStateHideMesh_C");
static_assert(sizeof(UTsAnimNotifyStateHideMesh_C) == 0x000070, "Wrong size on UTsAnimNotifyStateHideMesh_C");
static_assert(offsetof(UTsAnimNotifyStateHideMesh_C, ChildMeshName) == 0x000048, "Member 'UTsAnimNotifyStateHideMesh_C::ChildMeshName' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateHideMesh_C, HideChildren) == 0x000058, "Member 'UTsAnimNotifyStateHideMesh_C::HideChildren' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateHideMesh_C, HideChildrenActors) == 0x000059, "Member 'UTsAnimNotifyStateHideMesh_C::HideChildrenActors' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateHideMesh_C, EndEffect) == 0x000060, "Member 'UTsAnimNotifyStateHideMesh_C::EndEffect' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateHideMesh_C, Hide) == 0x000068, "Member 'UTsAnimNotifyStateHideMesh_C::Hide' has a wrong offset!");

}

