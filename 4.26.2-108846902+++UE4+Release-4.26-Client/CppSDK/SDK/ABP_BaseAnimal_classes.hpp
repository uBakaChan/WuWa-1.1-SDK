#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_BaseAnimal

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "KuroAnim_structs.hpp"
#include "KuroAnim_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "EAnimalEcologicalState_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "ECharState_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_BaseAnimal.ABP_BaseAnimal_C
// 0x3320 (0x3780 - 0x0460)
class UABP_BaseAnimal_C : public UKuroAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x0468(0x0038)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x04A0(0x0138)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x05D8(0x0038)()
	struct FAnimNode_SightLock                    AnimGraphNode_SightLock;                           // 0x0610(0x01B8)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x07C8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x07E8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0808(0x0138)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0940(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_52;                 // 0x0978(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_51;                 // 0x09A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_50;                 // 0x09C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_49;                 // 0x09F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_48;                 // 0x0A18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_47;                 // 0x0A40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_46;                 // 0x0A68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_45;                 // 0x0A90(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x0AB8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_31;                      // 0x0B48(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x0B80(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_30;                      // 0x0C10(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x0C48(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_29;                      // 0x0CD8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x0D10(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_28;                      // 0x0DA0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x0DD8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_27;                      // 0x0E68(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x0EA0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_26;                      // 0x0F30(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x0F68(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_25;                      // 0x0FF8(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_4;                      // 0x1030(0x0148)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_44;                 // 0x1178(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_43;                 // 0x11A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_42;                 // 0x11C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_41;                 // 0x11F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_40;                 // 0x1218(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_39;                 // 0x1240(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_38;                 // 0x1268(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_37;                 // 0x1290(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_36;                 // 0x12B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x12E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x1308(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x1330(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x1358(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x1380(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x13A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x13D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x13F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x1420(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x1448(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x1470(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_24;                      // 0x1500(0x0038)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x1538(0x0060)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_23;                      // 0x1598(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x15D0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_22;                      // 0x1660(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x1698(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_21;                      // 0x1728(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x1760(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_20;                      // 0x17F0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x1828(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x18B8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x18F0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x1980(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x19B8(0x0148)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x1B00(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x1B38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x1B60(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x1B88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x1BB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x1BD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x1C00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x1C28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x1C50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x1C78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x1CA0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x1CC8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x1D58(0x0038)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x1D90(0x0060)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x1DF0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x1E28(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x1EB8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x1EF0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x1F80(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x1FB8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x2048(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x2080(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x2110(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x2148(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x21D8(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x2210(0x0148)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x2358(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x2390(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x2420(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x2458(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x24E8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x2520(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x25B0(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x25E8(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x2618(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x2650(0x0148)()
	uint8                                         Pad_2798[0x8];                                     // 0x2798(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x27A0(0x01B0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x2950(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x2978(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x29A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x29C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x29F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x2A18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x2A40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x2A68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x2A90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x2AB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x2AE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x2B08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x2B30(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x2B58(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x2BE8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x2C20(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x2CB0(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x2CE8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x2D10(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x2D38(0x00F8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x2E30(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x2E68(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x2E90(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x2F20(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x2F58(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x2F88(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x2FC0(0x0148)()
	uint8                                         Pad_3108[0x8];                                     // 0x3108(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x3110(0x01B0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x32C0(0x0060)()
	struct FAnimNode_Inertialization              AnimGraphNode_Inertialization;                     // 0x3320(0x0070)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x3390(0x0038)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_2;                   // 0x33C8(0x00C0)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_1;                   // 0x3488(0x00C0)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0x3548(0x00C0)()
	TArray<class UAnimSequence*>                  __h_Mn;                                            // 0x3608(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly)
	class ATsBaseCharacter_C*                     _r__;                                              // 0x3618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 _rQ_S;                                             // 0x3620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimalEcologicalState                        __h___;                                            // 0x3628(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ______;                                            // 0x3629(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362A[0x2];                                     // 0x362A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IdleActionIndex;                                   // 0x362C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          IdleAnim;                                          // 0x3630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimSequence*>                  __h_Mn_0;                                          // 0x3638(0x0010)(Edit, BlueprintVisible)
	int32                                         InteractActionIndex;                               // 0x3648(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364C[0x4];                                     // 0x364C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          InteractAnim;                                      // 0x3650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SightDirect;                                       // 0x3658(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESightLockMode                                SightLockMode;                                     // 0x3664(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3665[0x3];                                     // 0x3665(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WalkRunParam;                                      // 0x3668(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ____p;                                             // 0x366C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHaveInput;                                        // 0x3670(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIdleAction;                                       // 0x3671(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          _f_;                                               // 0x3672(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          _w_l_;                                             // 0x3673(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          W__l;                                              // 0x3674(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bInteractAction;                                   // 0x3675(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          _0__;                                              // 0x3676(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          W_;                                                // 0x3677(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bSitDown;                                          // 0x3678(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3679[0x7];                                     // 0x3679(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, class UAnimSequence*> V___Mn;                                            // 0x3680(0x0050)(Edit, BlueprintVisible)
	float                                         ActionTime;                                        // 0x36D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36D4[0x4];                                     // 0x36D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, TSoftObjectPtr<class UPD_CharacterControllerData_C>> P_Mn;                                              // 0x36D8(0x0050)(Edit, BlueprintVisible)
	TMap<struct FGameplayTag, class UAnimMontage*> _StarGh_Mn;                                        // 0x3728(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          __l_;                                              // 0x3778(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          __UI;                                              // 0x3779(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bGetDown;                                          // 0x377A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ABP_BaseAnimal(int32 EntryPoint);
	void SystemUiEnd();
	void SystemUiStart();
	void FeedStart(const struct FGameplayTag& GameplayTag);
	void TakeOffStart();
	void AlertStart();
	void UnderAttackStart();
	void IdleStart();
	void InteractStart();
	void NoneStateStart();
	void StateMachineInitializationComplete();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void BlueprintInitializeAnimation();
	void AnimNotify_Animal_UnderAttackEnd();
	void AnimNotify_Animal_AlertEnd();
	void AnimNotify_Animal_InteractActionEnd();
	void AnimNotify_Animal_IdleActionEnd();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_2F01251B4B4FE9EAA39B3D9247C31675();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_D33F159C49CF71493708D08A76E6E7CD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_BDCAAEE64FE7F1405D8B77AE820B11F2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_49F87C244E0713CE630B39AA9A563674();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_B5FA9C6847AB27EDF1D286A59C39E411();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_DF17119740839C99CBDC5BB7A7ACF2FB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_0FDD922B45E34D982F8F85B15BF4E09D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_B9970B3845ED2CF05C0CE2905CD1D9DA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_8A402BC24A8BC234FA1647AE139FAFCA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_B7E4C2F643A351461514F3A4BB27FD57();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_C4B06AF44285B268E642C280316C25BE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_274A99114D34CF70A381F6832E28301D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_8D1F93424AA669264C48C4A3AD645001();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_9C995D5F413AB0D5EEC5B0B25BCA0B99();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_1BFEF6B2423BB23F3A743FA37CFEFB6E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_1FA99C764B6E9143E9A2EBBC467023D2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_7DF62BD6494255C57AF1CA838DF2F699();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_E492EC01485375CFE000B0A5E11A31F8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_00AF891944077B505E5628A5880DB881();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_9E2813C546DB12830090D0B49CAFCF8A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_437CDAF94B84EB0EA0350A81D62C1333();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_3C432C1A4EAC4B8EEC7FAA9810D7964C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_3B0855934F908EBADF5C0E905BE5EBAD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_28773EEC4DFEA3865FF9E284E7CE5F47();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_DBE786244F0BB91CD41D8289371D7030();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_764CCFAC4D41871FBC3DA79A1C2573AB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_416429BC4584FF707D49B1BF83556BF2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_1769F6104A02243DD5C6589592A29465();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_0A62643941C9F2534B1AF99C24980E2C();
	void TakeOffEnd();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_49945F8B4DD298D2ED4AE0B5BD3BFF51();
	void AlertEnd();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_AEAB655045E3052DFA6C2EB97F6BAEE4();
	void UnderAttackEnd();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_F2118EA4482961323A4284A5C757A6D4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_D76347B84F84143110867F87A063BC9A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_E971F2414D8A609D52454EBD86A29DDE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_6708632043AE1764C2B1A2BC8487CAA2();
	void IdleEnd();
	void InteractEnd();
	void NoneStateEnd();
	void ____h__0();
	void OnIdleStart();
	void ____h_();
	void __y___h_();
	void OnInteractStart();
	void ____();
	void OnAlertStart();
	void OnTakeOffStart();
	void OnUnderAttackStart();
	void _____H_();
	void _____o();
	void OnFeedStart(const struct FGameplayTag& GameplayTag);
	void OnSystemUIStart();
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void __B_0(struct FPoseLink* Param___B);
	void ___B(const struct FPoseLink& ___e, struct FPoseLink* Param____B);
	void __B(const struct FPoseLink& ____e, struct FPoseLink* Param___B);
	void GetCurrentActionTime(float* Param_ActionTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_BaseAnimal_C">();
	}
	static class UABP_BaseAnimal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_BaseAnimal_C>();
	}
};
static_assert(alignof(UABP_BaseAnimal_C) == 0x000010, "Wrong alignment on UABP_BaseAnimal_C");
static_assert(sizeof(UABP_BaseAnimal_C) == 0x003780, "Wrong size on UABP_BaseAnimal_C");
static_assert(offsetof(UABP_BaseAnimal_C, UberGraphFrame) == 0x000460, "Member 'UABP_BaseAnimal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_Root_3) == 0x000468, "Member 'UABP_BaseAnimal_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_LinkedInputPose_1) == 0x0004A0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_Root_2) == 0x0005D8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SightLock) == 0x000610, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SightLock' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_LocalToComponentSpace) == 0x0007C8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_ComponentToLocalSpace) == 0x0007E8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_LinkedInputPose) == 0x000808, "Member 'UABP_BaseAnimal_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_Root_1) == 0x000940, "Member 'UABP_BaseAnimal_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_52) == 0x000978, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_52' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_51) == 0x0009A0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_51' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_50) == 0x0009C8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_50' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_49) == 0x0009F0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_49' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_48) == 0x000A18, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_48' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_47) == 0x000A40, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_47' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_46) == 0x000A68, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_46' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_45) == 0x000A90, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_45' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_24) == 0x000AB8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_31) == 0x000B48, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_31' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_23) == 0x000B80, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_30) == 0x000C10, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_30' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_22) == 0x000C48, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_29) == 0x000CD8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_29' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_21) == 0x000D10, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_28) == 0x000DA0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_28' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_20) == 0x000DD8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_27) == 0x000E68, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_27' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_19) == 0x000EA0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_26) == 0x000F30, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_26' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_18) == 0x000F68, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_25) == 0x000FF8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_25' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateMachine_4) == 0x001030, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateMachine_4' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_44) == 0x001178, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_44' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_43) == 0x0011A0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_43' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_42) == 0x0011C8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_42' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_41) == 0x0011F0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_41' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_40) == 0x001218, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_40' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_39) == 0x001240, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_39' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_38) == 0x001268, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_38' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_37) == 0x001290, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_37' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_36) == 0x0012B8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_36' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_35) == 0x0012E0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_34) == 0x001308, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_33) == 0x001330, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_32) == 0x001358, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_31) == 0x001380, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_30) == 0x0013A8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_29) == 0x0013D0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_28) == 0x0013F8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_27) == 0x001420, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_26) == 0x001448, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_17) == 0x001470, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_24) == 0x001500, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_24' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequenceEvaluator_1) == 0x001538, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_23) == 0x001598, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_23' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_16) == 0x0015D0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_22) == 0x001660, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_22' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_15) == 0x001698, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_21) == 0x001728, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_21' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_14) == 0x001760, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_20) == 0x0017F0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_20' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_13) == 0x001828, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_19) == 0x0018B8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_12) == 0x0018F0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_18) == 0x001980, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateMachine_3) == 0x0019B8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_17) == 0x001B00, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_25) == 0x001B38, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_24) == 0x001B60, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_23) == 0x001B88, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_22) == 0x001BB0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_21) == 0x001BD8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_20) == 0x001C00, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_19) == 0x001C28, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_18) == 0x001C50, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_17) == 0x001C78, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_16) == 0x001CA0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_11) == 0x001CC8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_16) == 0x001D58, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequenceEvaluator) == 0x001D90, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_15) == 0x001DF0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_10) == 0x001E28, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_14) == 0x001EB8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_9) == 0x001EF0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_13) == 0x001F80, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_8) == 0x001FB8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_12) == 0x002048, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_7) == 0x002080, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_11) == 0x002110, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_6) == 0x002148, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_10) == 0x0021D8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateMachine_2) == 0x002210, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_9) == 0x002358, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_5) == 0x002390, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_8) == 0x002420, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_4) == 0x002458, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_7) == 0x0024E8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_3) == 0x002520, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_6) == 0x0025B0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_UseCachedPose_1) == 0x0025E8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_5) == 0x002618, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateMachine_1) == 0x002650, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SaveCachedPose_1) == 0x0027A0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_15) == 0x002950, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_14) == 0x002978, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_13) == 0x0029A0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_12) == 0x0029C8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_11) == 0x0029F0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_10) == 0x002A18, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_9) == 0x002A40, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_8) == 0x002A68, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_7) == 0x002A90, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_6) == 0x002AB8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_5) == 0x002AE0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_4) == 0x002B08, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_3) == 0x002B30, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_2) == 0x002B58, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_4) == 0x002BE8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_1) == 0x002C20, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_3) == 0x002CB0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_2) == 0x002CE8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_1) == 0x002D10, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_BlendSpacePlayer) == 0x002D38, "Member 'UABP_BaseAnimal_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_2) == 0x002E30, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult) == 0x002E68, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer) == 0x002E90, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_1) == 0x002F20, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_UseCachedPose) == 0x002F58, "Member 'UABP_BaseAnimal_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult) == 0x002F88, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateMachine) == 0x002FC0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SaveCachedPose) == 0x003110, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_Slot) == 0x0032C0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_Inertialization) == 0x003320, "Member 'UABP_BaseAnimal_C::AnimGraphNode_Inertialization' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_Root) == 0x003390, "Member 'UABP_BaseAnimal_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_LinkedAnimLayer_2) == 0x0033C8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_LinkedAnimLayer_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_LinkedAnimLayer_1) == 0x003488, "Member 'UABP_BaseAnimal_C::AnimGraphNode_LinkedAnimLayer_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_LinkedAnimLayer) == 0x003548, "Member 'UABP_BaseAnimal_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, __h_Mn) == 0x003608, "Member 'UABP_BaseAnimal_C::__h_Mn' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, _r__) == 0x003618, "Member 'UABP_BaseAnimal_C::_r__' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, _rQ_S) == 0x003620, "Member 'UABP_BaseAnimal_C::_rQ_S' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, __h___) == 0x003628, "Member 'UABP_BaseAnimal_C::__h___' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, ______) == 0x003629, "Member 'UABP_BaseAnimal_C::______' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, IdleActionIndex) == 0x00362C, "Member 'UABP_BaseAnimal_C::IdleActionIndex' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, IdleAnim) == 0x003630, "Member 'UABP_BaseAnimal_C::IdleAnim' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, __h_Mn_0) == 0x003638, "Member 'UABP_BaseAnimal_C::__h_Mn_0' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, InteractActionIndex) == 0x003648, "Member 'UABP_BaseAnimal_C::InteractActionIndex' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, InteractAnim) == 0x003650, "Member 'UABP_BaseAnimal_C::InteractAnim' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, SightDirect) == 0x003658, "Member 'UABP_BaseAnimal_C::SightDirect' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, SightLockMode) == 0x003664, "Member 'UABP_BaseAnimal_C::SightLockMode' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, WalkRunParam) == 0x003668, "Member 'UABP_BaseAnimal_C::WalkRunParam' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, ____p) == 0x00366C, "Member 'UABP_BaseAnimal_C::____p' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, bHaveInput) == 0x003670, "Member 'UABP_BaseAnimal_C::bHaveInput' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, bIdleAction) == 0x003671, "Member 'UABP_BaseAnimal_C::bIdleAction' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, _f_) == 0x003672, "Member 'UABP_BaseAnimal_C::_f_' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, _w_l_) == 0x003673, "Member 'UABP_BaseAnimal_C::_w_l_' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, W__l) == 0x003674, "Member 'UABP_BaseAnimal_C::W__l' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, bInteractAction) == 0x003675, "Member 'UABP_BaseAnimal_C::bInteractAction' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, _0__) == 0x003676, "Member 'UABP_BaseAnimal_C::_0__' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, W_) == 0x003677, "Member 'UABP_BaseAnimal_C::W_' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, bSitDown) == 0x003678, "Member 'UABP_BaseAnimal_C::bSitDown' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, V___Mn) == 0x003680, "Member 'UABP_BaseAnimal_C::V___Mn' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, ActionTime) == 0x0036D0, "Member 'UABP_BaseAnimal_C::ActionTime' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, P_Mn) == 0x0036D8, "Member 'UABP_BaseAnimal_C::P_Mn' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, _StarGh_Mn) == 0x003728, "Member 'UABP_BaseAnimal_C::_StarGh_Mn' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, __l_) == 0x003778, "Member 'UABP_BaseAnimal_C::__l_' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, __UI) == 0x003779, "Member 'UABP_BaseAnimal_C::__UI' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, bGetDown) == 0x00377A, "Member 'UABP_BaseAnimal_C::bGetDown' has a wrong offset!");

}

