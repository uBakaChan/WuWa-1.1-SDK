#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsBpFxEffect

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// TypeScriptGeneratedClass TsBpFxEffect.TsBpFxEffect_C
// 0x0020 (0x02C8 - 0x02A8)
class ATsBpFxEffect_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ATsBpFxEffect_C*                        RecorderShadow;                                    // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRecorderActor;                                   // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RecordTime;                                        // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TsBpFxEffect(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void OnRecordTick(float DeltaSeconds);
	void AddAutoFloatTrack(class FName PropertyName);
	void OnRecordStart();
	void AddAutoObjectTrack(class FName PropertyName);
	void AddAutoVectorTrack(class FName PropertyName);
	void OnRecordStop();
	void TryRecord();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TsBpFxEffect_C">();
	}
	static class ATsBpFxEffect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATsBpFxEffect_C>();
	}
};
static_assert(alignof(ATsBpFxEffect_C) == 0x000008, "Wrong alignment on ATsBpFxEffect_C");
static_assert(sizeof(ATsBpFxEffect_C) == 0x0002C8, "Wrong size on ATsBpFxEffect_C");
static_assert(offsetof(ATsBpFxEffect_C, UberGraphFrame) == 0x0002A8, "Member 'ATsBpFxEffect_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATsBpFxEffect_C, DefaultSceneRoot) == 0x0002B0, "Member 'ATsBpFxEffect_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ATsBpFxEffect_C, RecorderShadow) == 0x0002B8, "Member 'ATsBpFxEffect_C::RecorderShadow' has a wrong offset!");
static_assert(offsetof(ATsBpFxEffect_C, IsRecorderActor) == 0x0002C0, "Member 'ATsBpFxEffect_C::IsRecorderActor' has a wrong offset!");
static_assert(offsetof(ATsBpFxEffect_C, RecordTime) == 0x0002C4, "Member 'ATsBpFxEffect_C::RecordTime' has a wrong offset!");

}

