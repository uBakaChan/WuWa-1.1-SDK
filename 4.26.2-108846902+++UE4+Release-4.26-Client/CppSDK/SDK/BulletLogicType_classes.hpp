#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BulletLogicType

#include "Basic.hpp"

#include "EBulletType_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "EBulletHitDirectionType_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BulletLogicType.BulletLogicType_C
// 0x0058 (0x0090 - 0x0038)
class UBulletLogicType_C final : public UPrimaryDataAsset
{
public:
	bool                                          _p_0___;                                           // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ______P__;                                         // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          _______;                                           // 0x003A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ______V;                                           // 0x003B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class FName                                   P9____;                                            // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          P9______;                                          // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          P9__UM__;                                          // 0x0049(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EBulletType                                   P9__;                                              // 0x004A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBulletHitDirectionType                       P9________;                                        // 0x004B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Nine__S;                                           // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fourb__;                                           // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  ____;                                              // 0x0058(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 _____S;                                            // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          _e4S;                                              // 0x0088(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          _____;                                             // 0x0089(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BulletLogicType_C">();
	}
	static class UBulletLogicType_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBulletLogicType_C>();
	}
};
static_assert(alignof(UBulletLogicType_C) == 0x000008, "Wrong alignment on UBulletLogicType_C");
static_assert(sizeof(UBulletLogicType_C) == 0x000090, "Wrong size on UBulletLogicType_C");
static_assert(offsetof(UBulletLogicType_C, _p_0___) == 0x000038, "Member 'UBulletLogicType_C::_p_0___' has a wrong offset!");
static_assert(offsetof(UBulletLogicType_C, ______P__) == 0x000039, "Member 'UBulletLogicType_C::______P__' has a wrong offset!");
static_assert(offsetof(UBulletLogicType_C, _______) == 0x00003A, "Member 'UBulletLogicType_C::_______' has a wrong offset!");
static_assert(offsetof(UBulletLogicType_C, ______V) == 0x00003B, "Member 'UBulletLogicType_C::______V' has a wrong offset!");
static_assert(offsetof(UBulletLogicType_C, P9____) == 0x00003C, "Member 'UBulletLogicType_C::P9____' has a wrong offset!");
static_assert(offsetof(UBulletLogicType_C, P9______) == 0x000048, "Member 'UBulletLogicType_C::P9______' has a wrong offset!");
static_assert(offsetof(UBulletLogicType_C, P9__UM__) == 0x000049, "Member 'UBulletLogicType_C::P9__UM__' has a wrong offset!");
static_assert(offsetof(UBulletLogicType_C, P9__) == 0x00004A, "Member 'UBulletLogicType_C::P9__' has a wrong offset!");
static_assert(offsetof(UBulletLogicType_C, P9________) == 0x00004B, "Member 'UBulletLogicType_C::P9________' has a wrong offset!");
static_assert(offsetof(UBulletLogicType_C, Nine__S) == 0x00004C, "Member 'UBulletLogicType_C::Nine__S' has a wrong offset!");
static_assert(offsetof(UBulletLogicType_C, Fourb__) == 0x000050, "Member 'UBulletLogicType_C::Fourb__' has a wrong offset!");
static_assert(offsetof(UBulletLogicType_C, ____) == 0x000058, "Member 'UBulletLogicType_C::____' has a wrong offset!");
static_assert(offsetof(UBulletLogicType_C, _____S) == 0x000078, "Member 'UBulletLogicType_C::_____S' has a wrong offset!");
static_assert(offsetof(UBulletLogicType_C, _e4S) == 0x000088, "Member 'UBulletLogicType_C::_e4S' has a wrong offset!");
static_assert(offsetof(UBulletLogicType_C, _____) == 0x000089, "Member 'UBulletLogicType_C::_____' has a wrong offset!");

}

