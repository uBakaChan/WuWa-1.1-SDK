#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_MonsterCommon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EWalkingPosture_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "KuroAnim_structs.hpp"
#include "KuroAnim_classes.hpp"
#include "EMovementDirection_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "ECharParentMoveState_structs.hpp"
#include "ECharState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EHitAnim_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_MonsterCommon.ABP_MonsterCommon_C
// 0x40A0 (0x4500 - 0x0460)
class UABP_MonsterCommon_C : public UKuroAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_SightLock                    AnimGraphNode_SightLock;                           // 0x0468(0x01B8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0620(0x0138)()
	struct FAnimNode_BoneRotateToLocation         AnimGraphNode_BoneRotateToLocation;                // 0x0758(0x0120)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0878(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_55;                 // 0x08B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_54;                 // 0x08D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_53;                 // 0x0900(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_52;                 // 0x0928(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_51;                 // 0x0950(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_50;                 // 0x0978(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x09A0(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_24;                      // 0x09D0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_37;                   // 0x0A08(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_23;                      // 0x0A98(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0AD0(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_22;                      // 0x0B00(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_4;                      // 0x0B38(0x0148)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x0C80(0x0060)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_49;                 // 0x0CE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_48;                 // 0x0D08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_47;                 // 0x0D30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_46;                 // 0x0D58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_45;                 // 0x0D80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_44;                 // 0x0DA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_43;                 // 0x0DD0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_42;                 // 0x0DF8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_41;                 // 0x0E20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_40;                 // 0x0E48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_39;                 // 0x0E70(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_36;                   // 0x0E98(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_21;                      // 0x0F28(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_35;                   // 0x0F60(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_20;                      // 0x0FF0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_34;                   // 0x1028(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x10B8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_33;                   // 0x10F0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x1180(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_32;                   // 0x11B8(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_31;                   // 0x1248(0x0090)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x12D8(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x1388(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x13C0(0x0148)()
	uint8                                         Pad_1508[0x8];                                     // 0x1508(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x1510(0x01B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x16C0(0x01B0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_38;                 // 0x1870(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_37;                 // 0x1898(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_36;                 // 0x18C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x18E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x1910(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x1938(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x1960(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x1988(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x19B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x19D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x1A00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x1A28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x1A50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x1A78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x1AA0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x1AC8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x1AF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x1B18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x1B40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x1B68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x1B90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x1BB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x1BE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x1C08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x1C30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x1C58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x1C80(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_30;                   // 0x1CA8(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_29;                   // 0x1D38(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_28;                   // 0x1DC8(0x0090)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_4;                   // 0x1E58(0x00C0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x1F18(0x0038)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x1F50(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_27;                   // 0x1F88(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_26;                   // 0x2018(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_25;                   // 0x20A8(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x2138(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x21C8(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x2258(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x22E8(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x2378(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x2408(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x2498(0x0090)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_3;                   // 0x2528(0x00C0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x25E8(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x2620(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x2648(0x0038)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x2680(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x26B8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x2748(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x2780(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x2810(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x2848(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x28D8(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x2968(0x0090)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_2;                   // 0x29F8(0x00C0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x2AB8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x2AF0(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x2B80(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x2C10(0x0090)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x2CA0(0x00C0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x2D60(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x2D98(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x2DC0(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x2E50(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x2EE0(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x2F70(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x3000(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x3090(0x0090)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x3120(0x00C0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x31E0(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x3218(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x3248(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x3280(0x0148)()
	struct FAnimNode_Feedback                     AnimGraphNode_Feedback;                            // 0x33C8(0x0260)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x3628(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x3648(0x0020)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0x3668(0x00C0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x3728(0x0060)()
	uint8                                         Pad_3788[0x8];                                     // 0x3788(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x3790(0x01B0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x3940(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x3968(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x3990(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x39B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x39E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x3A08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x3A30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x3A58(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x3A80(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x3B10(0x0038)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x3B48(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x3B80(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x3C10(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x3C48(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x3CD8(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x3D10(0x0148)()
	uint8                                         Pad_3E58[0x8];                                     // 0x3E58(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x3E60(0x01B0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x4010(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x4038(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x4060(0x0060)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x40C0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x4150(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x4188(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x41B8(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x41F0(0x0148)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x4338(0x0038)()
	class ATsBaseCharacter_C*                     As_Base_Character;                                 // 0x4370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EMovementDirection                            ____;                                              // 0x4378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _60___;                                            // 0x4379(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_437A[0x2];                                     // 0x437A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Delta_Time_X;                                      // 0x437C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWalkingPosture                               Lp__;                                              // 0x4380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ______;                                            // 0x4381(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          __FK;                                              // 0x4382(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ECharState                                    CharMove;                                          // 0x4383(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharParentMoveState                          CharPosition;                                      // 0x4384(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4385[0x3];                                     // 0x4385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkeletonGroup                         Skeleton_Block_Info;                               // 0x4388(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UFK_Shake_AssestData_C*                 FKShakeData;                                       // 0x43A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             NewEventDispatcher_0;                              // 0x43B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FVector                                _____0;                                            // 0x43C0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta;                                             // 0x43CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Increment;                                         // 0x43D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESightLockMode                                CameraMode;                                        // 0x43D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43D5[0x3];                                     // 0x43D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Assist_Limit;                                      // 0x43D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Sight_Bone_Name;                                   // 0x43DC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Begin_Bone_Name;                                   // 0x43E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   End_Bone_Name;                                     // 0x43F4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShakeAlpha;                                        // 0x4400(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ShakeRange;                                        // 0x4404(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPD_CharacterControllerData_C*>  HitMaterial;                                       // 0x4408(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         __e_______;                                        // 0x4418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __;                                                // 0x441C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_441D[0x3];                                     // 0x441D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _______0;                                          // 0x4420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Blend_Alpha;                                       // 0x4424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHitAnim                                      BeHitAnim;                                         // 0x4428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4429[0x7];                                     // 0x4429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           BeHitBones;                                        // 0x4430(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         ToughDecreaseValue;                                // 0x4440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAdditiveBlendAlpha                    _____p_Leg;                                        // 0x4444(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FAdditiveBlendAlpha                    _____p_Pelvis;                                     // 0x4450(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FAdditiveBlendAlpha                    _____p_Spine;                                      // 0x445C(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FAdditiveBlendAlpha                    _____p_Head;                                       // 0x4468(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FAdditiveBlendAlpha                    _____p_Arm_L;                                      // 0x4474(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FAdditiveBlendAlpha                    _____p_Arm_R;                                      // 0x4480(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	uint8                                         Pad_448C[0x4];                                     // 0x448C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CachedTagContainer;                                // 0x4490(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         SighLockAlpha;                                     // 0x44B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ____Minus__3;                                      // 0x44B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CommonMinus__;                                     // 0x44B5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Mn__MinuszMinus;                                   // 0x44B6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          __Minus_J_____;                                    // 0x44B7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TURR;                                              // 0x44B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          _e0b____;                                          // 0x44B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          _____1;                                            // 0x44BA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ___0__;                                            // 0x44BB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TestFkBoolean;                                     // 0x44BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44BD[0x3];                                     // 0x44BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            ShakeCurve;                                        // 0x44C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _S_Stari;                                          // 0x44C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Four_Ik__0__;                                      // 0x44C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44CA[0x2];                                     // 0x44CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                _hMn;                                              // 0x44CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     _hSM_a;                                            // 0x44D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   Bone_Name;                                         // 0x44E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44EC[0x4];                                     // 0x44EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ABPLogicParams_C*                   Ts_____;                                           // 0x44F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __Minus;                                           // 0x44F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          __e___Minus;                                       // 0x44F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void NewEventDispatcher_0__DelegateSignature();
	void ExecuteUbergraph_ABP_MonsterCommon(int32 EntryPoint);
	void AnimNotify______();
	void OnMontageStarted_Event_0(class UAnimMontage* Montage);
	void TestFk();
	void AnimNotify___0b__();
	void AnimNotify__e0b__();
	void AnimNotify______1();
	void AnimNotify______0();
	void AnimNotify_____();
	void OnComponentStart();
	void AnimNotify__e__();
	void PlayShakeFX(int32 Section);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_52DA74EB4EEB034345C1CFBA9BE15A1A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_685FFA67426C7F34E7D82C870BE2E57B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_4DEA819C457E35E72E5F48A5771FEFD9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_8284B9304DC1D9EB88D60CB5D436515F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_85596CB24819748E20B7E98B1D415C01();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_2DD95BC34A3508E4DF6823B128E6DE6A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_C8F75FDB4D43B0F22BC55386C196D222();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_941D22724432AEF11166288E517E2FBD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_FC2F40D248658AA0187D7C8352A6275A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_4CD09B1549F62595BCF402B26D20D1D3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_CAA77B31439383A08DD9A684A49611B0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_121708674083B1DE98AABE9895CD6935();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_1818FB2944DC831E96348689BFC2E103();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_F94DE7AB4AD0228868B37B8FF36C0AC4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_7366C1E545187F21B80550B938A5DFC7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_5EAB3FBD45D1151C215229AC2C31F126();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_508E62324092C81E138EE3AF4C0F9804();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_C3A658974F16AAA828B01A8E65731035();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_258034E6437C7B57D6E043B3453771FB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_564317634942ABF91B0F71AB527A2B54();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_129B3EFD494A5A1711CF67BC0148E387();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_185A4850401F09D0CD7E4586DAC8C9CC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_D3A4A6444A7DE3555091D4A82F1D79C8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_00DAD1AD44A041D8AE0503B2371A84CB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_97A0FF9D49F9556E9F2BD682F6A9A901();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_452A06324EEF39B25ED9789FC2A2EA6E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_C86EBE6742383CB8E30CA7B0BDE2069D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_BBF8CDED4DE5B36B2FB64FBE04E8A785();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_B71ADB3B444FCFB74FBE18879D3C0377();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_E285C5B644D0C7EDEB0867BB1A35D376();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_2A58B9C64010468AE65A28A34150184F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_6AF484B4431B8C14FE283CB297B6B3EC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_148EAF7A4BDBB1686DADE7A597E0A76C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_8FE4732440DE2B2FA8F0D19EE564E538();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_Feedback_51E4B51A468F1A65E6FF64A9A5F4B5CB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_BoneRotateToLocation_0CC2D58648A93DA1CC947D9EA2BA1910();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_153A75684E72D893961594BC7BB4539D();
	void Func________0();
	void ___o__();
	void Func_____(const struct FGameplayTag& Tag, bool* NewParam);
	void _X__(class AActor* Actor, struct FGameplayTagContainer* TargetContainer);
	void ______Tag();
	void ___p___1();
	void ___p___0();
	void Func_______();
	void ___p__();
	void _h_p__();
	void ________(bool* Output);
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void IKAndFk(const struct FPoseLink& InPose, struct FPoseLink* Param_IKAndFk);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_MonsterCommon_C">();
	}
	static class UABP_MonsterCommon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_MonsterCommon_C>();
	}
};
static_assert(alignof(UABP_MonsterCommon_C) == 0x000010, "Wrong alignment on UABP_MonsterCommon_C");
static_assert(sizeof(UABP_MonsterCommon_C) == 0x004500, "Wrong size on UABP_MonsterCommon_C");
static_assert(offsetof(UABP_MonsterCommon_C, UberGraphFrame) == 0x000460, "Member 'UABP_MonsterCommon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SightLock) == 0x000468, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SightLock' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_LinkedInputPose) == 0x000620, "Member 'UABP_MonsterCommon_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_BoneRotateToLocation) == 0x000758, "Member 'UABP_MonsterCommon_C::AnimGraphNode_BoneRotateToLocation' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_Root_1) == 0x000878, "Member 'UABP_MonsterCommon_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_55) == 0x0008B0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_55' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_54) == 0x0008D8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_54' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_53) == 0x000900, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_53' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_52) == 0x000928, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_52' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_51) == 0x000950, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_51' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_50) == 0x000978, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_50' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_UseCachedPose_3) == 0x0009A0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_24) == 0x0009D0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_24' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_37) == 0x000A08, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_37' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_23) == 0x000A98, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_23' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_UseCachedPose_2) == 0x000AD0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_22) == 0x000B00, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_22' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateMachine_4) == 0x000B38, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateMachine_4' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_Slot_2) == 0x000C80, "Member 'UABP_MonsterCommon_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_49) == 0x000CE0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_49' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_48) == 0x000D08, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_48' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_47) == 0x000D30, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_47' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_46) == 0x000D58, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_46' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_45) == 0x000D80, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_45' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_44) == 0x000DA8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_44' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_43) == 0x000DD0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_43' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_42) == 0x000DF8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_42' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_41) == 0x000E20, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_41' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_40) == 0x000E48, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_40' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_39) == 0x000E70, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_39' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_36) == 0x000E98, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_36' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_21) == 0x000F28, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_21' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_35) == 0x000F60, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_35' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_20) == 0x000FF0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_20' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_34) == 0x001028, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_34' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_19) == 0x0010B8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_33) == 0x0010F0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_33' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_18) == 0x001180, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_32) == 0x0011B8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_32' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_31) == 0x001248, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_31' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_BlendListByBool) == 0x0012D8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_17) == 0x001388, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateMachine_3) == 0x0013C0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SaveCachedPose_3) == 0x001510, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SaveCachedPose_2) == 0x0016C0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_38) == 0x001870, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_38' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_37) == 0x001898, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_37' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_36) == 0x0018C0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_36' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_35) == 0x0018E8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_34) == 0x001910, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_33) == 0x001938, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_32) == 0x001960, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_31) == 0x001988, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_30) == 0x0019B0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_29) == 0x0019D8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_28) == 0x001A00, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_27) == 0x001A28, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_26) == 0x001A50, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_25) == 0x001A78, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_24) == 0x001AA0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_23) == 0x001AC8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_22) == 0x001AF0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_21) == 0x001B18, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_20) == 0x001B40, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_19) == 0x001B68, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_18) == 0x001B90, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_17) == 0x001BB8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_16) == 0x001BE0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_15) == 0x001C08, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_14) == 0x001C30, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_13) == 0x001C58, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_12) == 0x001C80, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_30) == 0x001CA8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_30' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_29) == 0x001D38, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_29' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_28) == 0x001DC8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_28' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_BlendListByEnum_4) == 0x001E58, "Member 'UABP_MonsterCommon_C::AnimGraphNode_BlendListByEnum_4' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_16) == 0x001F18, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_15) == 0x001F50, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_27) == 0x001F88, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_27' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_26) == 0x002018, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_26' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_25) == 0x0020A8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_25' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_24) == 0x002138, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_23) == 0x0021C8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_22) == 0x002258, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_21) == 0x0022E8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_20) == 0x002378, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_19) == 0x002408, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_18) == 0x002498, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_BlendListByEnum_3) == 0x002528, "Member 'UABP_MonsterCommon_C::AnimGraphNode_BlendListByEnum_3' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_14) == 0x0025E8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_11) == 0x002620, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_13) == 0x002648, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_12) == 0x002680, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_17) == 0x0026B8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_11) == 0x002748, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_16) == 0x002780, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_10) == 0x002810, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_15) == 0x002848, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_14) == 0x0028D8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_13) == 0x002968, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_BlendListByEnum_2) == 0x0029F8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_BlendListByEnum_2' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_9) == 0x002AB8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_12) == 0x002AF0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_11) == 0x002B80, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_10) == 0x002C10, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_BlendListByEnum_1) == 0x002CA0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_8) == 0x002D60, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_10) == 0x002D98, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_9) == 0x002DC0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_8) == 0x002E50, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_7) == 0x002EE0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_6) == 0x002F70, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_5) == 0x003000, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_4) == 0x003090, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_BlendListByEnum) == 0x003120, "Member 'UABP_MonsterCommon_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_7) == 0x0031E0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_UseCachedPose_1) == 0x003218, "Member 'UABP_MonsterCommon_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_6) == 0x003248, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateMachine_2) == 0x003280, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_Feedback) == 0x0033C8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_Feedback' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_ComponentToLocalSpace) == 0x003628, "Member 'UABP_MonsterCommon_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_LocalToComponentSpace) == 0x003648, "Member 'UABP_MonsterCommon_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_LinkedAnimLayer) == 0x003668, "Member 'UABP_MonsterCommon_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_Slot_1) == 0x003728, "Member 'UABP_MonsterCommon_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SaveCachedPose_1) == 0x003790, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_9) == 0x003940, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_8) == 0x003968, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_7) == 0x003990, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_6) == 0x0039B8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_5) == 0x0039E0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_4) == 0x003A08, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_3) == 0x003A30, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_2) == 0x003A58, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_3) == 0x003A80, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_5) == 0x003B10, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_4) == 0x003B48, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_2) == 0x003B80, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_3) == 0x003C10, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_1) == 0x003C48, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_2) == 0x003CD8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateMachine_1) == 0x003D10, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SaveCachedPose) == 0x003E60, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_1) == 0x004010, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult) == 0x004038, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_Slot) == 0x004060, "Member 'UABP_MonsterCommon_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer) == 0x0040C0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_1) == 0x004150, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_UseCachedPose) == 0x004188, "Member 'UABP_MonsterCommon_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult) == 0x0041B8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateMachine) == 0x0041F0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_Root) == 0x004338, "Member 'UABP_MonsterCommon_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, As_Base_Character) == 0x004370, "Member 'UABP_MonsterCommon_C::As_Base_Character' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, ____) == 0x004378, "Member 'UABP_MonsterCommon_C::____' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, _60___) == 0x004379, "Member 'UABP_MonsterCommon_C::_60___' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, Delta_Time_X) == 0x00437C, "Member 'UABP_MonsterCommon_C::Delta_Time_X' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, Lp__) == 0x004380, "Member 'UABP_MonsterCommon_C::Lp__' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, ______) == 0x004381, "Member 'UABP_MonsterCommon_C::______' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, __FK) == 0x004382, "Member 'UABP_MonsterCommon_C::__FK' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, CharMove) == 0x004383, "Member 'UABP_MonsterCommon_C::CharMove' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, CharPosition) == 0x004384, "Member 'UABP_MonsterCommon_C::CharPosition' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, Skeleton_Block_Info) == 0x004388, "Member 'UABP_MonsterCommon_C::Skeleton_Block_Info' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, FKShakeData) == 0x0043A8, "Member 'UABP_MonsterCommon_C::FKShakeData' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, NewEventDispatcher_0) == 0x0043B0, "Member 'UABP_MonsterCommon_C::NewEventDispatcher_0' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, _____0) == 0x0043C0, "Member 'UABP_MonsterCommon_C::_____0' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, Delta) == 0x0043CC, "Member 'UABP_MonsterCommon_C::Delta' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, Increment) == 0x0043D0, "Member 'UABP_MonsterCommon_C::Increment' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, CameraMode) == 0x0043D4, "Member 'UABP_MonsterCommon_C::CameraMode' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, Assist_Limit) == 0x0043D8, "Member 'UABP_MonsterCommon_C::Assist_Limit' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, Sight_Bone_Name) == 0x0043DC, "Member 'UABP_MonsterCommon_C::Sight_Bone_Name' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, Begin_Bone_Name) == 0x0043E8, "Member 'UABP_MonsterCommon_C::Begin_Bone_Name' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, End_Bone_Name) == 0x0043F4, "Member 'UABP_MonsterCommon_C::End_Bone_Name' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, ShakeAlpha) == 0x004400, "Member 'UABP_MonsterCommon_C::ShakeAlpha' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, ShakeRange) == 0x004404, "Member 'UABP_MonsterCommon_C::ShakeRange' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, HitMaterial) == 0x004408, "Member 'UABP_MonsterCommon_C::HitMaterial' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, __e_______) == 0x004418, "Member 'UABP_MonsterCommon_C::__e_______' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, __) == 0x00441C, "Member 'UABP_MonsterCommon_C::__' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, _______0) == 0x004420, "Member 'UABP_MonsterCommon_C::_______0' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, Blend_Alpha) == 0x004424, "Member 'UABP_MonsterCommon_C::Blend_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, BeHitAnim) == 0x004428, "Member 'UABP_MonsterCommon_C::BeHitAnim' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, BeHitBones) == 0x004430, "Member 'UABP_MonsterCommon_C::BeHitBones' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, ToughDecreaseValue) == 0x004440, "Member 'UABP_MonsterCommon_C::ToughDecreaseValue' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, _____p_Leg) == 0x004444, "Member 'UABP_MonsterCommon_C::_____p_Leg' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, _____p_Pelvis) == 0x004450, "Member 'UABP_MonsterCommon_C::_____p_Pelvis' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, _____p_Spine) == 0x00445C, "Member 'UABP_MonsterCommon_C::_____p_Spine' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, _____p_Head) == 0x004468, "Member 'UABP_MonsterCommon_C::_____p_Head' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, _____p_Arm_L) == 0x004474, "Member 'UABP_MonsterCommon_C::_____p_Arm_L' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, _____p_Arm_R) == 0x004480, "Member 'UABP_MonsterCommon_C::_____p_Arm_R' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, CachedTagContainer) == 0x004490, "Member 'UABP_MonsterCommon_C::CachedTagContainer' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, SighLockAlpha) == 0x0044B0, "Member 'UABP_MonsterCommon_C::SighLockAlpha' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, ____Minus__3) == 0x0044B4, "Member 'UABP_MonsterCommon_C::____Minus__3' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, CommonMinus__) == 0x0044B5, "Member 'UABP_MonsterCommon_C::CommonMinus__' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, Mn__MinuszMinus) == 0x0044B6, "Member 'UABP_MonsterCommon_C::Mn__MinuszMinus' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, __Minus_J_____) == 0x0044B7, "Member 'UABP_MonsterCommon_C::__Minus_J_____' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, TURR) == 0x0044B8, "Member 'UABP_MonsterCommon_C::TURR' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, _e0b____) == 0x0044B9, "Member 'UABP_MonsterCommon_C::_e0b____' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, _____1) == 0x0044BA, "Member 'UABP_MonsterCommon_C::_____1' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, ___0__) == 0x0044BB, "Member 'UABP_MonsterCommon_C::___0__' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, TestFkBoolean) == 0x0044BC, "Member 'UABP_MonsterCommon_C::TestFkBoolean' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, ShakeCurve) == 0x0044C0, "Member 'UABP_MonsterCommon_C::ShakeCurve' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, _S_Stari) == 0x0044C8, "Member 'UABP_MonsterCommon_C::_S_Stari' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, Four_Ik__0__) == 0x0044C9, "Member 'UABP_MonsterCommon_C::Four_Ik__0__' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, _hMn) == 0x0044CC, "Member 'UABP_MonsterCommon_C::_hMn' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, _hSM_a) == 0x0044D8, "Member 'UABP_MonsterCommon_C::_hSM_a' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, Bone_Name) == 0x0044E0, "Member 'UABP_MonsterCommon_C::Bone_Name' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, Ts_____) == 0x0044F0, "Member 'UABP_MonsterCommon_C::Ts_____' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, __Minus) == 0x0044F8, "Member 'UABP_MonsterCommon_C::__Minus' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, __e___Minus) == 0x0044F9, "Member 'UABP_MonsterCommon_C::__e___Minus' has a wrong offset!");

}

