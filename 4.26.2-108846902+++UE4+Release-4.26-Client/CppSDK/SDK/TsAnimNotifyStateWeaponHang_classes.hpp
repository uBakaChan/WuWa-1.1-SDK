#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsAnimNotifyStateWeaponHang

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_classes.hpp"


namespace SDK
{

// TypeScriptGeneratedClass TsAnimNotifyStateWeaponHang.TsAnimNotifyStateWeaponHang_C
// 0x0030 (0x0078 - 0x0048)
class UTsAnimNotifyStateWeaponHang_C final : public UKuroAnimNotifyState
{
public:
	int32                                         Id;                                                // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           ______;                                            // 0x0050(0x0010)(Edit, BlueprintVisible)
	TArray<struct FTransform>                     ____Mn;                                            // 0x0060(0x0010)(Edit, BlueprintVisible)
	int32                                         _____;                                             // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ____;                                              // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);
	bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);

	class FString GetNotifyName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TsAnimNotifyStateWeaponHang_C">();
	}
	static class UTsAnimNotifyStateWeaponHang_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTsAnimNotifyStateWeaponHang_C>();
	}
};
static_assert(alignof(UTsAnimNotifyStateWeaponHang_C) == 0x000008, "Wrong alignment on UTsAnimNotifyStateWeaponHang_C");
static_assert(sizeof(UTsAnimNotifyStateWeaponHang_C) == 0x000078, "Wrong size on UTsAnimNotifyStateWeaponHang_C");
static_assert(offsetof(UTsAnimNotifyStateWeaponHang_C, Id) == 0x000048, "Member 'UTsAnimNotifyStateWeaponHang_C::Id' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateWeaponHang_C, ______) == 0x000050, "Member 'UTsAnimNotifyStateWeaponHang_C::______' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateWeaponHang_C, ____Mn) == 0x000060, "Member 'UTsAnimNotifyStateWeaponHang_C::____Mn' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateWeaponHang_C, _____) == 0x000070, "Member 'UTsAnimNotifyStateWeaponHang_C::_____' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateWeaponHang_C, ____) == 0x000074, "Member 'UTsAnimNotifyStateWeaponHang_C::____' has a wrong offset!");

}

