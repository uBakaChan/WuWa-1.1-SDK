#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SeqNPC

#include "Basic.hpp"

#include "BP_NpcCombinedMesh_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SeqNPC.BP_SeqNPC_C
// 0x0028 (0x03E8 - 0x03C0)
class ABP_SeqNPC_C final : public ABP_NpcCombinedMesh_C
{
public:
	class UABPC_Seq_Body_V2_C*                    ABPC_Body_V2;                                      // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPD_NpcSetupData_C*                     NPC_DA;                                            // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxLod;                                            // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LodBias;                                           // 0x03D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreSockets;                                     // 0x03D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9[0x3];                                      // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TalkID;                                            // 0x03DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TalkID_SP;                                         // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)

public:
	void GetABPC_Body_V2(class UABPC_Seq_Body_V2_C** Param_ABPC_Body_V2);
	bool GetAnimDataFloat(TArray<struct FNamedCurveValue>* FloatCurveData);
	bool GetAnimDataVector(TMap<class FName, struct FVector>* VectorCurveData);
	TArray<class FName> GetSupportGroupNames();
	bool SetAnimDataFloat(const TArray<struct FNamedCurveValue>& FloatCurveData);
	bool SetAnimDataVector(const TMap<class FName, struct FVector>& VectorCurveData);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SeqNPC_C">();
	}
	static class ABP_SeqNPC_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SeqNPC_C>();
	}
};
static_assert(alignof(ABP_SeqNPC_C) == 0x000008, "Wrong alignment on ABP_SeqNPC_C");
static_assert(sizeof(ABP_SeqNPC_C) == 0x0003E8, "Wrong size on ABP_SeqNPC_C");
static_assert(offsetof(ABP_SeqNPC_C, ABPC_Body_V2) == 0x0003C0, "Member 'ABP_SeqNPC_C::ABPC_Body_V2' has a wrong offset!");
static_assert(offsetof(ABP_SeqNPC_C, NPC_DA) == 0x0003C8, "Member 'ABP_SeqNPC_C::NPC_DA' has a wrong offset!");
static_assert(offsetof(ABP_SeqNPC_C, MaxLod) == 0x0003D0, "Member 'ABP_SeqNPC_C::MaxLod' has a wrong offset!");
static_assert(offsetof(ABP_SeqNPC_C, LodBias) == 0x0003D4, "Member 'ABP_SeqNPC_C::LodBias' has a wrong offset!");
static_assert(offsetof(ABP_SeqNPC_C, IgnoreSockets) == 0x0003D8, "Member 'ABP_SeqNPC_C::IgnoreSockets' has a wrong offset!");
static_assert(offsetof(ABP_SeqNPC_C, TalkID) == 0x0003DC, "Member 'ABP_SeqNPC_C::TalkID' has a wrong offset!");
static_assert(offsetof(ABP_SeqNPC_C, TalkID_SP) == 0x0003E0, "Member 'ABP_SeqNPC_C::TalkID_SP' has a wrong offset!");

}

